{"version":3,"sources":["RecordTest.es6"],"names":[],"mappings":"AAAA;;;;AACA,IAAI,MAAM,QAAQ,aAAR,CAAV;AACA,IAAI,SAAS,IAAI,OAAJ,CAAY,QAAZ,GAAb;AACA,IAAI,IAAI,QAAQ,YAAR,CAAR;AACA,IAAI,KAAK,QAAQ,YAAR,CAAT;AACA,IAAI,QAAQ,GAAG,KAAf;AACA,IAAI,KAAK,GAAG,YAAZ;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;;AAEA,SAAS,QAAT,EAAmB,YAAY;AAAA;;AAC3B,SAAK,OAAL,CAAa,KAAb;AACA,QAAI,MAAM,GAAG,QAAH,CAAY,YAAZ,CAAV;AACA,QAAI,MAAM,IAAV;AACA,QAAI,eAAe,IAAnB;AACA,OAAG,gCAAH,4CAAqC;AAAA,YAG7B,GAH6B;AAAA;AAAA;AAAA;AAAA;AACjC,8BAAM,IAAI,GAAJ,EAAN;AACA,8BAAM,UAAN,CAAiB,GAAjB;AAFiC;AAAA,+BAGjB,IAAI,KAAJ,EAHiB;;AAAA;AAG7B,2BAH6B;;AAIjC,4BAAI,MAAJ,CAAW,EAAX,CAAc,IAAd;AACA,uCAAe,IAAI,KAAJ,EAAf;;AALiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;;AAQA,OAAG,MAAH,4CAAW;AAAA,YAGH,GAHG;AAAA;AAAA;AAAA;AAAA;AACP,8BAAM,IAAI,GAAJ,EAAN;AACA,4BAAI,UAAJ,GAAiB,aAAa,UAA9B;AAFO;AAAA,+BAGS,IAAI,IAAJ,EAHT;;AAAA;AAGH,2BAHG;;AAIP,4BAAI,MAAJ,CAAW,EAAX,CAAc,IAAd,CAAmB,aAAnB;AACA,qCAAa,aAAb;;;AAGA,4BAAI,OAAJ,CAAY,YAAZ,EAA0B,MAA1B,CAAiC,EAAjC,CAAoC,IAApC,CAAyC,sBAAzC;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAWA,OAAG,+CAAH,4CAAoD;AAAA,YAC5C,IAD4C,EAE5C,UAF4C,EAG5C,EAH4C,EAM5C,iBAN4C,EAQ5C,GAR4C,EAU5C,GAV4C;AAAA;AAAA;AAAA;AAAA;AAC5C,4BAD4C,GACrC,OADqC;AAE5C,kCAF4C,GAE/B,GAAG,QAAH,CAAY,YAAZ,CAF+B;AAAA;AAAA,+BAGjC,WAAW,KAAX,CAAiB,IAAjB,CAHiC;;AAAA;AAG5C,0BAH4C;;AAIhD,2BAAG,WAAH,IAAkB,CAAlB;AACA,2BAAG,aAAH;AACI,yCAN4C,GAMxB,GAAG,QANqB;;AAOhD,2BAAG,QAAH,IAAe,KAAf;AAPgD;AAAA,+BAQhC,GAAG,IAAH,EARgC;;AAAA;AAQ5C,2BAR4C;;AAShD,4BAAI,MAAJ,CAAW,EAAX,CAAc,KAAd;AACI,2BAV4C,GAUtC,WAAW,GAAX,EAVsC;;AAWhD,4BAAI,KAAJ,GAAY,IAAZ;AAXgD;AAAA,+BAY1C,IAAI,IAAJ,EAZ0C;;AAAA;AAahD,4BAAI,QAAJ,CAAa,MAAb,CAAoB,EAApB,CAAuB,KAAvB,CAA6B,iBAA7B;;AAbgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApD;AAeH,CAvCD","file":"RecordTest.js","sourcesContent":["\"use strict\";\nvar app = require(\"./../../app\")\nvar chance = new require(\"chance\")()\nvar _ = require(\"underscore\")\nvar oo = require(\"openorange\")\nvar Query = oo.query;\nvar cm = oo.classmanager\nvar should = require('should');\nvar async = require('async')\nvar utils = require(\"../utils\")\n\ndescribe(\"Record\", function () {\n    this.timeout(18000)\n    let cls = cm.getClass(\"SalesOrder\");\n    let rec = null;\n    let original_rec = null;\n    it(\"create new record and store it\", async () => {\n        rec = cls.new()\n        utils.fillRecord(rec);\n        let res = await rec.store();\n        res.should.be.true();\n        original_rec = rec.clone();\n    })\n\n    it(\"load\", async () => {\n        rec = cls.new()\n        rec.internalId = original_rec.internalId;\n        var res = await rec.load();\n        res.should.be.true(\"no se grabo\");\n        original_rec.syncOldFields();\n        //console.log(JSON.stringify(rec.toJSON()))\n        //console.log(JSON.stringify(original_rec.toJSON()))\n        rec.isEqual(original_rec).should.be.true(\"registros diferentes\");\n    })\n\n    it(\"Concurrent save (saving with old syncVersion)\", async () => {\n        let sonr = 2222444;\n        let SalesOrder = cm.getClass(\"SalesOrder\");\n        let so = await SalesOrder.bring(sonr)\n        so.syncVersion -= 1\n        so.syncOldFields();\n        let original_custname = so.CustName;\n        so.CustName += 'ABC';\n        let res = await so.save()\n        res.should.be.false();\n        let so2 = SalesOrder.new()\n        so2.SerNr = sonr;\n        await so2.load();\n        so2.CustName.should.be.equal(original_custname)\n    })\n});\n\n"]}