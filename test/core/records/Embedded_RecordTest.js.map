{"version":3,"sources":["Embedded_RecordTest.es6"],"names":[],"mappings":"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","file":"Embedded_RecordTest.js","sourcesContent":["\"use strict\";\n//var app = require(\"./../../app\")\nvar chance = new require(\"chance\")()\nvar _ = require(\"underscore\")\nvar oo = require(\"openorange\")\nvar Query = oo.query;\nvar cm = oo.classmanager\nvar should = require('should');\nvar async = require('async')\nlet utils = null;\n\ndescribe(\"Embedded_Record\", function () {\n    let cls = cm.getClass(\"TestRecord\");\n    let rec = null;\n    let original_rec = null;\n    it(\"create new record and store it\", async () => {\n        rec = cls.new()\n        utils.fillRecord(rec);\n        let res = await rec.store();\n        res.should.be.true();\n        original_rec = rec.clone();\n    })\n\n    it(\"load\", async () => {\n        rec = cls.new()\n        rec.internalId = original_rec.internalId;\n        var res = await rec.load();\n        res.should.be.true(\"no se grabo\");\n        original_rec.syncOldFields();\n        rec.isEqual(original_rec).should.be.true(\"registros diferentes\");\n    })\n\n    it(\"Concurrent store (storing with old syncVersion)\", async () => {\n        rec.syncOldFields()\n        rec.syncVersion -= 1\n        rec.syncOldFields();\n        let oldval = rec.Integer_Field++;\n        let res = await rec.store()\n        res.should.be.false(\"Se grabo cuando el store() deberia haber fallado por edicion concurrente\");\n        let rec2 = cls.new()\n        rec2.internalId = rec.internalId;\n        await rec2.load();\n        rec2.Integer_Field.should.be.equal(oldval, \"El campo se modifico en la base de datos\")\n    })\n\n    it(\"Save OK\", async ()=> {\n        let internalId = rec.internalId;\n        rec = cls.new()\n        rec.internalId = internalId;\n        let res = await rec.load();\n        res.should.be.true();\n        rec.checkReturnValue = true;\n        rec.Integer_Field++;\n        res = await rec.save()\n        res.should.be.true(\"El save no grabo\")\n        should.exist(await cls.findOne({internalId: rec.internalId, Integer_Field: rec.Integer_Field}), \"El save devolvio true, pero el registro no esta en la DB\")\n    })\n\n    it(\"Save with Check fail\", async ()=> {\n        let internalId = rec.internalId;\n        rec = await cls.findOne({internalId: rec.internalId})\n        should.exist(rec);\n        rec.checkReturnValue = false;\n        rec.Integer_Field++;\n        let res = await rec.save()\n        res.should.be.false(\"El save grabo y no deberia haberse grabado\")\n        should.not.exist(await cls.findOne({internalId: rec.internalId, Integer_Field: rec.Integer_Field}), \"El save devolvio false, pero igual grabo el registro\")\n    })\n\n    it(\"Save with beforeInsert fail\", async ()=> {\n        let rec = cls.new()\n        utils.fillRecord(rec)\n        rec.beforeInsertReturnValue = false;\n        let res = await rec.save()\n        should(res).be.false(\"No deberia haber grabado\")\n        should.not.exist(await cls.findOne({internalId: rec.internalId}), \"El save devolvio false, pero igual grabo el registro\")\n    })\n\n    it(\"Save with beforeUpdate fail\", async ()=> {\n        let rec = cls.new()\n        utils.fillRecord(rec)\n        rec.beforeUpdateReturnValue = false;\n        let res = await rec.save()\n        should(res).be.true(\"Deberia haber grabado\")\n        rec.Integer_Field++;\n        res = await rec.save()\n        should(res).be.false(\"No Deberia haber grabado\")\n        should.not.exist(await cls.findOne({internalId: rec.internalId, Integer_Field: rec.Integer_Field}), \"El save devolvio false, pero igual grabo el registro\")\n    })\n});\n\nmodule.exports = function config(utilsModule) {\n    utils = utilsModule\n}"]}