{"version":3,"sources":["ORMBrowserTests.es6"],"names":[],"mappings":"AAAA;;;;;;;;AACA,IAAI,KAAK,QAAQ,YAAR,CAAT;AACA,IAAI,IAAI,QAAQ,YAAR,CAAR;;IAEM,e;;;;;;;;iFACkB,C,EAAE,G,EAAK,E;oBACnB,G,EACA,I,EACA,G,EACK,C,EAGA,E,EACD,M,EAIJ,Q,EACA,U,EAQA,G;;;;;;AApBA,mC,GAAM,GAAG,YAAH,CAAgB,QAAhB,CAAyB,YAAzB,C;AACN,oC,GAAO,GAAG,YAAH,CAAgB,QAAhB,CAAyB,aAAzB,C;AACP,mC,GAAM,IAAI,GAAJ,GAAU,oBAAV,E;;AACV,qCAAS,CAAT,IAAc,IAAI,IAAlB;AAAwB,wCAAI,IAAJ,CAAS,CAAT,EAAY,YAAZ,GAA2B,SAAS,CAApC;AAAxB,iCACA,IAAI,uBAAJ,GAA8B,GAA9B;AACA,oCAAI,WAAJ,GAAkB,UAAU,CAA5B;AACA,qCAAS,EAAT,GAAW,CAAX,EAAa,KAAE,CAAf,EAAiB,IAAjB,EAAsB;AACd,0CADc,GACL,KAAK,GAAL,GAAW,oBAAX,EADK;;AAElB,2CAAO,WAAP,GAAqB,IAAI,WAAzB;AACA,wCAAI,2BAAJ,CAAgC,IAAhC,CAAqC,MAArC;AACH;AACG,wC,GAAW,EAAC,cAAc,EAAf,EAAmB,kBAAkB,EAArC,E;AACX,0C,GAAa,EAAE,IAAI,2BAAN,EAAmC,GAAnC,CAAuC,UAAU,CAAV,EAAa;AAAC,2CAAO,KAAK,SAAL,CAAe,EAAE,MAAF,EAAf,CAAP;AAAkC,iCAAvF,C;;AACjB,2CAAW,IAAX,CAAgB,KAAK,SAAL,CAAe,IAAI,MAAJ,EAAf,CAAhB;AACA,oCAAI,GAAJ,EAAS;AACL,6CAAS,YAAT,GAAwB,UAAxB;AACH,iCAFD,MAEO;AACH,6CAAS,gBAAT,GAA4B,UAA5B;AACH;AACD,mCAAG,QAAH;;uCACgB,IAAI,IAAJ,E;;;AAAZ,mC;;AACJ,wCAAQ,GAAR,CAAY,GAAZ;;qCACI,G;;;;;;uCAAW,GAAG,MAAH,E;;;;;;;;;;;;;;;;;;;;;AAKvB,gBAAgB,eAAhB,GAAkC,EAAC,UAAU,UAAX,EAAlC;AACA,OAAO,OAAP,GAAiB,eAAjB","file":"ORMBrowserTests.js","sourcesContent":["\"use strict\";\nlet oo = require(\"openorange\")\nlet _ = require(\"underscore\")\n\nclass ORMBrowserTests {\n    static async test1 (t,bir, cb) {\n        let cls = oo.classmanager.getClass(\"TestRecord\")\n        let cls2 = oo.classmanager.getClass(\"TestRecord2\")\n        let rec = cls.new().fillWithRandomValues();\n        for (let i in rec.Rows) rec.Rows[i].String_Field = 'ROW ' + t;\n        rec.beforeInsertReturnValue = bir;\n        rec.SubTestName = 'TEST ' + t;\n        for (let i=0;i<3;i++) {\n            let record = cls2.new().fillWithRandomValues()\n            record.SubTestName = rec.SubTestName\n            rec.beforeInsert_recordsToStore.push(record);\n        }\n        let response = {should_exist: [], should_not_exist: []}\n        let saved_recs = _(rec.beforeInsert_recordsToStore).map(function (r) {return JSON.stringify(r.toJSON())});\n        saved_recs.push(JSON.stringify(rec.toJSON()));\n        if (bir) {\n            response.should_exist = saved_recs\n        } else {\n            response.should_not_exist = saved_recs\n        }\n        cb(response)\n        let res = await rec.save();\n        console.log(res)\n        if (res) await oo.commit()\n    }\n\n}\n\nORMBrowserTests.__description__ = {filename: __filename}\nmodule.exports = ORMBrowserTests;"]}