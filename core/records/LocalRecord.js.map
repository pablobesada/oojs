{"version":3,"sources":["LocalRecord.es6"],"names":[],"mappings":"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","file":"LocalRecord.js","sourcesContent":["\"use strict\"\nvar cm = require('openorange').classmanager\nlet _ = require(\"underscore\")\n\nlet Description = {\n    name: 'LocalRecord',\n    inherits: 'Record',\n    filename: __filename\n}\n\nvar Parent = cm.SuperClass(Description)\n\nclass LocalRecord extends Parent {\n    static initClass(description) {\n        super.initClass(description)\n        this.__storage_table_name__ = 'oo_table_' + this.__description__.name;\n        this.__records__ = []\n        this.__fetched__ = false;\n        return this\n    }\n\n    static getTableName() {\n        return this.__storage_table_name__\n    }\n\n    static getAllRecords() {\n        if (!this.__fetched__) this.__fetchRecords__();\n        return this.__records__;\n    }\n\n    static checkFetched() {\n        if (!this.__class__.__fetched__) this.__class__.__fetchRecords__();\n    }\n\n    static __fetchRecords__() {\n        let cls = this\n        let s = localStorage.getItem(\"oo_table_\" + this.__description__.name);\n        if (s == null) {\n            s = JSON.stringify(LocalRecord.records);\n            localStorage.setItem(this.getTableName(), s)\n        }\n        //var records =  _(result.response).map(function (jsonrec) {return Record.fromJSON(jsonrec)})\n        let json = JSON.parse(s)\n        this.__records__ = _(json).map(function (jsonrec) {return cls.fromJSON(jsonrec)})\n        this.__fetched__ = true;\n    }\n\n    static __updateStorage__() {\n        let cls = this;\n        let s = JSON.stringify(_(cls.__records__).map(function (rec) {return rec.toJSON()}))\n        localStorage.setItem(this.getTableName(), s)\n    }\n\n    constructor() {\n        super()\n    }\n\n    load() {\n        let records = this.__class__.getAllRecords();\n        let whereClause = {}\n        for (let i in this.fieldNames()) {\n            let fn = this.fieldNames()[i];\n            if (this[fn] != null) whereClause[fn] = this[fn]\n        }\n        if (whereClause == {}) return false;\n        for (let i in records) {\n            let record = records[i];\n            let found = true;\n            for (let fn in whereClause) {\n                if (record[fn] != whereClause[fn]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                LocalRecord.fromJSON(record.toJSON(), this) //medio feo, pero efectivo\n                this.syncOldFields()\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async store() {\n        if (!this.isNew() && !this.isModified()) return true;\n        let records = this.__class__.getAllRecords()\n        if (this.isNew()) {\n            records.push(this);\n            this.internalId = records.length;\n            this.syncVersion++;\n            this.setNewFlag(false)\n        } else {\n            let updated = false;\n            for (let i=0;i<records.length; i++) {\n                if (records[i].internalId == this.internalId) {\n                    this.syncVersion++;\n                    records[i] = this;\n                    updated = true;\n                    break;\n                }\n            }\n            if (!updated) {\n                console.log(\"No se pudo actualizar el registro local\", this)\n                return false;\n            }\n        }\n        this.__class__.__records__ = records;\n        this.__class__.__updateStorage__();\n        this.syncOldFields();\n        return true;\n    }\n\n    async save() {\n        return super.save()\n    }\n\n}\n\nmodule.exports = LocalRecord.initClass(Description)"]}