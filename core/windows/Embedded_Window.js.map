{"version":3,"sources":["Embedded_Window.es6"],"names":[],"mappings":"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","file":"Embedded_Window.js","sourcesContent":["\"use strict\";\n\nvar oo = require(\"openorange\")\nvar _ = require(\"underscore\")\n\nvar WindowDescription = {\n    name: 'Embedded_Window',\n    inherits: null,\n    filename: __filename,\n}\n\nclass Embedded_Window {\n    static new() {\n        var res = new this()\n        return res;\n    }\n\n    open() {\n        var wm = Object.create(oo.windowmanager).init(this)\n        wm.render($('#content')[0])\n    }\n\n    setFocus() {\n        oo.windowmanager.setFocus(this)\n    }\n\n    static initClass(descriptor) {\n        //var childclass = Object.create(this)\n        let parentdesc = this.__description__;\n        let newdesc = {};\n        newdesc.name = descriptor.name;\n        newdesc.title = descriptor.title;\n        newdesc.recordClass = descriptor.record\n        newdesc.form = descriptor.form || parentdesc.form;\n        if (descriptor.override) {\n            newdesc.form = this.applyFormOverride(newdesc.form, descriptor.override)\n        }\n        newdesc.filename = descriptor.filename;\n        this.__description__ = newdesc;\n        this.__recordClass__ = null;\n        this.__super__ = Reflect.getPrototypeOf(this)\n        return this;\n    }\n\n    constructor() {\n        this.__class__ = this.constructor\n        this.__record__ = null;\n        this.__listeners__ = []\n        this.__title__ = this.__class__.__description__.title;\n    }\n\n    addListener(listener) {\n        this.__listeners__.push(listener)\n    }\n\n    notifyListeners(event) {\n        _(this.__listeners__).forEach(function (listener) {\n            listener.update(event);\n        })\n    }\n\n    getRecordClass() {\n        if (this.__class__.__recordClass__ == null && this.__class__.__description__.recordClass) {\n            this.__class__.__recordClass__ = oo.classmanager.getClass(this.__class__.__description__.recordClass)\n        }\n        return this.__class__.__recordClass__\n    }\n\n    static tryCall(self, defaultResponse, methodname) {\n        if (methodname == null) throw new Error(\"methodname can not be null\")\n        if (methodname in this.prototype) {\n            return this.prototype[methodname].apply(self, Array.prototype.slice.apply(arguments).slice(2));\n        } else {\n            return defaultResponse;\n        }\n    }\n\n    static getDescription() {\n        return this.__description__\n    }\n\n    inspect() {\n        return \"<\" + this.__description__.name + \", from \" + this.__filename__ + \">\"\n    }\n\n    getOriginalTitle() {\n        return this.__class__.__description__.title\n    }\n\n    getTitle() {\n        return this.getOriginalTitle();\n    }\n\n    notifyTitleChanged() {\n        this.notifyListeners({type: \"title\", action: \"modified\", data: this.getTitle()})\n    }\n\n    setTitle(title) {\n        this.__title__ = title;\n        this.notifyListeners({type: \"title\", action: \"modified\", data: title})\n    }\n\n    setRecord(rec) {\n        if (this.__record__ != rec) {\n            this.__record__ = rec;\n            this.__record__.addListener(this)\n            this.notifyListeners({type: 'record', action: 'replaced', data: rec});\n        }\n    }\n\n    fieldModified(record, field, row, rowfield, oldvalue) {\n        this.notifyListeners({\n            type: 'field', action: 'modified', data: {\n                record: record,\n                field: field,\n                row: row,\n                rowfield: rowfield,\n                oldvalue: oldvalue\n            }\n        })\n    }\n\n    rowInserted(record, detail, row, position) {\n        this.notifyListeners({\n            type: 'field', action: 'row inserted', data: {\n                record: record,\n                detail: detail,\n                row: row,\n                position: position\n            }\n        })\n    }\n\n    detailCleared(record, detail, row, position) {\n        this.notifyListeners({\n            type: 'field', action: 'detail cleared', data: {\n                record: record,\n                detail: detail,\n            }\n        })\n    }\n\n    getRecord(rec) {\n        return this.__record__\n    }\n\n    beforeEdit(fieldname) {\n        var self = this;\n        var res = true;\n        if ('focus ' + fieldname in self) {\n            res = self['focus ' + fieldname]()\n            return res;\n        }\n        res = self.getRecord().fieldIsEditable(fieldname);\n        return res;\n    }\n\n    beforeEditRow(fieldname, rowfieldname, rownr) {\n        var self = this;\n        var res = true;\n        if ('focus ' + fieldname + \".\" + rowfieldname in self) {\n            res = self['focus ' + fieldname + \".\" + rowfieldname]()\n            return res;\n        }\n        res = self.getRecord().fieldIsEditable(fieldname, rowfieldname, rownr);\n        return res;\n    }\n\n    async call_afterEdit(fieldname, value) {\n        var self = this;\n        //console.log(self.getRecord())\n        self.getRecord()[fieldname] = value;\n        //console.log(self.getRecord()[fieldname])\n        if ('changed ' + fieldname in self) {\n            return await this['changed ' + fieldname]()\n        }\n    }\n\n    async afterEditRow(fieldname, rowfieldname, rownr, value) {\n        var self = this;\n        self.getRecord()[fieldname][rownr][rowfieldname] = value;\n        if ('changed ' + fieldname + '.' + rowfieldname in this) {\n            this['changed ' + fieldname + '.' + rowfieldname](rownr)\n        }\n    }\n\n    async save() {\n        var rec = this.getRecord();\n        if (rec != null) return rec.save();\n        return false;\n    }\n\n    static applyFormOverride(form, patcheslist, path) {\n        let findNodePath = function findNodePath(json, name, path) {\n            if (json instanceof Array) {\n                for (let i=0;i<json.length;i++) {\n                    path.push(i)\n                    let res = findNodePath(json[i], name, path)\n                    if (res) return true;\n                    path.pop()\n                }\n            }\n            console.log(json)\n            if (json.name == name) {\n                return true;\n            }\n            let attr = 'content' in json? 'content': 'columns' in json? 'columns' : 'pages' in json? 'pages' : null\n            if (attr) {\n                path.push(attr)\n                let res = findNodePath(json[attr], name, path)\n                if (res) return true;\n                path.pop()\n            }\n            return false;\n        }\n\n        let newform = form;\n        for (let i in patcheslist) {\n            let patch = patcheslist[i];\n            if ('addafter' in patch || 'addbefore' in patch || 'replace' in patch || 'remove' in patch) {\n                let action = 'addafter' in patch? 'addafter' : 'addbefore' in patch? 'addbefore' : 'replace' in patch? 'replace' : 'remove';\n                let nodepath = []\n                let res = findNodePath(form, patch[action], nodepath);\n                if (res) {\n                    let nodeidx = nodepath.pop();\n                    let parentnode = form;\n                    for (let j=0;j<nodepath.length;j++) parentnode = parentnode[nodepath[j]];\n                    switch (action) {\n                        case 'addafter':\n                            parentnode.splice(nodeidx+1, 0, patch.content);\n                            break;\n                        case 'addbefore':\n                            parentnode.splice(nodeidx, 0, patch.content);\n                            break;\n                        case 'replace':\n                            parentnode.splice(nodeidx, 1, patch.content);\n                            break;\n                        case 'remove':\n                            parentnode.splice(nodeidx, 1);\n                            break;\n                    }\n                }\n            } else if ('add') {\n                form.push(patch.add)\n            } else {\n                throw new Error(\"Form override error. Wrong action. Needs to be addbefore, addafter, replace, add or remove.\")\n            }\n        }\n        return newform\n    }\n}\n\nEmbedded_Window.__description__ = WindowDescription\n\nmodule.exports = Embedded_Window\n"]}