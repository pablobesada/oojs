{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,GAAkB,MAAlB;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,UAAU,QAAQ,iBAAR,CAAd;;AAEA,IAAI,aAAa,QAAQ,eAAR,EAAyB,OAAzB,CAAjB;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;AAEA,IAAI,cAAc,MAAM,YAAN,EAAlB;;AAEA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,gBAAR,CAAZ;AACA,IAAI,gBAAgB,QAAQ,WAAR,CAApB;AACA,IAAI,KAAK,QAAQ,qBAAR,CAAT;;AAEA,IAAI,MAAM,SAAV;;;AAGA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;;;AAIA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;;AAEA,IAAI,GAAJ,CAAQ,QAAQ;AACZ,YAAQ,sBADI;;AAGZ,WAAO,IAAI,UAAJ,CAAe,EAAC,MAAM,WAAP,EAAoB,MAAM,IAA1B,EAAgC,QAAQ,WAAxC,EAAqD,KAAK,GAA1D,EAAf,CAHK;AAIZ,uBAAmB,KAJP;AAKZ,YAAQ;AALI,CAAR,CAAR;;AAQA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,KAAX,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;;AAEA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,MAAb;AACA,IAAI,GAAJ,CAAQ,UAAR,EAAoB,aAApB;AACA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,KAAlB;;;;AAIA,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC9B,QAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,QAAI,MAAJ,GAAa,GAAb;AACA,SAAK,GAAL;AACH,CAJD;;;;;;AAUA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AAClC,QAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACnC,YAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,YAAI,MAAJ,CAAW,OAAX,EAAoB;AAChB,qBAAS,IAAI,OADG;AAEhB,mBAAO;AAFS,SAApB;AAIH,KAND;AAOH;;;;AAID,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACnC,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,QAAI,MAAJ,CAAW,OAAX,EAAoB;AAChB,iBAAS,IAAI,OADG;AAEhB,eAAO;AAFS,KAApB;AAIH,CAND;;AAQA,IAAI,MAAJ,GAAa,MAAb;AACA,OAAO,OAAP,GAAiB,GAAjB","file":"app-compiled.js","sourcesContent":["global.__main__ = module\nvar express = require('express');\n\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar session = require('express-session');\n\nvar redisStore = require('connect-redis')(session);\nvar redis = require(\"redis\");\n\nvar redisClient = redis.createClient()\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar clientRuntime = require('./runtime');\nvar db = require('./openorange/lib/db');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\n\napp.use(session({\n    secret: 'oojs secret awxsdecf',\n    // create new redis store.\n    store: new redisStore({host: 'localhost', port: 6379, client: redisClient, ttl: 260}),\n    saveUninitialized: false,\n    resave: false\n}));\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\n//app.use(require('node-compass')({mode: 'expanded'}));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/runtime', clientRuntime);\napp.use('/users', users);\n//app.use('/db', db);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use(function (err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function (err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\napp.module = module\nmodule.exports = app;\n//redisClient.quit()\n"]}