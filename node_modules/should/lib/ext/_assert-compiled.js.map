{"version":3,"sources":["_assert.js"],"names":[],"mappings":"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","file":"_assert-compiled.js","sourcesContent":["// implement assert interface using already written peaces of should.js\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// when used in node, this will actually load the util module we depend on\n// versus loading the builtin util module as happens otherwise\n// this is a bug in node module loading as far as I am concerned\nvar Assertion = require('./../assertion');\n\nvar _deepEqual = require('should-equal');\n\nvar pSlice = Array.prototype.slice;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n/**\n * Node.js standard [`assert.fail`](http://nodejs.org/api/assert.html#assert_assert_fail_actual_expected_message_operator).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual Actual object\n * @param {*} expected Expected object\n * @param {string} message Message for assertion\n * @param {string} operator Operator text\n */\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  var a = new Assertion(actual);\n  a.params = {\n    operator: operator,\n    expected: expected,\n    message: message,\n    stackStartFunction: stackStartFunction || fail\n  };\n\n  a.fail();\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n/**\n * Node.js standard [`assert.ok`](http://nodejs.org/api/assert.html#assert_assert_value_message_assert_ok_value_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} value\n * @param {string} [message]\n */\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\n/**\n * Node.js standard [`assert.equal`](http://nodejs.org/api/assert.html#assert_assert_equal_actual_expected_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n/**\n * Node.js standard [`assert.notEqual`](http://nodejs.org/api/assert.html#assert_assert_notequal_actual_expected_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n/**\n * Node.js standard [`assert.deepEqual`](http://nodejs.org/api/assert.html#assert_assert_deepequal_actual_expected_message).\n * But uses should.js .eql implementation instead of Node.js own deepEqual.\n *\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected).result) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n/**\n * Node.js standard [`assert.notDeepEqual`](http://nodejs.org/api/assert.html#assert_assert_notdeepequal_actual_expected_message).\n * But uses should.js .eql implementation instead of Node.js own deepEqual.\n *\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected).result) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n/**\n * Node.js standard [`assert.strictEqual`](http://nodejs.org/api/assert.html#assert_assert_strictequal_actual_expected_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n/**\n * Node.js standard [`assert.notStrictEqual`](http://nodejs.org/api/assert.html#assert_assert_notstrictequal_actual_expected_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {*} actual\n * @param {*} expected\n * @param {string} [message]\n */\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof expected == 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ')' : '.') +\n  (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected && !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n/**\n * Node.js standard [`assert.throws`](http://nodejs.org/api/assert.html#assert_assert_throws_block_error_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {Function} block\n * @param {Function} [error]\n * @param {String} [message]\n */\nassert.throws = function(/*block, error, message*/) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\n/**\n * Node.js standard [`assert.doesNotThrow`](http://nodejs.org/api/assert.html#assert_assert_doesnotthrow_block_message).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {Function} block\n * @param {String} [message]\n */\nassert.doesNotThrow = function(/*block, message*/) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\n/**\n * Node.js standard [`assert.ifError`](http://nodejs.org/api/assert.html#assert_assert_iferror_value).\n * @static\n * @memberOf should\n * @category assertion assert\n * @param {Error} err\n */\nassert.ifError = function(err) {\n  if (err) {\n    throw err;\n  }\n};\n"]}