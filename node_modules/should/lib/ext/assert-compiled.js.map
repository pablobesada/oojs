{"version":3,"sources":["assert.js"],"names":[],"mappings":";;;;;;;AAOA,IAAI,OAAO,QAAQ,SAAR,CAAX;AACA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,iBAAiB,QAAQ,oBAAR,CAArB;;AAEA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAiB;AAChC,MAAI,IAAI,OAAO,MAAf;;;;;;;;;;;AAWA,OAAK,KAAL,CAAW,MAAX,EAAmB,MAAnB;;;;;;;;;;;;;;;;AAgBA,SAAO,KAAP,GAAe,OAAO,MAAP,GAAgB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAChD,QAAI,QAAQ,GAAZ,EAAiB;AACf,YAAM,IAAI,cAAJ,CAAmB;AACvB,iBAAS,OAAQ,cAAc,EAAE,GAAF,CAAd,GAAuB,WADjB,EAC+B,oBAAoB,OAAO;AAD1D,OAAnB,CAAN;AAGD;AACF,GAND;;AAQA,SAAO,GAAP,GAAa,EAAb;;;;;;;;;;;;;;;;AAgBA,SAAO,GAAP,CAAW,KAAX,GAAmB,OAAO,GAAP,CAAW,MAAX,GAAoB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACxD,QAAI,QAAQ,GAAZ,EAAiB;AACf,YAAM,IAAI,cAAJ,CAAmB;AACvB,iBAAS,OAAQ,cAAc,EAAE,GAAF,CAAd,GAAuB,eADjB,EACmC,oBAAoB,OAAO,GAAP,CAAW;AADlE,OAAnB,CAAN;AAGD;AACF,GAND;AAOD,CA3DD","file":"assert-compiled.js","sourcesContent":["/*\n * should.js - assertion library\n * Copyright(c) 2010-2013 TJ Holowaychuk <tj@vision-media.ca>\n * Copyright(c) 2013-2016 Denis Bardadym <bardadymchik@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('../util');\nvar assert = require('./_assert');\nvar AssertionError = require('../assertion-error');\n\nmodule.exports = function(should) {\n  var i = should.format;\n\n  /*\n   * Expose assert to should\n   *\n   * This allows you to do things like below\n   * without require()ing the assert module.\n   *\n   *    should.equal(foo.bar, undefined);\n   *\n   */\n  util.merge(should, assert);\n\n  /**\n   * Assert _obj_ exists, with optional message.\n   *\n   * @static\n   * @memberOf should\n   * @category assertion assert\n   * @alias should.exists\n   * @param {*} obj\n   * @param {String} [msg]\n   * @example\n   *\n   * should.exist(1);\n   * should.exist(new Date());\n   */\n  should.exist = should.exists = function(obj, msg) {\n    if (null == obj) {\n      throw new AssertionError({\n        message: msg || ('expected ' + i(obj) + ' to exist'), stackStartFunction: should.exist\n      });\n    }\n  };\n\n  should.not = {};\n  /**\n   * Asserts _obj_ does not exist, with optional message.\n   *\n   * @name not.exist\n   * @static\n   * @memberOf should\n   * @category assertion assert\n   * @alias should.not.exists\n   * @param {*} obj\n   * @param {String} [msg]\n   * @example\n   *\n   * should.not.exist(null);\n   * should.not.exist(void 0);\n   */\n  should.not.exist = should.not.exists = function(obj, msg) {\n    if (null != obj) {\n      throw new AssertionError({\n        message: msg || ('expected ' + i(obj) + ' to not exist'), stackStartFunction: should.not.exist\n      });\n    }\n  };\n};\n"]}