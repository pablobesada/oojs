{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,aAAR,CAAd;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,iBAAiB,OAAO,SAAP,CAAiB,cAAtC;;AAEA,SAAS,UAAT,CAAoB,CAApB,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,CAArC,EAAwC,CAAxC,EAA2C;AACzC,MAAI,IAAI,EAAC,QAAQ,CAAT,EAAR;AACA,MAAG,CAAC,CAAJ,EAAO;AACL,MAAE,IAAF,GAAS,IAAT;AACA,MAAE,MAAF,GAAW,MAAX;AACA,MAAE,CAAF,GAAM,CAAN;AACA,MAAE,CAAF,GAAM,CAAN;AACD;AACD,SAAO,CAAP;AACD;;AAED,IAAI,SAAS,WAAW,IAAX,CAAb;;AAEA,SAAS,YAAT,CAAsB,CAAtB,EAAyB;AACvB,SAAO,EAAE,IAAF,IAAU,EAAE,GAAF,GAAQ,MAAM,EAAE,GAAR,IAAe,EAAE,GAAF,GAAQ,MAAM,EAAE,GAAhB,GAAsB,EAArC,IAA2C,GAAnD,GAAyD,EAAnE,CAAP;AACD;;AAID,IAAI,SAAS;AACX,sBAAoB,uBADT;AAEX,mBAAiB,iCAFN;AAGX,cAAY,gCAHD;AAIX,YAAU,qBAJC;AAKX,sBAAoB,mCALT;AAMX,iBAAe,iDANJ;AAOX,oBAAkB,wEAPP;AAQX,eAAa,kBARF;AASX,mBAAiB,qEATN;AAUX,uBAAqB,qBAVV;AAWX,sBAAoB;AAXT,CAAb;;AAeA,SAAS,UAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,IAA1B,EAAgC,MAAhC,EAAwC,MAAxC,EAAgD,IAAhD,EAAsD,KAAtD,EAA6D;AAC3D,MAAI,IAAI,MAAR;;AAEA,WAAS,MAAT,CAAgB,UAAhB,EAA4B,MAA5B,EAAoC;AAClC,QAAG,UAAU,MAAV,GAAmB,CAAtB,EAAyB;AACvB,UAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AACA,eAAS,OAAO,KAAP,CAAa,IAAb,EAAmB,CAAC,MAAD,EAAS,MAAT,CAAgB,IAAhB,CAAnB,CAAT;AACD;AACD,QAAI,MAAM,WAAW,UAAX,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,CAArC,EAAwC,CAAxC,CAAV;AACA,QAAG,CAAC,UAAD,IAAe,KAAK,eAAvB,EAAwC;AACtC,YAAM,IAAN,CAAW,GAAX;AACD;AACD,WAAO,GAAP;AACD;;AAED,WAAS,qBAAT,CAA+B,QAA/B,EAAyC;AACvC,WAAO,WAAW,EAAE,QAAF,CAAX,EAAwB,EAAE,QAAF,CAAxB,EAAqC,IAArC,EAA2C,MAA3C,EAAmD,MAAnD,EAA2D,KAAK,MAAL,CAAY,CAAC,QAAD,CAAZ,CAA3D,EAAoF,KAApF,CAAP;AACD;;AAED,WAAS,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B;AACzB,WAAO,WAAW,EAAX,EAAe,EAAf,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,IAAzC,EAA+C,KAA/C,CAAP;AACD;;;AAGD,MAAG,MAAM,CAAT,EAAY;;AAEV,WAAO,OAAO,MAAM,CAAN,IAAY,IAAI,CAAJ,IAAS,IAAI,CAAzB,IAA+B,KAAK,yBAA3C,EAAsE,OAAO,kBAA7E,CAAP;AACD;;AAED,MAAI,CAAJ,EAAO,CAAP;;AAEA,MAAI,QAAQ,QAAQ,CAAR,CAAZ;MACE,QAAQ,QAAQ,CAAR,CADV;;AAGA,MAAI,GAAJ;;;AAGA,MAAI,gBAAgB,MAAM,IAAN,KAAe,MAAM,IAArB,IAA6B,MAAM,GAAN,KAAc,MAAM,GAArE;;AAEA,MAAG,iBAAmB,KAAK,YAAL,IAAqB,MAAM,GAAN,KAAc,MAAM,GAA1C,IAAkD,CAAC,KAAK,YAA7E,EAA4F;AAC1F,WAAO,OAAO,KAAP,EAAc,OAAO,eAArB,EAAsC,aAAa,KAAb,CAAtC,EAA2D,aAAa,KAAb,CAA3D,CAAP;AACD;;;AAGD,UAAO,MAAM,IAAb;AACE,SAAK,QAAL;;AAEE,aAAQ,MAAM,CAAP,GAAY,OAAO,MAAM,CAAb,EAAgB,OAAO,UAAvB,CAAZ,GACH,OAAO,MAAM,CAAb,EAAgB,OAAO,QAAvB,CADJ;;AAGF,SAAK,SAAL;AACA,SAAK,QAAL;AACE,aAAO,OAAO,MAAM,CAAb,EAAgB,OAAO,QAAvB,CAAP;;AAEF,SAAK,UAAL;;AAEE,UAAI,UAAU,EAAE,QAAF,EAAV,EAAwB,EAAE,QAAF,EAAxB,CAAJ;AACA,UAAG,CAAC,EAAE,MAAN,EAAc;AACZ,UAAE,MAAF,GAAW,OAAO,gBAAlB;AACA,YAAG,CAAC,KAAK,eAAT,EAA0B,OAAO,CAAP;AAC3B;;AAED,Y;;AAEF,SAAK,QAAL;;AAEE,cAAO,MAAM,GAAb;;;AAGE,aAAK,QAAL;AACE,cAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,WAArB,EAAkC,WAAlC,EAA+C,YAA/C,CAAJ;AACA,iBAAM,EAAE,MAAR,EAAgB;AACd,gBAAI,sBAAsB,EAAE,KAAF,EAAtB,CAAJ;AACA,gBAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;AACxC;AACD,gB;;;AAGF,aAAK,MAAL;AACE,cAAG,CAAC,CAAD,KAAO,CAAC,CAAX,EAAc;AACZ,gBAAI,OAAO,KAAP,EAAc,OAAO,QAArB,CAAJ;AACA,gBAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;AACxC;AACD,gB;;;AAGF,aAAK,QAAL;AACA,aAAK,SAAL;AACA,aAAK,QAAL;;AAEE,cAAI,UAAU,EAAE,OAAF,EAAV,EAAuB,EAAE,OAAF,EAAvB,CAAJ;AACA,cAAG,CAAC,EAAE,MAAN,EAAc;AACZ,cAAE,MAAF,GAAW,OAAO,aAAlB;AACA,gBAAG,CAAC,KAAK,eAAT,EAA0B,OAAO,CAAP;AAC3B;AACD,gB;;;AAGF,aAAK,QAAL;;AAEE,cAAI,sBAAsB,QAAtB,CAAJ;AACA,cAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;;AAEvC,cAAI,EAAE,MAAN;AACA,iBAAM,GAAN,EAAW;AACT,gBAAI,sBAAsB,CAAtB,CAAJ;AACA,gBAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;AACxC;;;;AAID,iBAAO,MAAP;;AAEF,aAAK,OAAL;;AAEE,cAAI,CAAC,MAAD,EAAS,SAAT,CAAJ;AACA,iBAAM,EAAE,MAAR,EAAgB;AACd,gBAAI,sBAAsB,EAAE,KAAF,EAAtB,CAAJ;AACA,gBAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;AACxC;;AAED,gB;;AAEF,aAAK,OAAL;AACA,aAAK,WAAL;AACA,aAAK,aAAL;AACE,cAAI,sBAAsB,QAAtB,CAAJ;AACA,cAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;;AAEvC,gB;;AAEF,aAAK,cAAL;AACE,cAAI,sBAAsB,YAAtB,CAAJ;AACA,cAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;;AAEvC,gB;;AAEF,aAAK,KAAL;AACA,aAAK,KAAL;AACE,cAAI,sBAAsB,MAAtB,CAAJ;AACA,cAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;;AAEvC,iBAAO,IAAP,CAAY,CAAZ;AACA,iBAAO,IAAP,CAAY,CAAZ;;AAEA,cAAI,MAAM,EAAE,OAAF,EAAV;AACA,cAAI,QAAQ,IAAI,IAAJ,EAAZ;;AAEA,iBAAM,CAAC,MAAM,IAAb,EAAmB;AACjB,kBAAM,MAAM,KAAN,CAAY,CAAZ,CAAN;;;AAGA,gBAAG,QAAQ,GAAR,EAAa,IAAb,IAAqB,QAAxB,EAAkC;AAChC,kBAAG,EAAE,GAAF,CAAM,GAAN,CAAH,EAAe;AACb,oBAAG,MAAM,GAAN,IAAa,KAAhB,EAAuB;;AAErB,sBAAI,QAAQ,EAAE,GAAF,CAAM,GAAN,CAAZ;AACA,sBAAI,UAAU,MAAM,KAAN,CAAY,CAAZ,CAAV,EAA0B,KAA1B,CAAJ;AACA,sBAAG,CAAC,EAAE,MAAN,EAAc;AACZ,sBAAE,CAAF,GAAM,MAAM,KAAZ;AACA,sBAAE,CAAF,GAAM,KAAN;AACA,sBAAE,MAAF,GAAW,OAAO,kBAAlB;;AAEA,wBAAG,CAAC,KAAK,eAAT,EAA0B;AAC3B;AACF;AAEF,eAdD,MAcO;AACL,oBAAI,OAAO,KAAP,EAAc,OAAO,mBAArB,CAAJ;AACA,kBAAE,CAAF,GAAM,GAAN;AACA,kBAAE,CAAF,GAAM,GAAN;;AAEA,oBAAG,CAAC,KAAK,eAAT,EAA0B;AAC3B;AACF,aAtBD,MAsBO;;;AAGL,kBAAI,MAAM,EAAE,OAAF,EAAV;AACA,kBAAI,QAAQ,IAAI,IAAJ,EAAZ;;AAEA,qBAAM,CAAC,MAAM,IAAb,EAAmB;;AAEjB,oBAAI,UAAU,MAAM,KAAN,CAAY,CAAZ,CAAV,EAA0B,MAAM,KAAN,CAAY,CAAZ,CAA1B,CAAJ;;AAEA,oBAAG,CAAC,EAAE,MAAN,EAAc;AACZ,oBAAE,MAAF,GAAW,OAAO,mBAAlB;AACA,oBAAE,CAAF,GAAM,GAAN;AACA,oBAAE,CAAF,GAAM,GAAN;AACD,iBAJD,MAIO;AACL,sBAAG,MAAM,GAAN,IAAa,KAAhB,EAAuB;AACrB,wBAAI,UAAU,MAAM,KAAN,CAAY,CAAZ,CAAV,EAA0B,MAAM,KAAN,CAAY,CAAZ,CAA1B,CAAJ;;AAEA,wBAAG,CAAC,EAAE,MAAN,EAAc;AACZ,wBAAE,CAAF,GAAM,MAAM,KAAZ;AACA,wBAAE,CAAF,GAAM,MAAM,KAAZ;AACA,wBAAE,MAAF,GAAW,OAAO,kBAAlB;AACD;AACF;;AAED,sBAAG,CAAC,KAAK,eAAT,EAA0B;AAC3B;;AAED,wBAAQ,IAAI,IAAJ,EAAR;AACD;AACF;;AAED,gBAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC;;AAEvC,oBAAQ,IAAI,IAAJ,EAAR;AACD;;AAED,iBAAO,GAAP;AACA,iBAAO,GAAP;;AAEA,cAAG,CAAC,EAAE,MAAN,EAAc;AACZ,cAAE,MAAF,GAAW,OAAO,qBAAlB;AACA,gBAAG,CAAC,KAAK,eAAT,EAA0B,OAAO,CAAP;AAC3B;;AAED,gB;AAzJJ;AAtBJ;;;;;;AAuLA,MAAI,OAAO,MAAX;AACA,SAAM,GAAN,EAAW;AACT,QAAG,OAAO,CAAP,KAAa,CAAhB,EAAmB;AACjB,aAAO,OAAO,OAAO,CAAP,KAAa,CAApB,EAAuB,OAAO,eAA9B,CAAP;AACD;AACF;;;AAGD,SAAO,IAAP,CAAY,CAAZ;AACA,SAAO,IAAP,CAAY,CAAZ;;AAEA,OAAI,GAAJ,IAAW,CAAX,EAAc;AACZ,QAAG,eAAe,IAAf,CAAoB,CAApB,EAAuB,GAAvB,CAAH,EAAgC;AAC9B,UAAI,OAAO,eAAe,IAAf,CAAoB,CAApB,EAAuB,GAAvB,CAAP,EAAoC,OAAO,WAA3C,EAAwD,GAAxD,EAA6D,GAA7D,CAAJ;AACA,UAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC;;AAEvC,UAAG,EAAE,MAAL,EAAa;AACX,YAAI,sBAAsB,GAAtB,CAAJ;AACA,YAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC;AACxC;AACF;AACF;;AAED,MAAG,EAAE,MAAF,IAAY,KAAK,eAApB,EAAqC;;AAEnC,SAAI,GAAJ,IAAW,CAAX,EAAc;AACZ,UAAG,eAAe,IAAf,CAAoB,CAApB,EAAuB,GAAvB,CAAH,EAAgC;AAC9B,YAAI,OAAO,eAAe,IAAf,CAAoB,CAApB,EAAuB,GAAvB,CAAP,EAAoC,OAAO,WAA3C,EAAwD,GAAxD,EAA6D,GAA7D,CAAJ;AACA,YAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;AACxC;AACF;AACF;;AAED,SAAO,GAAP;AACA,SAAO,GAAP;;AAEA,MAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC,OAAO,CAAP;;AAEvC,MAAI,mBAAmB,KAAvB;MAA8B,uBAAuB,KAArD;;AAEA,MAAG,KAAK,aAAR,EAAuB;AACrB,QAAG,OAAO,cAAV,EAA0B;;AACxB,yBAAmB,OAAO,cAAP,CAAsB,CAAtB,MAA6B,OAAO,cAAP,CAAsB,CAAtB,CAAhD;AACA,6BAAuB,IAAvB;AACD;;AAED,QAAG,wBAAwB,CAAC,gBAA5B,EAA8C;AAC5C,UAAI,OAAO,gBAAP,EAAyB,OAAO,kBAAhC,CAAJ;AACA,QAAE,UAAF,GAAe,IAAf;AACA,UAAG,CAAC,EAAE,MAAH,IAAa,CAAC,KAAK,eAAtB,EAAuC;AACrC,eAAO,CAAP;AACD;AACF;AACF;;AAED,SAAO,MAAP;AACD;;AAED,IAAI,iBAAiB;AACnB,iBAAe,IADI;AAEnB,gBAAc,IAFK;AAGnB,6BAA2B;AAHR,CAArB;;AAMA,SAAS,EAAT,CAAY,CAAZ,EAAe,CAAf,EAAkB,IAAlB,EAAwB;AACtB,SAAO,QAAQ,EAAf;AACA,MAAG,OAAO,KAAK,aAAZ,KAA8B,SAAjC,EAA4C;AAC1C,SAAK,aAAL,GAAqB,eAAe,aAApC;AACD;AACD,MAAG,OAAO,KAAK,YAAZ,KAA6B,SAAhC,EAA2C;AACzC,SAAK,YAAL,GAAoB,eAAe,YAAnC;AACD;AACD,MAAG,OAAO,KAAK,yBAAZ,KAA0C,SAA7C,EAAwD;AACtD,SAAK,yBAAL,GAAiC,eAAe,yBAAhD;AACD;;AAED,MAAI,QAAQ,EAAZ;AACA,MAAI,IAAI,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAjB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,KAAnC,CAAR;AACA,SAAO,KAAK,eAAL,GAAuB,KAAvB,GAA+B,CAAtC;AACD;;AAED,OAAO,OAAP,GAAiB,EAAjB;;AAEA,GAAG,CAAH,GAAO,MAAP","file":"index-compiled.js","sourcesContent":["var getType = require('should-type');\nvar format = require('./format');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction makeResult(r, path, reason, a, b) {\n  var o = {result: r};\n  if(!r) {\n    o.path = path;\n    o.reason = reason;\n    o.a = a;\n    o.b = b;\n  }\n  return o;\n}\n\nvar EQUALS = makeResult(true);\n\nfunction typeToString(t) {\n  return t.type + (t.cls ? '(' + t.cls + (t.sub ? ' ' + t.sub : '') + ')' : '');\n}\n\n\n\nvar REASON = {\n  PLUS_0_AND_MINUS_0: '+0 is not equal to -0',\n  DIFFERENT_TYPES: 'A has type %s and B has type %s',\n  NAN_NUMBER: 'NaN is not equal to any number',\n  EQUALITY: 'A is not equal to B',\n  EQUALITY_PROTOTYPE: 'A and B have different prototypes',\n  WRAPPED_VALUE: 'A wrapped value is not equal to B wrapped value',\n  FUNCTION_SOURCES: 'function A is not equal to B by source code value (via .toString call)',\n  MISSING_KEY: '%s has no key %s',\n  CIRCULAR_VALUES: 'A has circular reference that was visited not in the same time as B',\n  SET_MAP_MISSING_KEY: 'Set/Map missing key',\n  MAP_VALUE_EQUALITY: 'Values of the same key in A and B is not equal'\n};\n\n\nfunction eqInternal(a, b, opts, stackA, stackB, path, fails) {\n  var r = EQUALS;\n\n  function result(comparison, reason) {\n    if(arguments.length > 2) {\n      var args = Array.prototype.slice.call(arguments, 2);\n      reason = format.apply(null, [reason].concat(args));\n    }\n    var res = makeResult(comparison, path, reason, a, b);\n    if(!comparison && opts.collectAllFails) {\n      fails.push(res);\n    }\n    return res;\n  }\n\n  function checkPropertyEquality(property) {\n    return eqInternal(a[property], b[property], opts, stackA, stackB, path.concat([property]), fails);\n  }\n\n  function checkAlso(a1, b1) {\n    return eqInternal(a1, b1, opts, stackA, stackB, path, fails);\n  }\n\n  // equal a and b exit early\n  if(a === b) {\n    // check for +0 !== -0;\n    return result(a !== 0 || (1 / a == 1 / b) || opts.plusZeroAndMinusZeroEqual, REASON.PLUS_0_AND_MINUS_0);\n  }\n\n  var l, p;\n\n  var typeA = getType(a),\n    typeB = getType(b);\n\n  var key;\n\n  // if objects has different types they are not equal\n  var typeDifferent = typeA.type !== typeB.type || typeA.cls !== typeB.cls;\n\n  if(typeDifferent || ((opts.checkSubType && typeA.sub !== typeB.sub) || !opts.checkSubType)) {\n    return result(false, REASON.DIFFERENT_TYPES, typeToString(typeA), typeToString(typeB));\n  }\n\n  //early checks for types\n  switch(typeA.type) {\n    case 'number':\n      // NaN !== NaN\n      return (a !== a) ? result(b !== b, REASON.NAN_NUMBER)\n        : result(a === b, REASON.EQUALITY);\n\n    case 'boolean':\n    case 'string':\n      return result(a === b, REASON.EQUALITY);\n\n    case 'function':\n      // functions are compared by their source code\n      r = checkAlso(a.toString(), b.toString());\n      if(!r.result) {\n        r.reason = REASON.FUNCTION_SOURCES;\n        if(!opts.collectAllFails) return r;\n      }\n\n      break;//check user properties\n\n    case 'object':\n      // additional checks for object instances\n      switch(typeA.cls) {\n        // check regexp flags\n        // TODO add es6 flags\n        case 'regexp':\n          p = ['source', 'global', 'multiline', 'lastIndex', 'ignoreCase'];\n          while(p.length) {\n            r = checkPropertyEquality(p.shift());\n            if(!r.result && !opts.collectAllFails) return r;\n          }\n          break;//check user properties\n\n        //check by timestamp only (using .valueOf)\n        case 'date':\n          if(+a !== +b) {\n            r = result(false, REASON.EQUALITY);\n            if(!r.result && !opts.collectAllFails) return r;\n          }\n          break;//check user properties\n\n        //primitive type wrappers\n        case 'number':\n        case 'boolean':\n        case 'string':\n          //check their internal value\n          r = checkAlso(a.valueOf(), b.valueOf());\n          if(!r.result) {\n            r.reason = REASON.WRAPPED_VALUE;\n            if(!opts.collectAllFails) return r;\n          }\n          break;//check user properties\n\n        //node buffer\n        case 'buffer':\n          //if length different it is obviously different\n          r = checkPropertyEquality('length');\n          if(!r.result && !opts.collectAllFails) return r;\n\n          l = a.length;\n          while(l--) {\n            r = checkPropertyEquality(l);\n            if(!r.result && !opts.collectAllFails) return r;\n          }\n\n          //we do not check for user properties because\n          //node Buffer have some strange hidden properties\n          return EQUALS;\n\n        case 'error':\n          //check defined properties\n          p = ['name', 'message'];\n          while(p.length) {\n            r = checkPropertyEquality(p.shift());\n            if(!r.result && !opts.collectAllFails) return r;\n          }\n\n          break;//check user properties\n\n        case 'array':\n        case 'arguments':\n        case 'typed-array':\n          r = checkPropertyEquality('length');\n          if(!r.result && !opts.collectAllFails) return r;\n\n          break;//check user properties\n\n        case 'array-buffer':\n          r = checkPropertyEquality('byteLength');\n          if(!r.result && !opts.collectAllFails) return r;\n\n          break;//check user properties\n\n        case 'map':\n        case 'set':\n          r = checkPropertyEquality('size');\n          if(!r.result && !opts.collectAllFails) return r;\n\n          stackA.push(a);\n          stackB.push(b);\n\n          var itA = a.entries();\n          var nextA = itA.next();\n\n          while(!nextA.done) {\n            key = nextA.value[0];\n            //first check for primitive key if we can do light check\n            //using .has and .get\n            if(getType(key).type != 'object') {\n              if(b.has(key)) {\n                if(typeA.cls == 'map') {\n                  //for map we also check its value to be equal\n                  var value = b.get(key);\n                  r = checkAlso(nextA.value[1], value);\n                  if(!r.result) {\n                    r.a = nextA.value;\n                    r.b = value;\n                    r.reason = REASON.MAP_VALUE_EQUALITY;\n\n                    if(!opts.collectAllFails) break;\n                  }\n                }\n\n              } else {\n                r = result(false, REASON.SET_MAP_MISSING_KEY);\n                r.a = key;\n                r.b = key;\n\n                if(!opts.collectAllFails) break;\n              }\n            } else {\n              //heavy check\n              //we search by iterator for key equality using equal\n              var itB = b.entries();\n              var nextB = itB.next();\n\n              while(!nextB.done) {\n                //first check for keys\n                r = checkAlso(nextA.value[0], nextB.value[0]);\n\n                if(!r.result) {\n                  r.reason = REASON.SET_MAP_MISSING_KEY;\n                  r.a = key;\n                  r.b = key;\n                } else {\n                  if(typeA.cls == 'map') {\n                    r = checkAlso(nextA.value[1], nextB.value[1]);\n\n                    if(!r.result) {\n                      r.a = nextA.value;\n                      r.b = nextB.value;\n                      r.reason = REASON.MAP_VALUE_EQUALITY;\n                    }\n                  }\n\n                  if(!opts.collectAllFails) break;\n                }\n\n                nextB = itB.next();\n              }\n            }\n\n            if(!r.result && !opts.collectAllFails) break;\n\n            nextA = itA.next();\n          }\n\n          stackA.pop();\n          stackB.pop();\n\n          if(!r.result) {\n            r.reason = REASON.SET_MAP_MISSING_ENTRY;\n            if(!opts.collectAllFails) return r;\n          }\n\n          break; //check user properties\n      }\n  }\n\n  // compare deep objects and arrays\n  // stacks contain references only\n  //\n\n  l = stackA.length;\n  while(l--) {\n    if(stackA[l] == a) {\n      return result(stackB[l] == b, REASON.CIRCULAR_VALUES);\n    }\n  }\n\n  // add `a` and `b` to the stack of traversed objects\n  stackA.push(a);\n  stackB.push(b);\n\n  for(key in b) {\n    if(hasOwnProperty.call(b, key)) {\n      r = result(hasOwnProperty.call(a, key), REASON.MISSING_KEY, 'A', key);\n      if(!r.result && !opts.collectAllFails) break;\n\n      if(r.result) {\n        r = checkPropertyEquality(key);\n        if(!r.result && !opts.collectAllFails) break;\n      }\n    }\n  }\n\n  if(r.result || opts.collectAllFails) {\n    // ensure both objects have the same number of properties\n    for(key in a) {\n      if(hasOwnProperty.call(a, key)) {\n        r = result(hasOwnProperty.call(b, key), REASON.MISSING_KEY, 'B', key);\n        if(!r.result && !opts.collectAllFails) return r;\n      }\n    }\n  }\n\n  stackA.pop();\n  stackB.pop();\n\n  if(!r.result && !opts.collectAllFails) return r;\n\n  var prototypesEquals = false, canComparePrototypes = false;\n\n  if(opts.checkProtoEql) {\n    if(Object.getPrototypeOf) {//TODO should i check prototypes for === or use eq?\n      prototypesEquals = Object.getPrototypeOf(a) === Object.getPrototypeOf(b);\n      canComparePrototypes = true;\n    }\n\n    if(canComparePrototypes && !prototypesEquals) {\n      r = result(prototypesEquals, REASON.EQUALITY_PROTOTYPE);\n      r.showReason = true;\n      if(!r.result && !opts.collectAllFails) {\n        return r;\n      }\n    }\n  }\n\n  return EQUALS;\n}\n\nvar defaultOptions = {\n  checkProtoEql: true,\n  checkSubType: true,\n  plusZeroAndMinusZeroEqual: false\n};\n\nfunction eq(a, b, opts) {\n  opts = opts || {};\n  if(typeof opts.checkProtoEql !== 'boolean') {\n    opts.checkProtoEql = defaultOptions.checkProtoEql;\n  }\n  if(typeof opts.checkSubType !== 'boolean') {\n    opts.checkSubType = defaultOptions.checkSubType;\n  }\n  if(typeof opts.plusZeroAndMinusZeroEqual !== 'boolean') {\n    opts.plusZeroAndMinusZeroEqual = defaultOptions.plusZeroAndMinusZeroEqual;\n  }\n\n  var fails = [];\n  var r = eqInternal(a, b, opts, [], [], [], fails);\n  return opts.collectAllFails ? fails : r;\n}\n\nmodule.exports = eq;\n\neq.r = REASON;\n"]}