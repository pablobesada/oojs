{"version":3,"sources":["Pool.js"],"names":[],"mappings":"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","file":"Pool-compiled.js","sourcesContent":["var mysql          = require('../');\nvar Connection     = require('./Connection');\nvar EventEmitter   = require('events').EventEmitter;\nvar Util           = require('util');\nvar PoolConnection = require('./PoolConnection');\n\nmodule.exports = Pool;\n\nUtil.inherits(Pool, EventEmitter);\nfunction Pool(options) {\n  EventEmitter.call(this);\n  this.config = options.config;\n  this.config.connectionConfig.pool = this;\n\n  this._acquiringConnections = [];\n  this._allConnections       = [];\n  this._freeConnections      = [];\n  this._connectionQueue      = [];\n  this._closed               = false;\n}\n\nPool.prototype.getConnection = function (cb) {\n\n  if (this._closed) {\n    return process.nextTick(function(){\n      return cb(new Error('Pool is closed.'));\n    });\n  }\n\n  var connection;\n  var pool = this;\n\n  if (this._freeConnections.length > 0) {\n    connection = this._freeConnections.shift();\n\n    return this.acquireConnection(connection, cb);\n  }\n\n  if (this.config.connectionLimit === 0 || this._allConnections.length < this.config.connectionLimit) {\n    connection = new PoolConnection(this, { config: this.config.newConnectionConfig() });\n\n    this._acquiringConnections.push(connection);\n    this._allConnections.push(connection);\n\n    return connection.connect({timeout: this.config.acquireTimeout}, function onConnect(err) {\n      spliceConnection(pool._acquiringConnections, connection);\n\n      if (pool._closed) {\n        err = new Error('Pool is closed.');\n      }\n\n      if (err) {\n        pool._purgeConnection(connection);\n        cb(err);\n        return;\n      }\n\n      pool.emit('connection', connection);\n      cb(null, connection);\n    });\n  }\n\n  if (!this.config.waitForConnections) {\n    return process.nextTick(function(){\n      return cb(new Error('No connections available.'));\n    });\n  }\n\n  this._enqueueCallback(cb);\n};\n\nPool.prototype.acquireConnection = function acquireConnection(connection, cb) {\n  if (connection._pool !== this) {\n    throw new Error('Connection acquired from wrong pool.');\n  }\n\n  var changeUser = this._needsChangeUser(connection);\n  var pool       = this;\n\n  this._acquiringConnections.push(connection);\n\n  function onOperationComplete(err) {\n    spliceConnection(pool._acquiringConnections, connection);\n\n    if (pool._closed) {\n      err = new Error('Pool is closed.');\n    }\n\n    if (err) {\n      pool._connectionQueue.unshift(cb);\n      pool._purgeConnection(connection);\n      return;\n    }\n\n    if (changeUser) {\n      pool.emit('connection', connection);\n    }\n\n    cb(null, connection);\n  }\n\n  if (changeUser) {\n    // restore user back to pool configuration\n    connection.config = this.config.newConnectionConfig();\n    connection.changeUser({timeout: this.config.acquireTimeout}, onOperationComplete);\n  } else {\n    // ping connection\n    connection.ping({timeout: this.config.acquireTimeout}, onOperationComplete);\n  }\n};\n\nPool.prototype.releaseConnection = function releaseConnection(connection) {\n  var cb;\n  var pool = this;\n\n  if (this._acquiringConnections.indexOf(connection) !== -1) {\n    // connection is being acquired\n    return;\n  }\n\n  if (connection._pool) {\n    if (connection._pool !== this) {\n      throw new Error('Connection released to wrong pool');\n    }\n\n    if (this._freeConnections.indexOf(connection) !== -1) {\n      // connection already in free connection pool\n      // this won't catch all double-release cases\n      throw new Error('Connection already released');\n    } else {\n      // add connection to end of free queue\n      this._freeConnections.push(connection);\n    }\n  }\n\n  while (this._closed && this._connectionQueue.length) {\n    // empty the connection queue\n    cb = this._connectionQueue.shift();\n\n    process.nextTick(cb.bind(null, new Error('Pool is closed.')));\n  }\n\n  if (this._connectionQueue.length) {\n    cb = this._connectionQueue.shift();\n\n    this.getConnection(cb);\n  }\n};\n\nPool.prototype.end = function (cb) {\n  this._closed = true;\n\n  if (typeof cb != \"function\") {\n    cb = function (err) {\n      if (err) throw err;\n    };\n  }\n\n  var calledBack   = false;\n  var waitingClose = this._allConnections.length;\n\n  function onEnd(err) {\n    if (calledBack) {\n      return;\n    }\n\n    if (err || --waitingClose === 0) {\n      calledBack = true;\n      return cb(err);\n    }\n  }\n\n  if (waitingClose === 0) {\n    return process.nextTick(cb);\n  }\n\n  while (this._allConnections.length !== 0) {\n    this._purgeConnection(this._allConnections[0], onEnd);\n  }\n};\n\nPool.prototype.query = function (sql, values, cb) {\n  var query = Connection.createQuery(sql, values, cb);\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = this.config.connectionConfig.typeCast;\n  }\n\n  if (this.config.connectionConfig.trace) {\n    // Long stack trace support\n    query._callSite = new Error;\n  }\n\n  this.getConnection(function (err, conn) {\n    if (err) {\n      query.on('error', function () {});\n      query.end(err);\n      return;\n    }\n\n    // Release connection based off event\n    query.once('end', function() {\n      conn.release();\n    });\n\n    conn.query(query);\n  });\n\n  return query;\n};\n\nPool.prototype._enqueueCallback = function _enqueueCallback(callback) {\n\n  if (this.config.queueLimit && this._connectionQueue.length >= this.config.queueLimit) {\n    process.nextTick(function () {\n      var err = new Error('Queue limit reached.');\n      err.code = 'POOL_ENQUEUELIMIT';\n      callback(err);\n    });\n    return;\n  }\n\n  // Bind to domain, as dequeue will likely occur in a different domain\n  var cb = process.domain\n    ? process.domain.bind(callback)\n    : callback;\n\n  this._connectionQueue.push(cb);\n  this.emit('enqueue');\n};\n\nPool.prototype._needsChangeUser = function _needsChangeUser(connection) {\n  var connConfig = connection.config;\n  var poolConfig = this.config.connectionConfig;\n\n  // check if changeUser values are different\n  return connConfig.user !== poolConfig.user\n    || connConfig.database !== poolConfig.database\n    || connConfig.password !== poolConfig.password\n    || connConfig.charsetNumber !== poolConfig.charsetNumber;\n};\n\nPool.prototype._purgeConnection = function _purgeConnection(connection, callback) {\n  var cb = callback || function () {};\n\n  if (connection.state === 'disconnected') {\n    connection.destroy();\n  }\n\n  this._removeConnection(connection);\n\n  if (connection.state !== 'disconnected' && !connection._protocol._quitSequence) {\n    connection._realEnd(cb);\n    return;\n  }\n\n  process.nextTick(cb);\n};\n\nPool.prototype._removeConnection = function(connection) {\n  connection._pool = null;\n\n  // Remove connection from all connections\n  spliceConnection(this._allConnections, connection);\n\n  // Remove connection from free connections\n  spliceConnection(this._freeConnections, connection);\n\n  this.releaseConnection(connection);\n};\n\nPool.prototype.escape = function(value) {\n  return mysql.escape(value, this.config.connectionConfig.stringifyObjects, this.config.connectionConfig.timezone);\n};\n\nPool.prototype.escapeId = function escapeId(value) {\n  return mysql.escapeId(value, false);\n};\n\nfunction spliceConnection(array, connection) {\n  var index;\n  if ((index = array.indexOf(connection)) !== -1) {\n    // Remove connection from all connections\n    array.splice(index, 1);\n  }\n}\n"]}