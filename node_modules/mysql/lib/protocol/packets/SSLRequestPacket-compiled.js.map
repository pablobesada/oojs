{"version":3,"sources":["SSLRequestPacket.js"],"names":[],"mappings":";;;AAGA,IAAI,kBAAkB,QAAQ,qBAAR,CAAtB;;AAEA,OAAO,OAAP,GAAiB,gBAAjB;;AAEA,SAAS,gBAAT,CAA0B,OAA1B,EAAmC;AACjC,YAAU,WAAW,EAArB;AACA,OAAK,WAAL,GAAqB,QAAQ,WAAR,GAAsB,gBAAgB,UAA3D;AACA,OAAK,aAAL,GAAqB,QAAQ,aAA7B;AACA,OAAK,aAAL,GAAqB,QAAQ,aAA7B;AACD;;AAED,iBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,UAAS,MAAT,EAAiB;;AAElD,OAAK,WAAL,GAAqB,OAAO,mBAAP,CAA2B,CAA3B,CAArB;AACA,OAAK,aAAL,GAAqB,OAAO,mBAAP,CAA2B,CAA3B,CAArB;AACA,OAAK,aAAL,GAAqB,OAAO,mBAAP,CAA2B,CAA3B,CAArB;AACD,CALD;;AAOA,iBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,UAAS,MAAT,EAAiB;AAClD,SAAO,mBAAP,CAA2B,CAA3B,EAA8B,KAAK,WAAnC;AACA,SAAO,mBAAP,CAA2B,CAA3B,EAA8B,KAAK,aAAnC;AACA,SAAO,mBAAP,CAA2B,CAA3B,EAA8B,KAAK,aAAnC;AACA,SAAO,WAAP,CAAmB,EAAnB;AACD,CALD","file":"SSLRequestPacket-compiled.js","sourcesContent":["// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\n\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = SSLRequestPacket;\n\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags   = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\n\nSSLRequestPacket.prototype.parse = function(parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags   = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nSSLRequestPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};\n"]}