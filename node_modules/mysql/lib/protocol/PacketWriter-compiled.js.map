{"version":3,"sources":["PacketWriter.js"],"names":[],"mappings":"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","file":"PacketWriter-compiled.js","sourcesContent":["var BIT_16 = Math.pow(2, 16);\nvar BIT_24 = Math.pow(2, 24);\n// The maximum precision JS Numbers can hold precisely\n// Don't panic: Good enough to represent byte values up to 8192 TB\nvar IEEE_754_BINARY_64_PRECISION = Math.pow(2, 53);\nvar MAX_PACKET_LENGTH            = Math.pow(2, 24) - 1;\n\nmodule.exports = PacketWriter;\nfunction PacketWriter() {\n  this._buffer = new Buffer(0);\n  this._offset = 0;\n}\n\nPacketWriter.prototype.toBuffer = function(parser) {\n  var packets  = Math.floor(this._buffer.length / MAX_PACKET_LENGTH) + 1;\n  var buffer   = this._buffer;\n  this._buffer = new Buffer(this._buffer.length + packets * 4);\n\n  for (var packet = 0; packet < packets; packet++) {\n    this._offset = packet * (MAX_PACKET_LENGTH + 4);\n\n    var isLast = (packet + 1 === packets);\n    var packetLength = (isLast)\n      ? buffer.length % MAX_PACKET_LENGTH\n      : MAX_PACKET_LENGTH;\n\n    var packetNumber = parser.incrementPacketNumber();\n\n    this.writeUnsignedNumber(3, packetLength);\n    this.writeUnsignedNumber(1, packetNumber);\n\n    var start = packet * MAX_PACKET_LENGTH;\n    var end   = start + packetLength;\n\n    this.writeBuffer(buffer.slice(start, end));\n  }\n\n  return this._buffer;\n};\n\nPacketWriter.prototype.writeUnsignedNumber = function(bytes, value) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = (value >> (i * 8)) & 0xff;\n  }\n};\n\nPacketWriter.prototype.writeFiller = function(bytes) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = 0x00;\n  }\n};\n\nPacketWriter.prototype.writeNullTerminatedString = function(value, encoding) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, encoding || 'utf-8') + 1;\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, encoding);\n  this._buffer[this._offset + bytes - 1] = 0x00;\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeString = function(value) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, 'utf-8');\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeBuffer = function(value) {\n  var bytes = value.length;\n\n  this._allocate(bytes);\n  value.copy(this._buffer, this._offset);\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeLengthCodedNumber = function(value) {\n  if (value === null) {\n    this._allocate(1);\n    this._buffer[this._offset++] = 251;\n    return;\n  }\n\n  if (value <= 250) {\n    this._allocate(1);\n    this._buffer[this._offset++] = value;\n    return;\n  }\n\n  if (value > IEEE_754_BINARY_64_PRECISION) {\n    throw new Error(\n      'writeLengthCodedNumber: JS precision range exceeded, your ' +\n      'number is > 53 bit: \"' + value + '\"'\n    );\n  }\n\n  if (value <= BIT_16) {\n    this._allocate(3);\n    this._buffer[this._offset++] = 252;\n  } else if (value <= BIT_24) {\n    this._allocate(4);\n    this._buffer[this._offset++] = 253;\n  } else {\n    this._allocate(9);\n    this._buffer[this._offset++] = 254;\n  }\n\n  // 16 Bit\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = (value >> 8) & 0xff;\n\n  if (value <= BIT_16) return;\n\n  // 24 Bit\n  this._buffer[this._offset++] = (value >> 16) & 0xff;\n\n  if (value <= BIT_24) return;\n\n  this._buffer[this._offset++] = (value >> 24) & 0xff;\n\n  // Hack: Get the most significant 32 bit (JS bitwise operators are 32 bit)\n  value = value.toString(2);\n  value = value.substr(0, value.length - 32);\n  value = parseInt(value, 2);\n\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = (value >> 8) & 0xff;\n  this._buffer[this._offset++] = (value >> 16) & 0xff;\n\n  // Set last byte to 0, as we can only support 53 bits in JS (see above)\n  this._buffer[this._offset++] = 0;\n};\n\nPacketWriter.prototype.writeLengthCodedBuffer = function(value) {\n  var bytes = value.length;\n  this.writeLengthCodedNumber(bytes);\n  this.writeBuffer(value);\n};\n\nPacketWriter.prototype.writeNullTerminatedBuffer = function(value) {\n  this.writeBuffer(value);\n  this.writeFiller(1); // 0x00 terminator\n};\n\nPacketWriter.prototype.writeLengthCodedString = function(value) {\n  if (value === null) {\n    this.writeLengthCodedNumber(null);\n    return;\n  }\n\n  value = (value === undefined)\n    ? ''\n    : String(value);\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this.writeLengthCodedNumber(bytes);\n\n  if (!bytes) {\n    return;\n  }\n\n  this._allocate(bytes);\n  this._buffer.write(value, this._offset, 'utf-8');\n  this._offset += bytes;\n};\n\nPacketWriter.prototype._allocate = function(bytes) {\n  if (!this._buffer) {\n    this._buffer = new Buffer(bytes);\n    return;\n  }\n\n  var bytesRemaining = this._buffer.length - this._offset;\n  if (bytesRemaining >= bytes) {\n    return;\n  }\n\n  var oldBuffer = this._buffer;\n\n  this._buffer = new Buffer(oldBuffer.length + bytes);\n  oldBuffer.copy(this._buffer);\n};\n"]}