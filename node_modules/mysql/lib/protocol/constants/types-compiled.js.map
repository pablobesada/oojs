{"version":3,"sources":["types.js"],"names":[],"mappings":";;AAEA,QAAQ,OAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,KAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,KAAR,GAAsB,IAAtB,C;AACA,QAAQ,MAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,SAAR,GAAsB,IAAtB,C;AACA,QAAQ,QAAR,GAAsB,IAAtB,C;AACA,QAAQ,KAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,QAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,OAAR,GAAsB,IAAtB,C;AACA,QAAQ,OAAR,GAAsB,IAAtB,C;AACA,QAAQ,GAAR,GAAsB,IAAtB,C;AACA,QAAQ,UAAR,GAAsB,IAAtB,C;AACA,QAAQ,SAAR,GAAsB,IAAtB,C;AACA,QAAQ,KAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,UAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,GAAR,GAAsB,IAAtB,C;AACA,QAAQ,SAAR,GAAsB,IAAtB,C;AACA,QAAQ,WAAR,GAAsB,IAAtB,C;AACA,QAAQ,SAAR,GAAsB,IAAtB,C;AACA,QAAQ,IAAR,GAAsB,IAAtB,C;AACA,QAAQ,UAAR,GAAsB,IAAtB,C;AACA,QAAQ,MAAR,GAAsB,IAAtB,C;AACA,QAAQ,QAAR,GAAsB,IAAtB,C","file":"types-compiled.js","sourcesContent":["// Manually extracted from mysql-5.7.9/include/mysql.h.pp\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nexports.DECIMAL     = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nexports.TINY        = 0x01; // aka TINYINT, 1 byte\nexports.SHORT       = 0x02; // aka SMALLINT, 2 bytes\nexports.LONG        = 0x03; // aka INT, 4 bytes\nexports.FLOAT       = 0x04; // aka FLOAT, 4-8 bytes\nexports.DOUBLE      = 0x05; // aka DOUBLE, 8 bytes\nexports.NULL        = 0x06; // NULL (used for prepared statements, I think)\nexports.TIMESTAMP   = 0x07; // aka TIMESTAMP\nexports.LONGLONG    = 0x08; // aka BIGINT, 8 bytes\nexports.INT24       = 0x09; // aka MEDIUMINT, 3 bytes\nexports.DATE        = 0x0a; // aka DATE\nexports.TIME        = 0x0b; // aka TIME\nexports.DATETIME    = 0x0c; // aka DATETIME\nexports.YEAR        = 0x0d; // aka YEAR, 1 byte (don't ask)\nexports.NEWDATE     = 0x0e; // aka ?\nexports.VARCHAR     = 0x0f; // aka VARCHAR (?)\nexports.BIT         = 0x10; // aka BIT, 1-8 byte\nexports.TIMESTAMP2  = 0x11; // aka TIMESTAMP with fractional seconds\nexports.DATETIME2   = 0x12; // aka DATETIME with fractional seconds\nexports.TIME2       = 0x13; // aka TIME with fractional seconds\nexports.JSON        = 0xf5; // aka JSON\nexports.NEWDECIMAL  = 0xf6; // aka DECIMAL\nexports.ENUM        = 0xf7; // aka ENUM\nexports.SET         = 0xf8; // aka SET\nexports.TINY_BLOB   = 0xf9; // aka TINYBLOB, TINYTEXT\nexports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nexports.LONG_BLOB   = 0xfb; // aka LONGBLOG, LONGTEXT\nexports.BLOB        = 0xfc; // aka BLOB, TEXT\nexports.VAR_STRING  = 0xfd; // aka VARCHAR, VARBINARY\nexports.STRING      = 0xfe; // aka CHAR, BINARY\nexports.GEOMETRY    = 0xff; // aka GEOMETRY\n"]}