{"version":3,"sources":["hook.js"],"names":[],"mappings":";;;;AAIA,IAAI,WAAW,QAAQ,YAAR,CAAf;AACA,IAAI,WAAW,QAAQ,SAAR,EAAmB,QAAlC;;;;;;AAMA,OAAO,OAAP,GAAiB,IAAjB;;;;;;;;;AASA,SAAS,IAAT,CAAc,KAAd,EAAqB,EAArB,EAAyB;AACvB,WAAS,IAAT,CAAc,IAAd,EAAoB,KAApB,EAA2B,EAA3B;AACA,OAAK,IAAL,GAAY,MAAZ;AACD;;;;;AAKD,SAAS,IAAT,EAAe,QAAf;;;;;;;;;AASA,KAAK,SAAL,CAAe,KAAf,GAAuB,UAAS,GAAT,EAAc;AACnC,MAAI,CAAC,UAAU,MAAf,EAAuB;AACrB,UAAM,KAAK,MAAX;AACA,SAAK,MAAL,GAAc,IAAd;AACA,WAAO,GAAP;AACD;;AAED,OAAK,MAAL,GAAc,GAAd;AACD,CARD","file":"hook-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\nfunction Hook(title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Hook, Runnable);\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\nHook.prototype.error = function(err) {\n  if (!arguments.length) {\n    err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n"]}