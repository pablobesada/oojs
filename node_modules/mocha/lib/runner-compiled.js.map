{"version":3,"sources":["runner.js"],"names":[],"mappings":"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","file":"runner-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:runner');\nvar Runnable = require('./runnable');\nvar filter = utils.filter;\nvar indexOf = utils.indexOf;\nvar keys = utils.keys;\nvar stackFilter = utils.stackTraceFilter();\nvar stringify = utils.stringify;\nvar type = utils.type;\nvar undefinedError = utils.undefinedError;\nvar isArray = utils.isArray;\n\n/**\n * Non-enumerable globals.\n */\n\nvar globals = [\n  'setTimeout',\n  'clearTimeout',\n  'setInterval',\n  'clearInterval',\n  'XMLHttpRequest',\n  'Date',\n  'setImmediate',\n  'clearImmediate'\n];\n\n/**\n * Expose `Runner`.\n */\n\nmodule.exports = Runner;\n\n/**\n * Initialize a `Runner` for the given `suite`.\n *\n * Events:\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n *\n * @api public\n * @param {Suite} suite Root suite\n * @param {boolean} [delay] Whether or not to delay execution of root suite\n * until ready.\n */\nfunction Runner(suite, delay) {\n  var self = this;\n  this._globals = [];\n  this._abort = false;\n  this._delay = delay;\n  this.suite = suite;\n  this.started = false;\n  this.total = suite.total();\n  this.failures = 0;\n  this.on('test end', function(test) {\n    self.checkGlobals(test);\n  });\n  this.on('hook end', function(hook) {\n    self.checkGlobals(hook);\n  });\n  this._defaultGrep = /.*/;\n  this.grep(this._defaultGrep);\n  this.globals(this.globalProps().concat(extraGlobals()));\n}\n\n/**\n * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n *\n * @param {Function} fn\n * @api private\n */\nRunner.immediately = global.setImmediate || process.nextTick;\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Runner, EventEmitter);\n\n/**\n * Run tests with full titles matching `re`. Updates runner.total\n * with number of tests matched.\n *\n * @param {RegExp} re\n * @param {Boolean} invert\n * @return {Runner} for chaining\n * @api public\n * @param {RegExp} re\n * @param {boolean} invert\n * @return {Runner} Runner instance.\n */\nRunner.prototype.grep = function(re, invert) {\n  debug('grep %s', re);\n  this._grep = re;\n  this._invert = invert;\n  this.total = this.grepTotal(this.suite);\n  return this;\n};\n\n/**\n * Returns the number of tests matching the grep search for the\n * given suite.\n *\n * @param {Suite} suite\n * @return {Number}\n * @api public\n * @param {Suite} suite\n * @return {number}\n */\nRunner.prototype.grepTotal = function(suite) {\n  var self = this;\n  var total = 0;\n\n  suite.eachTest(function(test) {\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) {\n      match = !match;\n    }\n    if (match) {\n      total++;\n    }\n  });\n\n  return total;\n};\n\n/**\n * Return a list of global properties.\n *\n * @return {Array}\n * @api private\n */\nRunner.prototype.globalProps = function() {\n  var props = keys(global);\n\n  // non-enumerables\n  for (var i = 0; i < globals.length; ++i) {\n    if (~indexOf(props, globals[i])) {\n      continue;\n    }\n    props.push(globals[i]);\n  }\n\n  return props;\n};\n\n/**\n * Allow the given `arr` of globals.\n *\n * @param {Array} arr\n * @return {Runner} for chaining\n * @api public\n * @param {Array} arr\n * @return {Runner} Runner instance.\n */\nRunner.prototype.globals = function(arr) {\n  if (!arguments.length) {\n    return this._globals;\n  }\n  debug('globals %j', arr);\n  this._globals = this._globals.concat(arr);\n  return this;\n};\n\n/**\n * Check for global variable leaks.\n *\n * @api private\n */\nRunner.prototype.checkGlobals = function(test) {\n  if (this.ignoreLeaks) {\n    return;\n  }\n  var ok = this._globals;\n\n  var globals = this.globalProps();\n  var leaks;\n\n  if (test) {\n    ok = ok.concat(test._allowedGlobals || []);\n  }\n\n  if (this.prevGlobalsLength === globals.length) {\n    return;\n  }\n  this.prevGlobalsLength = globals.length;\n\n  leaks = filterLeaks(ok, globals);\n  this._globals = this._globals.concat(leaks);\n\n  if (leaks.length > 1) {\n    this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n  } else if (leaks.length) {\n    this.fail(test, new Error('global leak detected: ' + leaks[0]));\n  }\n};\n\n/**\n * Fail the given `test`.\n *\n * @api private\n * @param {Test} test\n * @param {Error} err\n */\nRunner.prototype.fail = function(test, err) {\n  ++this.failures;\n  test.state = 'failed';\n\n  if (!(err instanceof Error || err && typeof err.message === 'string')) {\n    err = new Error('the ' + type(err) + ' ' + stringify(err) + ' was thrown, throw an Error :)');\n  }\n\n  err.stack = (this.fullStackTrace || !err.stack)\n    ? err.stack\n    : stackFilter(err.stack);\n\n  this.emit('fail', test, err);\n};\n\n/**\n * Fail the given `hook` with `err`.\n *\n * Hook failures work in the following pattern:\n * - If bail, then exit\n * - Failed `before` hook skips all tests in a suite and subsuites,\n *   but jumps to corresponding `after` hook\n * - Failed `before each` hook skips remaining tests in a\n *   suite and jumps to corresponding `after each` hook,\n *   which is run only once\n * - Failed `after` hook does not alter\n *   execution order\n * - Failed `after each` hook skips remaining tests in a\n *   suite and subsuites, but executes other `after each`\n *   hooks\n *\n * @api private\n * @param {Hook} hook\n * @param {Error} err\n */\nRunner.prototype.failHook = function(hook, err) {\n  if (hook.ctx && hook.ctx.currentTest) {\n    hook.originalTitle = hook.originalTitle || hook.title;\n    hook.title = hook.originalTitle + ' for \"' + hook.ctx.currentTest.title + '\"';\n  }\n\n  this.fail(hook, err);\n  if (this.suite.bail()) {\n    this.emit('end');\n  }\n};\n\n/**\n * Run hook `name` callbacks and then invoke `fn()`.\n *\n * @api private\n * @param {string} name\n * @param {Function} fn\n */\n\nRunner.prototype.hook = function(name, fn) {\n  var suite = this.suite;\n  var hooks = suite['_' + name];\n  var self = this;\n\n  function next(i) {\n    var hook = hooks[i];\n    if (!hook) {\n      return fn();\n    }\n    self.currentRunnable = hook;\n\n    hook.ctx.currentTest = self.test;\n\n    self.emit('hook', hook);\n\n    if (!hook.listeners('error').length) {\n      hook.on('error', function(err) {\n        self.failHook(hook, err);\n      });\n    }\n\n    hook.run(function(err) {\n      var testError = hook.error();\n      if (testError) {\n        self.fail(self.test, testError);\n      }\n      if (err) {\n        if (err instanceof Pending) {\n          suite.pending = true;\n        } else {\n          self.failHook(hook, err);\n\n          // stop executing hooks, notify callee of hook err\n          return fn(err);\n        }\n      }\n      self.emit('hook end', hook);\n      delete hook.ctx.currentTest;\n      next(++i);\n    });\n  }\n\n  Runner.immediately(function() {\n    next(0);\n  });\n};\n\n/**\n * Run hook `name` for the given array of `suites`\n * in order, and callback `fn(err, errSuite)`.\n *\n * @api private\n * @param {string} name\n * @param {Array} suites\n * @param {Function} fn\n */\nRunner.prototype.hooks = function(name, suites, fn) {\n  var self = this;\n  var orig = this.suite;\n\n  function next(suite) {\n    self.suite = suite;\n\n    if (!suite) {\n      self.suite = orig;\n      return fn();\n    }\n\n    self.hook(name, function(err) {\n      if (err) {\n        var errSuite = self.suite;\n        self.suite = orig;\n        return fn(err, errSuite);\n      }\n\n      next(suites.pop());\n    });\n  }\n\n  next(suites.pop());\n};\n\n/**\n * Run hooks from the top level down.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.hookUp = function(name, fn) {\n  var suites = [this.suite].concat(this.parents()).reverse();\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Run hooks from the bottom up.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.hookDown = function(name, fn) {\n  var suites = [this.suite].concat(this.parents());\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Return an array of parent Suites from\n * closest to furthest.\n *\n * @return {Array}\n * @api private\n */\nRunner.prototype.parents = function() {\n  var suite = this.suite;\n  var suites = [];\n  while (suite.parent) {\n    suite = suite.parent;\n    suites.push(suite);\n  }\n  return suites;\n};\n\n/**\n * Run the current test and callback `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunner.prototype.runTest = function(fn) {\n  var self = this;\n  var test = this.test;\n\n  if (this.asyncOnly) {\n    test.asyncOnly = true;\n  }\n\n  if (this.allowUncaught) {\n    test.allowUncaught = true;\n    return test.run(fn);\n  }\n  try {\n    test.on('error', function(err) {\n      self.fail(test, err);\n    });\n    test.run(fn);\n  } catch (err) {\n    fn(err);\n  }\n};\n\n/**\n * Run tests in the given `suite` and invoke the callback `fn()` when complete.\n *\n * @api private\n * @param {Suite} suite\n * @param {Function} fn\n */\nRunner.prototype.runTests = function(suite, fn) {\n  var self = this;\n  var tests = suite.tests.slice();\n  var test;\n\n  function hookErr(_, errSuite, after) {\n    // before/after Each hook for errSuite failed:\n    var orig = self.suite;\n\n    // for failed 'after each' hook start from errSuite parent,\n    // otherwise start from errSuite itself\n    self.suite = after ? errSuite.parent : errSuite;\n\n    if (self.suite) {\n      // call hookUp afterEach\n      self.hookUp('afterEach', function(err2, errSuite2) {\n        self.suite = orig;\n        // some hooks may fail even now\n        if (err2) {\n          return hookErr(err2, errSuite2, true);\n        }\n        // report error suite\n        fn(errSuite);\n      });\n    } else {\n      // there is no need calling other 'after each' hooks\n      self.suite = orig;\n      fn(errSuite);\n    }\n  }\n\n  function next(err, errSuite) {\n    // if we bail after first err\n    if (self.failures && suite._bail) {\n      return fn();\n    }\n\n    if (self._abort) {\n      return fn();\n    }\n\n    if (err) {\n      return hookErr(err, errSuite, true);\n    }\n\n    // next test\n    test = tests.shift();\n\n    // all done\n    if (!test) {\n      return fn();\n    }\n\n    // grep\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) {\n      match = !match;\n    }\n    if (!match) {\n      // Run immediately only if we have defined a grep. When we\n      // define a grep — It can cause maximum callstack error if\n      // the grep is doing a large recursive loop by neglecting\n      // all tests. The run immediately function also comes with\n      // a performance cost. So we don't want to run immediately\n      // if we run the whole test suite, because running the whole\n      // test suite don't do any immediate recursive loops. Thus,\n      // allowing a JS runtime to breathe.\n      if (self._grep !== self._defaultGrep) {\n        Runner.immediately(next);\n      } else {\n        next();\n      }\n      return;\n    }\n\n    function parentPending(suite) {\n      return suite.pending || (suite.parent && parentPending(suite.parent));\n    }\n\n    // pending\n    if (test.pending || parentPending(test.parent)) {\n      self.emit('pending', test);\n      self.emit('test end', test);\n      return next();\n    }\n\n    // execute test and hook(s)\n    self.emit('test', self.test = test);\n    self.hookDown('beforeEach', function(err, errSuite) {\n      if (suite.pending) {\n        self.emit('pending', test);\n        self.emit('test end', test);\n        return next();\n      }\n      if (err) {\n        return hookErr(err, errSuite, false);\n      }\n      self.currentRunnable = self.test;\n      self.runTest(function(err) {\n        test = self.test;\n        if (err) {\n          var retry = test.currentRetry();\n          if (err instanceof Pending) {\n            test.pending = true;\n            self.emit('pending', test);\n          } else if (retry < test.retries()) {\n            var clonedTest = test.clone();\n            clonedTest.currentRetry(retry + 1);\n            tests.unshift(clonedTest);\n\n            // Early return + hook trigger so that it doesn't\n            // increment the count wrong\n            return self.hookUp('afterEach', next);\n          } else {\n            self.fail(test, err);\n          }\n          self.emit('test end', test);\n\n          if (err instanceof Pending) {\n            return next();\n          }\n\n          return self.hookUp('afterEach', next);\n        }\n\n        test.state = 'passed';\n        self.emit('pass', test);\n        self.emit('test end', test);\n        self.hookUp('afterEach', next);\n      });\n    });\n  }\n\n  this.next = next;\n  this.hookErr = hookErr;\n  next();\n};\n\n/**\n * Run the given `suite` and invoke the callback `fn()` when complete.\n *\n * @api private\n * @param {Suite} suite\n * @param {Function} fn\n */\nRunner.prototype.runSuite = function(suite, fn) {\n  var i = 0;\n  var self = this;\n  var total = this.grepTotal(suite);\n  var afterAllHookCalled = false;\n\n  debug('run suite %s', suite.fullTitle());\n\n  if (!total || (self.failures && suite._bail)) {\n    return fn();\n  }\n\n  this.emit('suite', this.suite = suite);\n\n  function next(errSuite) {\n    if (errSuite) {\n      // current suite failed on a hook from errSuite\n      if (errSuite === suite) {\n        // if errSuite is current suite\n        // continue to the next sibling suite\n        return done();\n      }\n      // errSuite is among the parents of current suite\n      // stop execution of errSuite and all sub-suites\n      return done(errSuite);\n    }\n\n    if (self._abort) {\n      return done();\n    }\n\n    var curr = suite.suites[i++];\n    if (!curr) {\n      return done();\n    }\n\n    // Avoid grep neglecting large number of tests causing a\n    // huge recursive loop and thus a maximum call stack error.\n    // See comment in `this.runTests()` for more information.\n    if (self._grep !== self._defaultGrep) {\n      Runner.immediately(function() {\n        self.runSuite(curr, next);\n      });\n    } else {\n      self.runSuite(curr, next);\n    }\n  }\n\n  function done(errSuite) {\n    self.suite = suite;\n    self.nextSuite = next;\n\n    if (afterAllHookCalled) {\n      fn(errSuite);\n    } else {\n      // mark that the afterAll block has been called once\n      // and so can be skipped if there is an error in it.\n      afterAllHookCalled = true;\n\n      // remove reference to test\n      delete self.test;\n\n      self.hook('afterAll', function() {\n        self.emit('suite end', suite);\n        fn(errSuite);\n      });\n    }\n  }\n\n  this.nextSuite = next;\n\n  this.hook('beforeAll', function(err) {\n    if (err) {\n      return done();\n    }\n    self.runTests(suite, next);\n  });\n};\n\n/**\n * Handle uncaught exceptions.\n *\n * @param {Error} err\n * @api private\n */\nRunner.prototype.uncaught = function(err) {\n  if (err) {\n    debug('uncaught exception %s', err !== function() {\n      return this;\n    }.call(err) ? err : (err.message || err));\n  } else {\n    debug('uncaught undefined exception');\n    err = undefinedError();\n  }\n  err.uncaught = true;\n\n  var runnable = this.currentRunnable;\n\n  if (!runnable) {\n    runnable = new Runnable('Uncaught error outside test suite');\n    runnable.parent = this.suite;\n\n    if (this.started) {\n      this.fail(runnable, err);\n    } else {\n      // Can't recover from this failure\n      this.emit('start');\n      this.fail(runnable, err);\n      this.emit('end');\n    }\n\n    return;\n  }\n\n  runnable.clearTimeout();\n\n  // Ignore errors if complete\n  if (runnable.state) {\n    return;\n  }\n  this.fail(runnable, err);\n\n  // recover from test\n  if (runnable.type === 'test') {\n    this.emit('test end', runnable);\n    this.hookUp('afterEach', this.next);\n    return;\n  }\n\n // recover from hooks\n  if (runnable.type === 'hook') {\n    var errSuite = this.suite;\n    // if hook failure is in afterEach block\n    if (runnable.fullTitle().indexOf('after each') > -1) {\n      return this.hookErr(err, errSuite, true);\n    }\n    // if hook failure is in beforeEach block\n    if (runnable.fullTitle().indexOf('before each') > -1) {\n      return this.hookErr(err, errSuite, false);\n    }\n    // if hook failure is in after or before blocks\n    return this.nextSuite(errSuite);\n  }\n\n  // bail\n  this.emit('end');\n};\n\n/**\n * Cleans up the references to all the deferred functions\n * (before/after/beforeEach/afterEach) and tests of a Suite.\n * These must be deleted otherwise a memory leak can happen,\n * as those functions may reference variables from closures,\n * thus those variables can never be garbage collected as long\n * as the deferred functions exist.\n *\n * @param {Suite} suite\n */\nfunction cleanSuiteReferences(suite) {\n  function cleanArrReferences(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      delete arr[i].fn;\n    }\n  }\n\n  if (isArray(suite._beforeAll)) {\n    cleanArrReferences(suite._beforeAll);\n  }\n\n  if (isArray(suite._beforeEach)) {\n    cleanArrReferences(suite._beforeEach);\n  }\n\n  if (isArray(suite._afterAll)) {\n    cleanArrReferences(suite._afterAll);\n  }\n\n  if (isArray(suite._afterEach)) {\n    cleanArrReferences(suite._afterEach);\n  }\n\n  for (var i = 0; i < suite.tests.length; i++) {\n    delete suite.tests[i].fn;\n  }\n}\n\n/**\n * Run the root suite and invoke `fn(failures)`\n * on completion.\n *\n * @param {Function} fn\n * @return {Runner} for chaining\n * @api public\n * @param {Function} fn\n * @return {Runner} Runner instance.\n */\nRunner.prototype.run = function(fn) {\n  var self = this;\n  var rootSuite = this.suite;\n\n  fn = fn || function() {};\n\n  function uncaught(err) {\n    self.uncaught(err);\n  }\n\n  function start() {\n    self.started = true;\n    self.emit('start');\n    self.runSuite(rootSuite, function() {\n      debug('finished running');\n      self.emit('end');\n    });\n  }\n\n  debug('start');\n\n  // references cleanup to avoid memory leaks\n  this.on('suite end', cleanSuiteReferences);\n\n  // callback\n  this.on('end', function() {\n    debug('end');\n    process.removeListener('uncaughtException', uncaught);\n    fn(self.failures);\n  });\n\n  // uncaught exception\n  process.on('uncaughtException', uncaught);\n\n  if (this._delay) {\n    // for reporters, I guess.\n    // might be nice to debounce some dots while we wait.\n    this.emit('waiting', rootSuite);\n    rootSuite.once('run', start);\n  } else {\n    start();\n  }\n\n  return this;\n};\n\n/**\n * Cleanly abort execution.\n *\n * @api public\n * @return {Runner} Runner instance.\n */\nRunner.prototype.abort = function() {\n  debug('aborting');\n  this._abort = true;\n\n  return this;\n};\n\n/**\n * Filter leaks with the given globals flagged as `ok`.\n *\n * @api private\n * @param {Array} ok\n * @param {Array} globals\n * @return {Array}\n */\nfunction filterLeaks(ok, globals) {\n  return filter(globals, function(key) {\n    // Firefox and Chrome exposes iframes as index inside the window object\n    if (/^d+/.test(key)) {\n      return false;\n    }\n\n    // in firefox\n    // if runner runs in an iframe, this iframe's window.getInterface method not init at first\n    // it is assigned in some seconds\n    if (global.navigator && (/^getInterface/).test(key)) {\n      return false;\n    }\n\n    // an iframe could be approached by window[iframeIndex]\n    // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n    if (global.navigator && (/^\\d+/).test(key)) {\n      return false;\n    }\n\n    // Opera and IE expose global variables for HTML element IDs (issue #243)\n    if (/^mocha-/.test(key)) {\n      return false;\n    }\n\n    var matched = filter(ok, function(ok) {\n      if (~ok.indexOf('*')) {\n        return key.indexOf(ok.split('*')[0]) === 0;\n      }\n      return key === ok;\n    });\n    return !matched.length && (!global.navigator || key !== 'onerror');\n  });\n}\n\n/**\n * Array of globals dependent on the environment.\n *\n * @return {Array}\n * @api private\n */\nfunction extraGlobals() {\n  if (typeof process === 'object' && typeof process.version === 'string') {\n    var parts = process.version.split('.');\n    var nodeVersion = utils.reduce(parts, function(a, v) {\n      return a << 8 | v;\n    });\n\n    // 'errno' was renamed to process._errno in v0.9.11.\n\n    if (nodeVersion < 0x00090B) {\n      return ['errno'];\n    }\n  }\n\n  return [];\n}\n"]}