{"version":3,"sources":["context.js"],"names":[],"mappings":";;;;AAIA,OAAO,OAAP,GAAiB,OAAjB;;;;;;;AAOA,SAAS,OAAT,GAAmB,CAAE;;;;;;;;;AASrB,QAAQ,SAAR,CAAkB,QAAlB,GAA6B,UAAS,QAAT,EAAmB;AAC9C,MAAI,CAAC,UAAU,MAAf,EAAuB;AACrB,WAAO,KAAK,SAAZ;AACD;AACD,OAAK,IAAL,GAAY,KAAK,SAAL,GAAiB,QAA7B;AACA,SAAO,IAAP;AACD,CAND;;;;;;;;;AAeA,QAAQ,SAAR,CAAkB,OAAlB,GAA4B,UAAS,EAAT,EAAa;AACvC,MAAI,CAAC,UAAU,MAAf,EAAuB;AACrB,WAAO,KAAK,QAAL,GAAgB,OAAhB,EAAP;AACD;AACD,OAAK,QAAL,GAAgB,OAAhB,CAAwB,EAAxB;AACA,SAAO,IAAP;AACD,CAND;;;;;;;;;AAeA,QAAQ,SAAR,CAAkB,cAAlB,GAAmC,UAAS,OAAT,EAAkB;AACnD,OAAK,QAAL,GAAgB,cAAhB,CAA+B,OAA/B;AACA,SAAO,IAAP;AACD,CAHD;;;;;;;;;AAYA,QAAQ,SAAR,CAAkB,IAAlB,GAAyB,UAAS,EAAT,EAAa;AACpC,OAAK,QAAL,GAAgB,IAAhB,CAAqB,EAArB;AACA,SAAO,IAAP;AACD,CAHD;;;;;;;;AAWA,QAAQ,SAAR,CAAkB,IAAlB,GAAyB,YAAW;AAClC,OAAK,QAAL,GAAgB,IAAhB;AACA,SAAO,IAAP;AACD,CAHD;;;;;;;;;AAYA,QAAQ,SAAR,CAAkB,OAAlB,GAA4B,UAAS,CAAT,EAAY;AACtC,MAAI,CAAC,UAAU,MAAf,EAAuB;AACrB,WAAO,KAAK,QAAL,GAAgB,OAAhB,EAAP;AACD;AACD,OAAK,QAAL,GAAgB,OAAhB,CAAwB,CAAxB;AACA,SAAO,IAAP;AACD,CAND;;;;;;;;AAcA,QAAQ,SAAR,CAAkB,OAAlB,GAA4B,YAAW;AACrC,SAAO,KAAK,SAAL,CAAe,IAAf,EAAqB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC7C,WAAO,QAAQ,UAAR,IAAsB,QAAQ,MAA9B,GAAuC,SAAvC,GAAmD,GAA1D;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAJD","file":"context-compiled.js","sourcesContent":["/**\n * Expose `Context`.\n */\n\nmodule.exports = Context;\n\n/**\n * Initialize a new `Context`.\n *\n * @api private\n */\nfunction Context() {}\n\n/**\n * Set or get the context `Runnable` to `runnable`.\n *\n * @api private\n * @param {Runnable} runnable\n * @return {Context}\n */\nContext.prototype.runnable = function(runnable) {\n  if (!arguments.length) {\n    return this._runnable;\n  }\n  this.test = this._runnable = runnable;\n  return this;\n};\n\n/**\n * Set test timeout `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this.runnable().timeout();\n  }\n  this.runnable().timeout(ms);\n  return this;\n};\n\n/**\n * Set test timeout `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Context} self\n */\nContext.prototype.enableTimeouts = function(enabled) {\n  this.runnable().enableTimeouts(enabled);\n  return this;\n};\n\n/**\n * Set test slowness threshold `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.slow = function(ms) {\n  this.runnable().slow(ms);\n  return this;\n};\n\n/**\n * Mark a test as skipped.\n *\n * @api private\n * @return {Context} self\n */\nContext.prototype.skip = function() {\n  this.runnable().skip();\n  return this;\n};\n\n/**\n * Allow a number of retries on failed tests\n *\n * @api private\n * @param {number} n\n * @return {Context} self\n */\nContext.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this.runnable().retries();\n  }\n  this.runnable().retries(n);\n  return this;\n};\n\n/**\n * Inspect the context void of `._runnable`.\n *\n * @api private\n * @return {string}\n */\nContext.prototype.inspect = function() {\n  return JSON.stringify(this, function(key, val) {\n    return key === 'runnable' || key === 'test' ? undefined : val;\n  }, 2);\n};\n"]}