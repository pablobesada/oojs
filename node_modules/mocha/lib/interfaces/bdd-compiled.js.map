{"version":3,"sources":["bdd.js"],"names":[],"mappings":";;;;AAIA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,SAAR,CAAX;AACA,IAAI,WAAW,QAAQ,sBAAR,CAAf;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAgB;AAC/B,MAAI,SAAS,CAAC,KAAD,CAAb;;AAEA,QAAM,EAAN,CAAS,aAAT,EAAwB,UAAS,OAAT,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B;AACrD,QAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,EAA4B,OAA5B,CAAb;;AAEA,YAAQ,MAAR,GAAiB,OAAO,MAAxB;AACA,YAAQ,KAAR,GAAgB,OAAO,KAAvB;AACA,YAAQ,UAAR,GAAqB,OAAO,UAA5B;AACA,YAAQ,SAAR,GAAoB,OAAO,SAA3B;AACA,YAAQ,GAAR,GAAc,MAAM,OAAN,CAAc,KAAd,IAAuB,OAAO,YAAP,CAAoB,KAApB,CAArC;;;;;;;AAOA,YAAQ,QAAR,GAAmB,QAAQ,OAAR,GAAkB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACvD,UAAI,QAAQ,MAAM,MAAN,CAAa,OAAO,CAAP,CAAb,EAAwB,KAAxB,CAAZ;AACA,YAAM,IAAN,GAAa,IAAb;AACA,aAAO,OAAP,CAAe,KAAf;AACA,SAAG,IAAH,CAAQ,KAAR;AACA,aAAO,KAAP;AACA,aAAO,KAAP;AACD,KAPD;;;;;;AAaA,YAAQ,SAAR,GAAoB,QAAQ,QAAR,GAAmB,QAAQ,QAAR,CAAiB,IAAjB,GAAwB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACjF,UAAI,QAAQ,MAAM,MAAN,CAAa,OAAO,CAAP,CAAb,EAAwB,KAAxB,CAAZ;AACA,YAAM,OAAN,GAAgB,IAAhB;AACA,aAAO,OAAP,CAAe,KAAf;AACA,SAAG,IAAH,CAAQ,KAAR;AACA,aAAO,KAAP;AACD,KAND;;;;;;AAYA,YAAQ,QAAR,CAAiB,IAAjB,GAAwB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AAC1C,UAAI,QAAQ,QAAQ,QAAR,CAAiB,KAAjB,EAAwB,EAAxB,CAAZ;AACA,YAAM,IAAN,CAAW,MAAM,SAAN,EAAX;AACA,aAAO,KAAP;AACD,KAJD;;;;;;;;AAYA,QAAI,KAAK,QAAQ,EAAR,GAAa,QAAQ,OAAR,GAAkB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AAC1D,UAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,UAAI,MAAM,OAAV,EAAmB;AACjB,aAAK,IAAL;AACD;AACD,UAAI,OAAO,IAAI,IAAJ,CAAS,KAAT,EAAgB,EAAhB,CAAX;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,YAAM,OAAN,CAAc,IAAd;AACA,aAAO,IAAP;AACD,KATD;;;;;;AAeA,YAAQ,EAAR,CAAW,IAAX,GAAkB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACpC,UAAI,OAAO,GAAG,KAAH,EAAU,EAAV,CAAX;AACA,UAAI,WAAW,MAAM,SAAS,KAAK,SAAL,EAAT,CAAN,GAAmC,GAAlD;AACA,YAAM,IAAN,CAAW,IAAI,MAAJ,CAAW,QAAX,CAAX;AACA,aAAO,IAAP;AACD,KALD;;;;;;AAWA,YAAQ,GAAR,GAAc,QAAQ,QAAR,GAAmB,QAAQ,EAAR,CAAW,IAAX,GAAkB,UAAS,KAAT,EAAgB;AACjE,cAAQ,EAAR,CAAW,KAAX;AACD,KAFD;;;;;AAOA,YAAQ,EAAR,CAAW,OAAX,GAAqB,UAAS,CAAT,EAAY;AAC/B,cAAQ,OAAR,CAAgB,CAAhB;AACD,KAFD;AAGD,GAvFD;AAwFD,CA3FD","file":"bdd-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\nvar escapeRe = require('escape-string-regexp');\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha) {\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function(title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe = context.xcontext = context.describe.skip = function(title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function(title, fn) {\n      var suite = context.describe(title, fn);\n      mocha.grep(suite.fullTitle());\n      return suite;\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    var it = context.it = context.specify = function(title, fn) {\n      var suite = suites[0];\n      if (suite.pending) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function(title, fn) {\n      var test = it(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n      return test;\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit = context.xspecify = context.it.skip = function(title) {\n      context.it(title);\n    };\n\n    /**\n     * Number of attempts to retry.\n     */\n    context.it.retries = function(n) {\n      context.retries(n);\n    };\n  });\n};\n"]}