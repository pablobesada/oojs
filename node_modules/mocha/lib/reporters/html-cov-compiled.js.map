{"version":3,"sources":["html-cov.js"],"names":[],"mappings":";;;;AAIA,IAAI,UAAU,QAAQ,YAAR,CAAd;AACA,IAAI,eAAe,QAAQ,IAAR,EAAc,YAAjC;AACA,IAAI,OAAO,QAAQ,MAAR,EAAgB,IAA3B;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,OAA3B;;;;;;;;AAQA,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AACvB,MAAI,OAAO,QAAQ,MAAR,CAAX;AACA,MAAI,OAAO,KAAK,SAAL,EAAgB,0BAAhB,CAAX;AACA,MAAI,MAAM,aAAa,IAAb,EAAmB,MAAnB,CAAV;AACA,MAAI,KAAK,KAAK,OAAL,CAAa,GAAb,EAAkB,EAAE,UAAU,IAAZ,EAAlB,CAAT;AACA,MAAI,OAAO,IAAX;;AAEA,UAAQ,IAAR,CAAa,IAAb,EAAmB,MAAnB,EAA2B,KAA3B;;AAEA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,YAAQ,MAAR,CAAe,KAAf,CAAqB,GAAG;AACtB,WAAK,KAAK,GADY;AAEtB,qBAAe;AAFO,KAAH,CAArB;AAID,GALD;AAMD;;;;;;;;;AASD,SAAS,aAAT,CAAuB,YAAvB,EAAqC;AACnC,MAAI,gBAAgB,EAApB,EAAwB;AACtB,WAAO,MAAP;AACD;AACD,MAAI,gBAAgB,EAApB,EAAwB;AACtB,WAAO,QAAP;AACD;AACD,MAAI,gBAAgB,EAApB,EAAwB;AACtB,WAAO,KAAP;AACD;AACD,SAAO,UAAP;AACD","file":"html-cov-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar JSONCov = require('./json-cov');\nvar readFileSync = require('fs').readFileSync;\nvar join = require('path').join;\n\n/**\n * Expose `HTMLCov`.\n */\n\nexports = module.exports = HTMLCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction HTMLCov(runner) {\n  var jade = require('jade');\n  var file = join(__dirname, '/templates/coverage.jade');\n  var str = readFileSync(file, 'utf8');\n  var fn = jade.compile(str, { filename: file });\n  var self = this;\n\n  JSONCov.call(this, runner, false);\n\n  runner.on('end', function() {\n    process.stdout.write(fn({\n      cov: self.cov,\n      coverageClass: coverageClass\n    }));\n  });\n}\n\n/**\n * Return coverage class for a given coverage percentage.\n *\n * @api private\n * @param {number} coveragePctg\n * @return {string}\n */\nfunction coverageClass(coveragePctg) {\n  if (coveragePctg >= 75) {\n    return 'high';\n  }\n  if (coveragePctg >= 50) {\n    return 'medium';\n  }\n  if (coveragePctg >= 25) {\n    return 'low';\n  }\n  return 'terrible';\n}\n"]}