{"version":3,"sources":["base.js"],"names":[],"mappings":"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","file":"base-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar diff = require('diff');\nvar ms = require('../ms');\nvar utils = require('../utils');\nvar supportsColor = process.browser ? null : require('supports-color');\n\n/**\n * Expose `Base`.\n */\n\nexports = module.exports = Base;\n\n/**\n * Save timer references to avoid Sinon interfering.\n * See: https://github.com/mochajs/mocha/issues/237\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Check if both stdio streams are associated with a tty.\n */\n\nvar isatty = tty.isatty(1) && tty.isatty(2);\n\n/**\n * Enable coloring by default, except in the browser interface.\n */\n\nexports.useColors = !process.browser && (supportsColor || (process.env.MOCHA_COLORS !== undefined));\n\n/**\n * Inline diffs instead of +/-\n */\n\nexports.inlineDiffs = false;\n\n/**\n * Default color map.\n */\n\nexports.colors = {\n  pass: 90,\n  fail: 31,\n  'bright pass': 92,\n  'bright fail': 91,\n  'bright yellow': 93,\n  pending: 36,\n  suite: 0,\n  'error title': 0,\n  'error message': 31,\n  'error stack': 90,\n  checkmark: 32,\n  fast: 90,\n  medium: 33,\n  slow: 31,\n  green: 32,\n  light: 90,\n  'diff gutter': 90,\n  'diff added': 32,\n  'diff removed': 31\n};\n\n/**\n * Default symbol map.\n */\n\nexports.symbols = {\n  ok: '✓',\n  err: '✖',\n  dot: '․'\n};\n\n// With node.js on Windows: use symbols available in terminal default fonts\nif (process.platform === 'win32') {\n  exports.symbols.ok = '\\u221A';\n  exports.symbols.err = '\\u00D7';\n  exports.symbols.dot = '.';\n}\n\n/**\n * Color `str` with the given `type`,\n * allowing colors to be disabled,\n * as well as user-defined color\n * schemes.\n *\n * @param {string} type\n * @param {string} str\n * @return {string}\n * @api private\n */\nvar color = exports.color = function(type, str) {\n  if (!exports.useColors) {\n    return String(str);\n  }\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Expose term window size, with some defaults for when stderr is not a tty.\n */\n\nexports.window = {\n  width: 75\n};\n\nif (isatty) {\n  exports.window.width = process.stdout.getWindowSize\n      ? process.stdout.getWindowSize(1)[0]\n      : tty.getWindowSize()[1];\n}\n\n/**\n * Expose some basic cursor interactions that are common among reporters.\n */\n\nexports.cursor = {\n  hide: function() {\n    isatty && process.stdout.write('\\u001b[?25l');\n  },\n\n  show: function() {\n    isatty && process.stdout.write('\\u001b[?25h');\n  },\n\n  deleteLine: function() {\n    isatty && process.stdout.write('\\u001b[2K');\n  },\n\n  beginningOfLine: function() {\n    isatty && process.stdout.write('\\u001b[0G');\n  },\n\n  CR: function() {\n    if (isatty) {\n      exports.cursor.deleteLine();\n      exports.cursor.beginningOfLine();\n    } else {\n      process.stdout.write('\\r');\n    }\n  }\n};\n\n/**\n * Outut the given `failures` as a list.\n *\n * @param {Array} failures\n * @api public\n */\n\nexports.list = function(failures) {\n  console.log();\n  failures.forEach(function(test, i) {\n    // format\n    var fmt = color('error title', '  %s) %s:\\n')\n      + color('error message', '     %s')\n      + color('error stack', '\\n%s\\n');\n\n    // msg\n    var msg;\n    var err = test.err;\n    var message;\n    if (err.message) {\n      message = err.message;\n    } else if (typeof err.inspect === 'function') {\n      message = err.inspect() + '';\n    } else {\n      message = '';\n    }\n    var stack = err.stack || message;\n    var index = stack.indexOf(message);\n    var actual = err.actual;\n    var expected = err.expected;\n    var escape = true;\n\n    if (index === -1) {\n      msg = message;\n    } else {\n      index += message.length;\n      msg = stack.slice(0, index);\n      // remove msg from stack\n      stack = stack.slice(index + 1);\n    }\n\n    // uncaught\n    if (err.uncaught) {\n      msg = 'Uncaught ' + msg;\n    }\n    // explicitly show diff\n    if (err.showDiff !== false && sameType(actual, expected) && expected !== undefined) {\n      escape = false;\n      if (!(utils.isString(actual) && utils.isString(expected))) {\n        err.actual = actual = utils.stringify(actual);\n        err.expected = expected = utils.stringify(expected);\n      }\n\n      fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n      var match = message.match(/^([^:]+): expected/);\n      msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\n      if (exports.inlineDiffs) {\n        msg += inlineDiff(err, escape);\n      } else {\n        msg += unifiedDiff(err, escape);\n      }\n    }\n\n    // indent stack trace\n    stack = stack.replace(/^/gm, '  ');\n\n    console.log(fmt, (i + 1), test.fullTitle(), msg, stack);\n  });\n};\n\n/**\n * Initialize a new `Base` reporter.\n *\n * All other reporters generally\n * inherit from this reporter, providing\n * stats such as test duration, number\n * of tests passed / failed etc.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Base(runner) {\n  var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };\n  var failures = this.failures = [];\n\n  if (!runner) {\n    return;\n  }\n  this.runner = runner;\n\n  runner.stats = stats;\n\n  runner.on('start', function() {\n    stats.start = new Date();\n  });\n\n  runner.on('suite', function(suite) {\n    stats.suites = stats.suites || 0;\n    suite.root || stats.suites++;\n  });\n\n  runner.on('test end', function() {\n    stats.tests = stats.tests || 0;\n    stats.tests++;\n  });\n\n  runner.on('pass', function(test) {\n    stats.passes = stats.passes || 0;\n\n    if (test.duration > test.slow()) {\n      test.speed = 'slow';\n    } else if (test.duration > test.slow() / 2) {\n      test.speed = 'medium';\n    } else {\n      test.speed = 'fast';\n    }\n\n    stats.passes++;\n  });\n\n  runner.on('fail', function(test, err) {\n    stats.failures = stats.failures || 0;\n    stats.failures++;\n    test.err = err;\n    failures.push(test);\n  });\n\n  runner.on('end', function() {\n    stats.end = new Date();\n    stats.duration = new Date() - stats.start;\n  });\n\n  runner.on('pending', function() {\n    stats.pending++;\n  });\n}\n\n/**\n * Output common epilogue used by many of\n * the bundled reporters.\n *\n * @api public\n */\nBase.prototype.epilogue = function() {\n  var stats = this.stats;\n  var fmt;\n\n  console.log();\n\n  // passes\n  fmt = color('bright pass', ' ')\n    + color('green', ' %d passing')\n    + color('light', ' (%s)');\n\n  console.log(fmt,\n    stats.passes || 0,\n    ms(stats.duration));\n\n  // pending\n  if (stats.pending) {\n    fmt = color('pending', ' ')\n      + color('pending', ' %d pending');\n\n    console.log(fmt, stats.pending);\n  }\n\n  // failures\n  if (stats.failures) {\n    fmt = color('fail', '  %d failing');\n\n    console.log(fmt, stats.failures);\n\n    Base.list(this.failures);\n    console.log();\n  }\n\n  console.log();\n};\n\n/**\n * Pad the given `str` to `len`.\n *\n * @api private\n * @param {string} str\n * @param {string} len\n * @return {string}\n */\nfunction pad(str, len) {\n  str = String(str);\n  return Array(len - str.length + 1).join(' ') + str;\n}\n\n/**\n * Returns an inline diff between 2 strings with coloured ANSI output\n *\n * @api private\n * @param {Error} err with actual/expected\n * @param {boolean} escape\n * @return {string} Diff\n */\nfunction inlineDiff(err, escape) {\n  var msg = errorDiff(err, 'WordsWithSpace', escape);\n\n  // linenos\n  var lines = msg.split('\\n');\n  if (lines.length > 4) {\n    var width = String(lines.length).length;\n    msg = lines.map(function(str, i) {\n      return pad(++i, width) + ' |' + ' ' + str;\n    }).join('\\n');\n  }\n\n  // legend\n  msg = '\\n'\n    + color('diff removed', 'actual')\n    + ' '\n    + color('diff added', 'expected')\n    + '\\n\\n'\n    + msg\n    + '\\n';\n\n  // indent\n  msg = msg.replace(/^/gm, '      ');\n  return msg;\n}\n\n/**\n * Returns a unified diff between two strings.\n *\n * @api private\n * @param {Error} err with actual/expected\n * @param {boolean} escape\n * @return {string} The diff.\n */\nfunction unifiedDiff(err, escape) {\n  var indent = '      ';\n  function cleanUp(line) {\n    if (escape) {\n      line = escapeInvisibles(line);\n    }\n    if (line[0] === '+') {\n      return indent + colorLines('diff added', line);\n    }\n    if (line[0] === '-') {\n      return indent + colorLines('diff removed', line);\n    }\n    if (line.match(/\\@\\@/)) {\n      return null;\n    }\n    if (line.match(/\\\\ No newline/)) {\n      return null;\n    }\n    return indent + line;\n  }\n  function notBlank(line) {\n    return typeof line !== 'undefined' && line !== null;\n  }\n  var msg = diff.createPatch('string', err.actual, err.expected);\n  var lines = msg.split('\\n').splice(4);\n  return '\\n      '\n    + colorLines('diff added', '+ expected') + ' '\n    + colorLines('diff removed', '- actual')\n    + '\\n\\n'\n    + lines.map(cleanUp).filter(notBlank).join('\\n');\n}\n\n/**\n * Return a character diff for `err`.\n *\n * @api private\n * @param {Error} err\n * @param {string} type\n * @param {boolean} escape\n * @return {string}\n */\nfunction errorDiff(err, type, escape) {\n  var actual = escape ? escapeInvisibles(err.actual) : err.actual;\n  var expected = escape ? escapeInvisibles(err.expected) : err.expected;\n  return diff['diff' + type](actual, expected).map(function(str) {\n    if (str.added) {\n      return colorLines('diff added', str.value);\n    }\n    if (str.removed) {\n      return colorLines('diff removed', str.value);\n    }\n    return str.value;\n  }).join('');\n}\n\n/**\n * Returns a string with all invisible characters in plain text\n *\n * @api private\n * @param {string} line\n * @return {string}\n */\nfunction escapeInvisibles(line) {\n  return line.replace(/\\t/g, '<tab>')\n    .replace(/\\r/g, '<CR>')\n    .replace(/\\n/g, '<LF>\\n');\n}\n\n/**\n * Color lines for `str`, using the color `name`.\n *\n * @api private\n * @param {string} name\n * @param {string} str\n * @return {string}\n */\nfunction colorLines(name, str) {\n  return str.split('\\n').map(function(str) {\n    return color(name, str);\n  }).join('\\n');\n}\n\n/**\n * Object#toString reference.\n */\nvar objToString = Object.prototype.toString;\n\n/**\n * Check that a / b have the same type.\n *\n * @api private\n * @param {Object} a\n * @param {Object} b\n * @return {boolean}\n */\nfunction sameType(a, b) {\n  return objToString.call(a) === objToString.call(b);\n}\n"]}