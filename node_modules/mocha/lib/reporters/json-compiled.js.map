{"version":3,"sources":["json.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,QAAQ,QAAR,CAAX;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,YAA3B;;;;;;;;AAQA,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC5B,OAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,OAAO,IAAX;AACA,MAAI,QAAQ,EAAZ;AACA,MAAI,UAAU,EAAd;AACA,MAAI,WAAW,EAAf;AACA,MAAI,SAAS,EAAb;;AAEA,SAAO,EAAP,CAAU,UAAV,EAAsB,UAAS,IAAT,EAAe;AACnC,UAAM,IAAN,CAAW,IAAX;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAC/B,WAAO,IAAP,CAAY,IAAZ;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAC/B,aAAS,IAAT,CAAc,IAAd;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,SAAV,EAAqB,UAAS,IAAT,EAAe;AAClC,YAAQ,IAAR,CAAa,IAAb;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,QAAI,MAAM;AACR,aAAO,KAAK,KADJ;AAER,aAAO,MAAM,GAAN,CAAU,KAAV,CAFC;AAGR,eAAS,QAAQ,GAAR,CAAY,KAAZ,CAHD;AAIR,gBAAU,SAAS,GAAT,CAAa,KAAb,CAJF;AAKR,cAAQ,OAAO,GAAP,CAAW,KAAX;AALA,KAAV;;AAQA,WAAO,WAAP,GAAqB,GAArB;;AAEA,YAAQ,MAAR,CAAe,KAAf,CAAqB,KAAK,SAAL,CAAe,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAArB;AACD,GAZD;AAaD;;;;;;;;;;AAUD,SAAS,KAAT,CAAe,IAAf,EAAqB;AACnB,SAAO;AACL,WAAO,KAAK,KADP;AAEL,eAAW,KAAK,SAAL,EAFN;AAGL,cAAU,KAAK,QAHV;AAIL,kBAAc,KAAK,YAAL,EAJT;AAKL,SAAK,UAAU,KAAK,GAAL,IAAY,EAAtB;AALA,GAAP;AAOD;;;;;;;;;AASD,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,MAAI,MAAM,EAAV;AACA,SAAO,mBAAP,CAA2B,GAA3B,EAAgC,OAAhC,CAAwC,UAAS,GAAT,EAAc;AACpD,QAAI,GAAJ,IAAW,IAAI,GAAJ,CAAX;AACD,GAFD,EAEG,GAFH;AAGA,SAAO,GAAP;AACD","file":"json-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Initialize a new `JSON` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction JSONReporter(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n\n  runner.on('test end', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test) {\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test) {\n    failures.push(test);\n  });\n\n  runner.on('pending', function(test) {\n    pending.push(test);\n  });\n\n  runner.on('end', function() {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: errorJSON(test.err || {})\n  };\n}\n\n/**\n * Transform `error` into a JSON object.\n *\n * @api private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function(key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n"]}