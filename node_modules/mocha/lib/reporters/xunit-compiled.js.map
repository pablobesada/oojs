{"version":3,"sources":["xunit.js"],"names":[],"mappings":"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","file":"xunit-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\nvar inherits = utils.inherits;\nvar fs = require('fs');\nvar escape = utils.escape;\nvar mkdirp = require('mkdirp');\nvar path = require('path');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Expose `XUnit`.\n */\n\nexports = module.exports = XUnit;\n\n/**\n * Initialize a new `XUnit` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction XUnit(runner, options) {\n  Base.call(this, runner);\n\n  var stats = this.stats;\n  var tests = [];\n  var self = this;\n\n  if (options.reporterOptions && options.reporterOptions.output) {\n    if (!fs.createWriteStream) {\n      throw new Error('file output not supported in browser');\n    }\n    mkdirp.sync(path.dirname(options.reporterOptions.output));\n    self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n  }\n\n  runner.on('pending', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('fail', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('end', function() {\n    self.write(tag('testsuite', {\n      name: 'Mocha Tests',\n      tests: stats.tests,\n      failures: stats.failures,\n      errors: stats.failures,\n      skipped: stats.tests - stats.failures - stats.passes,\n      timestamp: (new Date()).toUTCString(),\n      time: (stats.duration / 1000) || 0\n    }, false));\n\n    tests.forEach(function(t) {\n      self.test(t);\n    });\n\n    self.write('</testsuite>');\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(XUnit, Base);\n\n/**\n * Override done to close the stream (if it's a file).\n *\n * @param failures\n * @param {Function} fn\n */\nXUnit.prototype.done = function(failures, fn) {\n  if (this.fileStream) {\n    this.fileStream.end(function() {\n      fn(failures);\n    });\n  } else {\n    fn(failures);\n  }\n};\n\n/**\n * Write out the given line.\n *\n * @param {string} line\n */\nXUnit.prototype.write = function(line) {\n  if (this.fileStream) {\n    this.fileStream.write(line + '\\n');\n  } else if (typeof process === 'object' && process.stdout) {\n    process.stdout.write(line + '\\n');\n  } else {\n    console.log(line);\n  }\n};\n\n/**\n * Output tag for the given `test.`\n *\n * @param {Test} test\n */\nXUnit.prototype.test = function(test) {\n  var attrs = {\n    classname: test.parent.fullTitle(),\n    name: test.title,\n    time: (test.duration / 1000) || 0\n  };\n\n  if (test.state === 'failed') {\n    var err = test.err;\n    this.write(tag('testcase', attrs, false, tag('failure', {}, false, cdata(escape(err.message) + '\\n' + err.stack))));\n  } else if (test.pending) {\n    this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    this.write(tag('testcase', attrs, true));\n  }\n};\n\n/**\n * HTML tag helper.\n *\n * @param name\n * @param attrs\n * @param close\n * @param content\n * @return {string}\n */\nfunction tag(name, attrs, close, content) {\n  var end = close ? '/>' : '>';\n  var pairs = [];\n  var tag;\n\n  for (var key in attrs) {\n    if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n      pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n    }\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n  if (content) {\n    tag += content + '</' + name + end;\n  }\n  return tag;\n}\n\n/**\n * Return cdata escaped CDATA `str`.\n */\n\nfunction cdata(str) {\n  return '<![CDATA[' + escape(str) + ']]>';\n}\n"]}