{"version":3,"sources":["progress.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,QAAQ,QAAR,CAAX;AACA,IAAI,WAAW,QAAQ,UAAR,EAAoB,QAAnC;AACA,IAAI,QAAQ,KAAK,KAAjB;AACA,IAAI,SAAS,KAAK,MAAlB;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,QAA3B;;;;;;AAMA,KAAK,MAAL,CAAY,QAAZ,GAAuB,EAAvB;;;;;;;;;AASA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,OAA1B,EAAmC;AACjC,OAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,OAAO,IAAX;AACA,MAAI,QAAQ,KAAK,MAAL,CAAY,KAAZ,GAAoB,GAApB,GAA0B,CAAtC;AACA,MAAI,QAAQ,OAAO,KAAnB;AACA,MAAI,WAAW,CAAf;AACA,MAAI,QAAQ,CAAC,CAAb;;;AAGA,YAAU,WAAW,EAArB;AACA,UAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,GAA/B;AACA,UAAQ,QAAR,GAAmB,QAAQ,QAAR,IAAoB,GAAvC;AACA,UAAQ,UAAR,GAAqB,QAAQ,UAAR,IAAsB,KAAK,OAAL,CAAa,GAAxD;AACA,UAAQ,KAAR,GAAgB,QAAQ,KAAR,IAAiB,GAAjC;AACA,UAAQ,OAAR,GAAkB,KAAlB;;;AAGA,SAAO,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,YAAQ,GAAR;AACA,WAAO,IAAP;AACD,GAHD;;;AAMA,SAAO,EAAP,CAAU,UAAV,EAAsB,YAAW;AAC/B;;AAEA,QAAI,UAAU,WAAW,KAAzB;AACA,QAAI,IAAI,QAAQ,OAAR,GAAkB,CAA1B;AACA,QAAI,IAAI,QAAQ,CAAhB;;AAEA,QAAI,MAAM,KAAN,IAAe,CAAC,QAAQ,OAA5B,EAAqC;;AAEnC;AACD;AACD,YAAQ,CAAR;;AAEA,WAAO,EAAP;AACA,YAAQ,MAAR,CAAe,KAAf,CAAqB,UAArB;AACA,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,UAAN,EAAkB,OAAO,QAAQ,IAAjC,CAArB;AACA,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,CAAN,EAAS,IAAT,CAAc,QAAQ,QAAtB,CAArB;AACA,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,CAAN,EAAS,IAAT,CAAc,QAAQ,UAAtB,CAArB;AACA,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,UAAN,EAAkB,QAAQ,KAA1B,CAArB;AACA,QAAI,QAAQ,OAAZ,EAAqB;AACnB,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,UAAN,EAAkB,MAAM,QAAN,GAAiB,MAAjB,GAA0B,KAA5C,CAArB;AACD;AACF,GAtBD;;;;AA0BA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,WAAO,IAAP;AACA,YAAQ,GAAR;AACA,SAAK,QAAL;AACD,GAJD;AAKD;;;;;AAKD,SAAS,QAAT,EAAmB,IAAnB","file":"progress-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Initialize a new `Progress` bar test reporter.\n *\n * @api public\n * @param {Runner} runner\n * @param {Object} options\n */\nfunction Progress(runner, options) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * .50 | 0;\n  var total = runner.total;\n  var complete = 0;\n  var lastN = -1;\n\n  // default chars\n  options = options || {};\n  options.open = options.open || '[';\n  options.complete = options.complete || 'â–¬';\n  options.incomplete = options.incomplete || Base.symbols.dot;\n  options.close = options.close || ']';\n  options.verbose = false;\n\n  // tests started\n  runner.on('start', function() {\n    console.log();\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on('test end', function() {\n    complete++;\n\n    var percent = complete / total;\n    var n = width * percent | 0;\n    var i = width - n;\n\n    if (n === lastN && !options.verbose) {\n      // Don't re-render the line if it hasn't changed\n      return;\n    }\n    lastN = n;\n\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.on('end', function() {\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Progress, Base);\n"]}