{"version":3,"sources":["events.js"],"names":[],"mappings":"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","file":"events-compiled.js","sourcesContent":["/**\n * Module exports.\n */\n\nexports.EventEmitter = EventEmitter;\n\n/**\n * Object#hasOwnProperty reference.\n */\nvar objToString = Object.prototype.toString;\n\n/**\n * Check if a value is an array.\n *\n * @api private\n * @param {*} val The value to test.\n * @return {boolean} true if the value is a boolean, otherwise false.\n */\nfunction isArray(val) {\n  return objToString.call(val) === '[object Array]';\n}\n\n/**\n * Event emitter constructor.\n *\n * @api public\n */\nfunction EventEmitter() {}\n\n/**\n * Add a listener.\n *\n * @api public\n * @param {string} name Event name.\n * @param {Function} fn Event handler.\n * @return {EventEmitter} Emitter instance.\n */\nEventEmitter.prototype.on = function(name, fn) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = fn;\n  } else if (isArray(this.$events[name])) {\n    this.$events[name].push(fn);\n  } else {\n    this.$events[name] = [this.$events[name], fn];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n/**\n * Adds a volatile listener.\n *\n * @api public\n * @param {string} name Event name.\n * @param {Function} fn Event handler.\n * @return {EventEmitter} Emitter instance.\n */\nEventEmitter.prototype.once = function(name, fn) {\n  var self = this;\n\n  function on() {\n    self.removeListener(name, on);\n    fn.apply(this, arguments);\n  }\n\n  on.listener = fn;\n  this.on(name, on);\n\n  return this;\n};\n\n/**\n * Remove a listener.\n *\n * @api public\n * @param {string} name Event name.\n * @param {Function} fn Event handler.\n * @return {EventEmitter} Emitter instance.\n */\nEventEmitter.prototype.removeListener = function(name, fn) {\n  if (this.$events && this.$events[name]) {\n    var list = this.$events[name];\n\n    if (isArray(list)) {\n      var pos = -1;\n\n      for (var i = 0, l = list.length; i < l; i++) {\n        if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n          pos = i;\n          break;\n        }\n      }\n\n      if (pos < 0) {\n        return this;\n      }\n\n      list.splice(pos, 1);\n\n      if (!list.length) {\n        delete this.$events[name];\n      }\n    } else if (list === fn || (list.listener && list.listener === fn)) {\n      delete this.$events[name];\n    }\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners for an event.\n *\n * @api public\n * @param {string} name Event name.\n * @return {EventEmitter} Emitter instance.\n */\nEventEmitter.prototype.removeAllListeners = function(name) {\n  if (name === undefined) {\n    this.$events = {};\n    return this;\n  }\n\n  if (this.$events && this.$events[name]) {\n    this.$events[name] = null;\n  }\n\n  return this;\n};\n\n/**\n * Get all listeners for a given event.\n *\n * @api public\n * @param {string} name Event name.\n * @return {EventEmitter} Emitter instance.\n */\nEventEmitter.prototype.listeners = function(name) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = [];\n  }\n\n  if (!isArray(this.$events[name])) {\n    this.$events[name] = [this.$events[name]];\n  }\n\n  return this.$events[name];\n};\n\n/**\n * Emit an event.\n *\n * @api public\n * @param {string} name Event name.\n * @return {boolean} true if at least one handler was invoked, else false.\n */\nEventEmitter.prototype.emit = function(name) {\n  if (!this.$events) {\n    return false;\n  }\n\n  var handler = this.$events[name];\n\n  if (!handler) {\n    return false;\n  }\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  if (typeof handler === 'function') {\n    handler.apply(this, args);\n  } else if (isArray(handler)) {\n    var listeners = handler.slice();\n\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n};\n"]}