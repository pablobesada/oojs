{"version":3,"sources":["basic.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,KAAR,EAAe,IAA1B;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;;;;;;AAOA,IAAI,OAAO,sBAAX;AACA,IAAI,OAAO,EAAC,GAAE,GAAH,EAAO,GAAE,KAAT,EAAe,GAAE,CAAC,GAAD,EAAK,GAAL,EAAS,EAAC,GAAE,EAAH,EAAM,GAAE,GAAR,EAAT,CAAjB,EAAX;AACA,IAAI,OAAO,EAAC,GAAE,GAAH,EAAO,GAAE,OAAT,EAAiB,GAAE,CAAC,GAAD,EAAK,GAAL,EAAS,MAAT,CAAnB,EAAX;;AAEA,IAAI,OAAO,KAAK,KAAL,CAAW,KAAK,SAAL,CAAe,IAAf,CAAX,CAAX;AACA,KAAK,CAAL,GAAS,KAAT;AACA,KAAK,CAAL,CAAO,CAAP,EAAU,KAAV,GAAkB,IAAlB;AACA,IAAI,YAAY,2BAAhB;;AAEA,KAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACvB,MAAE,KAAF,CAAQ,QAAQ,IAAR,CAAR,EAAuB,IAAvB;AACA,MAAE,KAAF,CAAQ,QAAQ,IAAR,CAAR,EAAuB,IAAvB;AACA,MAAE,KAAF,CAAQ,QAAQ,IAAR,CAAR,EAAuB,SAAvB;AACA,MAAE,GAAF;AACH,CALD","file":"basic-compiled.js","sourcesContent":["var test = require('tap').test\nvar sigmund = require('../sigmund.js')\n\n\n// occasionally there are duplicates\n// that's an acceptable edge-case.  JSON.stringify and util.inspect\n// have some collision potential as well, though less, and collision\n// detection is expensive.\nvar hash = '{abc/def/g{0h1i2{jkl'\nvar obj1 = {a:'b',c:/def/,g:['h','i',{j:'',k:'l'}]}\nvar obj2 = {a:'b',c:'/def/',g:['h','i','{jkl']}\n\nvar obj3 = JSON.parse(JSON.stringify(obj1))\nobj3.c = /def/\nobj3.g[2].cycle = obj3\nvar cycleHash = '{abc/def/g{0h1i2{jklcycle'\n\ntest('basic', function (t) {\n    t.equal(sigmund(obj1), hash)\n    t.equal(sigmund(obj2), hash)\n    t.equal(sigmund(obj3), cycleHash)\n    t.end()\n})\n\n"]}