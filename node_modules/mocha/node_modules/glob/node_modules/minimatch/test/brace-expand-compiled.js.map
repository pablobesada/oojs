{"version":3,"sources":["brace-expand.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,KAAR,CAAV;IACI,YAAY,QAAQ,KAAR,CADhB;;AAGA,IAAI,IAAJ,CAAS,iBAAT,EAA4B,UAAU,CAAV,EAAa;;AAEvC,GAAE,CAAE,CAAE,0BAAF,EACE,CAAE,MAAF,EACE,MADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,EAKE,OALF,EAME,OANF,EAOE,OAPF,EAQE,OARF,EASE,OATF,CADF,CAAF,EAWE,CAAE,UAAF,EACE,CAAE,KAAF,EACE,KADF,EAEE,KAFF,EAGE,KAHF,EAIE,KAJF,CADF,CAXF,EAiBE,CAAE,OAAF,EAAW,CAAC,OAAD,CAAX,CAjBF,EAkBA,OAlBA,CAkBQ,UAAU,EAAV,EAAc;AACtB,QAAI,IAAI,GAAG,CAAH,CAAR;QACI,SAAS,GAAG,CAAH,CADb;AAEA,MAAE,UAAF,CAAa,UAAU,WAAV,CAAsB,CAAtB,CAAb,EAAuC,MAAvC,EAA+C,CAA/C;AACD,GAtBC;AAuBF,UAAQ,KAAR,CAAc,QAAd;AACA,IAAE,GAAF;AACD,CA3BD","file":"brace-expand-compiled.js","sourcesContent":["var tap = require(\"tap\")\n  , minimatch = require(\"../\")\n\ntap.test(\"brace expansion\", function (t) {\n  // [ pattern, [expanded] ]\n  ; [ [ \"a{b,c{d,e},{f,g}h}x{y,z}\"\n      , [ \"abxy\"\n        , \"abxz\"\n        , \"acdxy\"\n        , \"acdxz\"\n        , \"acexy\"\n        , \"acexz\"\n        , \"afhxy\"\n        , \"afhxz\"\n        , \"aghxy\"\n        , \"aghxz\" ] ]\n    , [ \"a{1..5}b\"\n      , [ \"a1b\"\n        , \"a2b\"\n        , \"a3b\"\n        , \"a4b\"\n        , \"a5b\" ] ]\n    , [ \"a{b}c\", [\"a{b}c\"] ]\n  ].forEach(function (tc) {\n    var p = tc[0]\n      , expect = tc[1]\n    t.equivalent(minimatch.braceExpand(p), expect, p)\n  })\n  console.error(\"ending\")\n  t.end()\n})\n\n\n"]}