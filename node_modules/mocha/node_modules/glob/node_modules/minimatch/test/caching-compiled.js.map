{"version":3,"sources":["caching.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,iBAAR,EAA2B,SAA3C;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,IAAJ,CAAS,YAAT,EAAuB,UAAU,CAAV,EAAa;AAClC,MAAI,MAAM,IAAI,SAAJ,CAAc,KAAd,CAAV;AACA,MAAI,MAAM,IAAI,SAAJ,CAAc,KAAd,CAAV;AACA,IAAE,KAAF,CAAQ,GAAR,EAAa,GAAb,EAAkB,4BAAlB;;AAEA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA+B;AAC7B,QAAI,SAAJ,CAAc,MAAI,CAAlB;AACD;AACD,QAAM,IAAI,SAAJ,CAAc,KAAd,CAAN;AACA,IAAE,QAAF,CAAW,GAAX,EAAgB,GAAhB,EAAqB,2BAArB;AACA,IAAE,GAAF;AACD,CAXD","file":"caching-compiled.js","sourcesContent":["var Minimatch = require(\"../minimatch.js\").Minimatch\nvar tap = require(\"tap\")\ntap.test(\"cache test\", function (t) {\n  var mm1 = new Minimatch(\"a?b\")\n  var mm2 = new Minimatch(\"a?b\")\n  t.equal(mm1, mm2, \"should get the same object\")\n  // the lru should drop it after 100 entries\n  for (var i = 0; i < 100; i ++) {\n    new Minimatch(\"a\"+i)\n  }\n  mm2 = new Minimatch(\"a?b\")\n  t.notEqual(mm1, mm2, \"cache should have dropped\")\n  t.end()\n})\n"]}