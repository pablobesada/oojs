{"version":3,"sources":["pause-resume.js"],"names":[],"mappings":";AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;IACE,gBAAgB,QAAQ,eAAR;;AADlB;IAGE,UAAU,sBAHZ;IAIE,cAAc,QAAQ,qBAAR,CAJhB;IAKE,WAAW,OAAO,IAAP,CAAY,WAAZ,CALb;IAME,OAAO,QAAQ,KAAR,CANT;IAOE,OAAO,KAAK,IAPd;IAQE,OAAO,QAAQ,MAAR,CART;;;;AAYA,QAAQ,KAAR,CAAc,KAAK,OAAL,CAAa,SAAb,EAAwB,IAAxB,CAAd;;AAEA,SAAS,SAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0B;AACxB,MAAI,EAAE,WAAF,EAAJ;AACA,MAAI,EAAE,WAAF,EAAJ;AACA,SAAO,IAAI,CAAJ,GAAQ,CAAR,GAAY,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;;AAED,SAAS,YAAT,CAAuB,CAAvB,EAA0B;;;AAGxB,SAAO,EAAE,GAAF,CAAM,UAAU,CAAV,EAAa;AACxB,WAAO,EAAE,OAAF,CAAU,MAAV,EAAkB,GAAlB,EAAuB,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,CAAP;AACD,GAFM,EAEJ,IAFI,CAEC,SAFD,EAEY,MAFZ,CAEmB,UAAU,GAAV,EAAe,CAAf,EAAkB;AAC1C,QAAI,MAAM,IAAI,IAAI,MAAJ,GAAa,CAAjB,CAAV,EAA+B,IAAI,IAAJ,CAAS,CAAT;AAC/B,WAAO,GAAP;AACD,GALM,EAKJ,EALI,EAKA,IALA,CAKK,SALL,EAKgB,GALhB,CAKoB,UAAU,CAAV,EAAa;;AAEtC,WAAQ,QAAQ,QAAR,KAAqB,OAAtB,GAAiC,CAAjC,GACE,EAAE,OAAF,CAAU,gBAAV,EAA4B,GAA5B,EAAiC,OAAjC,CAAyC,KAAzC,EAAgD,GAAhD,CADT;AAED,GATM,CAAP;AAUD;;AAED,IAAI,cAAc,EAAlB;AACA,IAAI,IAAJ,CAAS,wCAAT,EAAmD,UAAU,CAAV,EAAa;AAC9D,MAAI,IAAI,IAAI,IAAJ,CAAS,OAAT,CAAR;MACE,SAAS,KADX;MAEE,MAAM,EAFR;MAGE,SAAS,YAAY,OAAZ,CAHX;;AAKA,IAAE,EAAF,CAAK,OAAL,EAAc,YAAY;AACxB,YAAQ,KAAR,CAAc,OAAd;AACD,GAFD;;AAIA,IAAE,EAAF,CAAK,QAAL,EAAe,YAAY;AACzB,YAAQ,KAAR,CAAc,QAAd;AACD,GAFD;;AAIA,IAAE,EAAF,CAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACzB,MAAE,KAAF,CAAQ,EAAE,MAAV,EAAkB,oBAAlB;AACA,gBAAY,IAAZ,CAAiB,CAAjB;AACA,MAAE,KAAF;AACA,MAAE,EAAF,CAAK,EAAE,MAAP,EAAe,gBAAf;AACA,eAAW,EAAE,MAAF,CAAS,IAAT,CAAc,CAAd,CAAX,EAA6B,EAA7B;AACD,GAND;;AAQA,IAAE,EAAF,CAAK,KAAL,EAAY,UAAU,OAAV,EAAmB;AAC7B,MAAE,IAAF,CAAO,kBAAP;AACA,kBAAc,aAAa,WAAb,CAAd;AACA,cAAU,aAAa,OAAb,CAAV;AACA,MAAE,SAAF,CAAY,OAAZ,EAAqB,WAArB,EACE,sDADF;;AAGA,MAAE,SAAF,CAAY,OAAZ,EAAqB,MAArB,EACE,iDADF;;AAGA,MAAE,GAAF;AACD,GAXD;AAYD,CAlCD","file":"pause-resume-compiled.js","sourcesContent":["// show that no match events happen while paused.\nvar tap = require(\"tap\")\n, child_process = require(\"child_process\")\n// just some gnarly pattern with lots of matches\n, pattern = \"test/a/!(symlink)/**\"\n, bashResults = require(\"./bash-results.json\")\n, patterns = Object.keys(bashResults)\n, glob = require(\"../\")\n, Glob = glob.Glob\n, path = require(\"path\")\n\n// run from the root of the project\n// this is usually where you're at anyway, but be sure.\nprocess.chdir(path.resolve(__dirname, \"..\"))\n\nfunction alphasort (a, b) {\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nfunction cleanResults (m) {\n  // normalize discrepancies in ordering, duplication,\n  // and ending slashes.\n  return m.map(function (m) {\n    return m.replace(/\\/+/g, \"/\").replace(/\\/$/, \"\")\n  }).sort(alphasort).reduce(function (set, f) {\n    if (f !== set[set.length - 1]) set.push(f)\n    return set\n  }, []).sort(alphasort).map(function (f) {\n    // de-windows\n    return (process.platform !== 'win32') ? f\n           : f.replace(/^[a-zA-Z]:\\\\\\\\/, '/').replace(/\\\\/g, '/')\n  })\n}\n\nvar globResults = []\ntap.test(\"use a Glob object, and pause/resume it\", function (t) {\n  var g = new Glob(pattern)\n  , paused = false\n  , res = []\n  , expect = bashResults[pattern]\n\n  g.on(\"pause\", function () {\n    console.error(\"pause\")\n  })\n\n  g.on(\"resume\", function () {\n    console.error(\"resume\")\n  })\n\n  g.on(\"match\", function (m) {\n    t.notOk(g.paused, \"must not be paused\")\n    globResults.push(m)\n    g.pause()\n    t.ok(g.paused, \"must be paused\")\n    setTimeout(g.resume.bind(g), 10)\n  })\n\n  g.on(\"end\", function (matches) {\n    t.pass(\"reached glob end\")\n    globResults = cleanResults(globResults)\n    matches = cleanResults(matches)\n    t.deepEqual(matches, globResults,\n      \"end event matches should be the same as match events\")\n\n    t.deepEqual(matches, expect,\n      \"glob matches should be the same as bash results\")\n\n    t.end()\n  })\n})\n\n"]}