{"version":3,"sources":["globstar-match.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,YAAR,EAAsB,IAAjC;AACA,IAAI,OAAO,QAAQ,KAAR,EAAe,IAA1B;;AAEA,KAAK,uCAAL,EAA8C,UAAS,CAAT,EAAY;AACxD,MAAI,UAAU,WAAd;AACA,MAAI,IAAI,IAAI,IAAJ,CAAS,OAAT,EAAkB,EAAE,KAAK,SAAP,EAAlB,CAAR;AACA,MAAI,UAAU,EAAd;AACA,IAAE,EAAF,CAAK,OAAL,EAAc,UAAS,CAAT,EAAY;AACxB,YAAQ,KAAR,CAAc,UAAd,EAA0B,CAA1B;AACA,YAAQ,IAAR,CAAa,CAAb;AACD,GAHD;AAIA,IAAE,EAAF,CAAK,KAAL,EAAY,UAAS,GAAT,EAAc;AACxB,YAAQ,KAAR,CAAc,KAAd,EAAqB,GAArB;AACA,cAAU,QAAQ,IAAR,EAAV;AACA,UAAM,IAAI,IAAJ,EAAN;AACA,MAAE,IAAF,CAAO,OAAP,EAAgB,GAAhB,EAAqB,iCAArB;AACA,MAAE,GAAF;AACD,GAND;AAOD,CAfD","file":"globstar-match-compiled.js","sourcesContent":["var Glob = require(\"../glob.js\").Glob\nvar test = require('tap').test\n\ntest('globstar should not have dupe matches', function(t) {\n  var pattern = 'a/**/[gh]'\n  var g = new Glob(pattern, { cwd: __dirname })\n  var matches = []\n  g.on('match', function(m) {\n    console.error('match %j', m)\n    matches.push(m)\n  })\n  g.on('end', function(set) {\n    console.error('set', set)\n    matches = matches.sort()\n    set = set.sort()\n    t.same(matches, set, 'should have same set of matches')\n    t.end()\n  })\n})\n"]}