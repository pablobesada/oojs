{"version":3,"sources":["root-nomount.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,KAAR,CAAV;;AAEA,IAAI,UAAU,QAAQ,GAAR,EAAd;AACA,QAAQ,KAAR,CAAc,SAAd;;AAEA,IAAI,IAAJ,CAAS,wCAAT,EAAmD,UAAU,CAAV,EAAa;AAC9D,MAAI,OAAO,QAAQ,KAAR,CAAX;AACA,MAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAE,IAAF,CAAO,GAAP,EAAY,UAAU,CAAV,EAAa;AACvB,SAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,GAAzB,EAA8B,SAAS,IAAvC,EAAf,EAA8D,UAAU,EAAV,EAAc,OAAd,EAAuB;AACnF,QAAE,OAAF,CAAU,EAAV;AACA,QAAE,IAAF,CAAO,OAAP,EAAgB,EAAhB;AACA,QAAE,GAAF;AACD,KAJD;AAKD,GAND;;AAQA,IAAE,IAAF,CAAO,GAAP,EAAY,UAAU,CAAV,EAAa;AACvB,SAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,KAAK,OAAL,CAAa,GAAb,CAAzB,EAA4C,SAAS,IAArD,EAAf,EAA4E,UAAU,EAAV,EAAc,OAAd,EAAuB;AACjG,QAAE,OAAF,CAAU,EAAV;AACA,QAAE,IAAF,CAAO,OAAP,EAAgB,CAAE,IAAF,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC,OAAjC,EAA0C,SAA1C,CAAhB;AACA,QAAE,GAAF;AACD,KAJD;AAKD,GAND;;AAQA,IAAE,IAAF,CAAO,iBAAP,EAA0B,UAAU,CAAV,EAAa;AACrC,SAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,GAAzB,EAA8B,KAAK,KAAK,OAAL,CAAa,KAAb,CAAnC,EAAwD,SAAS,IAAjE,EAAf,EAAwF,UAAU,EAAV,EAAc,OAAd,EAAuB;AAC7G,QAAE,OAAF,CAAU,EAAV;AACA,QAAE,IAAF,CAAO,OAAP,EAAgB,CAAE,IAAF,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC,OAAjC,EAA0C,SAA1C,CAAhB;AACA,QAAE,GAAF;AACD,KAJD;AAKD,GAND;;AAQA,IAAE,IAAF,CAAO,MAAP,EAAe,UAAU,CAAV,EAAa;AAC1B,YAAQ,KAAR,CAAc,OAAd;AACA,MAAE,GAAF;AACD,GAHD;;AAKA,IAAE,GAAF;AACD,CAjCD","file":"root-nomount-compiled.js","sourcesContent":["var tap = require(\"tap\")\n\nvar origCwd = process.cwd()\nprocess.chdir(__dirname)\n\ntap.test(\"changing root and searching for /b*/**\", function (t) {\n  var glob = require('../')\n  var path = require('path')\n  t.test('.', function (t) {\n    glob('/b*/**', { globDebug: true, root: '.', nomount: true }, function (er, matches) {\n      t.ifError(er)\n      t.like(matches, [])\n      t.end()\n    })\n  })\n\n  t.test('a', function (t) {\n    glob('/b*/**', { globDebug: true, root: path.resolve('a'), nomount: true }, function (er, matches) {\n      t.ifError(er)\n      t.like(matches, [ '/b', '/b/c', '/b/c/d', '/bc', '/bc/e', '/bc/e/f' ])\n      t.end()\n    })\n  })\n\n  t.test('root=a, cwd=a/b', function (t) {\n    glob('/b*/**', { globDebug: true, root: 'a', cwd: path.resolve('a/b'), nomount: true }, function (er, matches) {\n      t.ifError(er)\n      t.like(matches, [ '/b', '/b/c', '/b/c/d', '/bc', '/bc/e', '/bc/e/f' ])\n      t.end()\n    })\n  })\n\n  t.test('cd -', function (t) {\n    process.chdir(origCwd)\n    t.end()\n  })\n\n  t.end()\n})\n"]}