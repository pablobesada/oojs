{"version":3,"sources":["root.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,QAAQ,KAAR,CAAR;;AAEA,IAAI,UAAU,QAAQ,GAAR,EAAd;AACA,QAAQ,KAAR,CAAc,SAAd;;AAEA,IAAI,OAAO,QAAQ,KAAR,CAAX;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,EAAE,IAAF,CAAO,GAAP,EAAY,UAAU,CAAV,EAAa;AACvB,OAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,GAAzB,EAAf,EAA+C,UAAU,EAAV,EAAc,OAAd,EAAuB;AACpE,MAAE,OAAF,CAAU,EAAV;AACA,MAAE,IAAF,CAAO,OAAP,EAAgB,EAAhB;AACA,MAAE,GAAF;AACD,GAJD;AAKD,CAND;;AASA,EAAE,IAAF,CAAO,GAAP,EAAY,UAAU,CAAV,EAAa;AACvB,UAAQ,KAAR,CAAc,UAAU,KAAK,OAAL,CAAa,GAAb,CAAxB;AACA,OAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,KAAK,OAAL,CAAa,GAAb,CAAzB,EAAf,EAA6D,UAAU,EAAV,EAAc,OAAd,EAAuB;AAClF,MAAE,OAAF,CAAU,EAAV;AACA,QAAI,SAAS,CACT,IADS,EACH,MADG,EACK,QADL,EACe,KADf,EACsB,OADtB,EAC+B,SAD/B,EAET,GAFS,CAEL,UAAU,CAAV,EAAa;AACjB,aAAO,KAAK,IAAL,CAAU,KAAK,OAAL,CAAa,GAAb,CAAV,EAA6B,CAA7B,EAAgC,OAAhC,CAAwC,KAAxC,EAA+C,GAA/C,CAAP;AACD,KAJU,CAAb;;AAMA,MAAE,IAAF,CAAO,OAAP,EAAgB,MAAhB;AACA,MAAE,GAAF;AACD,GAVD;AAWD,CAbD;;AAeA,EAAE,IAAF,CAAO,iBAAP,EAA0B,UAAU,CAAV,EAAa;AACrC,OAAK,QAAL,EAAe,EAAE,WAAW,IAAb,EAAmB,MAAM,GAAzB,EAA8B,KAAK,KAAK,OAAL,CAAa,KAAb,CAAnC,EAAf,EAAyE,UAAU,EAAV,EAAc,OAAd,EAAuB;AAC9F,MAAE,OAAF,CAAU,EAAV;AACA,MAAE,IAAF,CAAO,OAAP,EAAgB,CAAE,IAAF,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC,OAAjC,EAA0C,SAA1C,EAAsD,GAAtD,CAA0D,UAAU,CAAV,EAAa;AACrF,aAAO,KAAK,IAAL,CAAU,KAAK,OAAL,CAAa,GAAb,CAAV,EAA6B,CAA7B,EAAgC,OAAhC,CAAwC,KAAxC,EAA+C,GAA/C,CAAP;AACD,KAFe,CAAhB;AAGA,MAAE,GAAF;AACD,GAND;AAOD,CARD;;AAUA,EAAE,IAAF,CAAO,MAAP,EAAe,UAAU,CAAV,EAAa;AAC1B,UAAQ,KAAR,CAAc,OAAd;AACA,IAAE,GAAF;AACD,CAHD","file":"root-compiled.js","sourcesContent":["var t = require(\"tap\")\n\nvar origCwd = process.cwd()\nprocess.chdir(__dirname)\n\nvar glob = require('../')\nvar path = require('path')\n\nt.test('.', function (t) {\n  glob('/b*/**', { globDebug: true, root: '.' }, function (er, matches) {\n    t.ifError(er)\n    t.like(matches, [])\n    t.end()\n  })\n})\n\n\nt.test('a', function (t) {\n  console.error(\"root=\" + path.resolve('a'))\n  glob('/b*/**', { globDebug: true, root: path.resolve('a') }, function (er, matches) {\n    t.ifError(er)\n    var wanted = [\n        '/b', '/b/c', '/b/c/d', '/bc', '/bc/e', '/bc/e/f'\n      ].map(function (m) {\n        return path.join(path.resolve('a'), m).replace(/\\\\/g, '/')\n      })\n\n    t.like(matches, wanted)\n    t.end()\n  })\n})\n\nt.test('root=a, cwd=a/b', function (t) {\n  glob('/b*/**', { globDebug: true, root: 'a', cwd: path.resolve('a/b') }, function (er, matches) {\n    t.ifError(er)\n    t.like(matches, [ '/b', '/b/c', '/b/c/d', '/bc', '/bc/e', '/bc/e/f' ].map(function (m) {\n      return path.join(path.resolve('a'), m).replace(/\\\\/g, '/')\n    }))\n    t.end()\n  })\n})\n\nt.test('cd -', function (t) {\n  process.chdir(origCwd)\n  t.end()\n})\n"]}