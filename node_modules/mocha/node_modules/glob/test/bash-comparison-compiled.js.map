{"version":3,"sources":["bash-comparison.js"],"names":[],"mappings":";;AAEA,IAAI,MAAM,QAAQ,KAAR,CAAV;IACE,gBAAgB,QAAQ,eAAR,CADlB;IAEE,cAAc,QAAQ,qBAAR,CAFhB;IAGE,QAAQ,OAAO,IAAP,CAAY,WAAZ,CAHV;IAIE,OAAO,QAAQ,KAAR,CAJT;IAKE,OAAO,QAAQ,MAAR,CALT;;;;AASA,QAAQ,KAAR,CAAc,KAAK,OAAL,CAAa,SAAb,EAAwB,IAAxB,CAAd;;AAEA,SAAS,SAAT,CAAoB,CAApB,EAAuB,CAAvB,EAA0B;AACxB,MAAI,EAAE,WAAF,EAAJ;AACA,MAAI,EAAE,WAAF,EAAJ;AACA,SAAO,IAAI,CAAJ,GAAQ,CAAR,GAAY,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;;AAED,MAAM,OAAN,CAAc,UAAU,OAAV,EAAmB;AAC/B,MAAI,SAAS,YAAY,OAAZ,CAAb;;AAEA,MAAI,QAAQ,QAAR,KAAqB,OAArB,IACA,OAAO,IAAP,CAAY,UAAU,CAAV,EAAa;AACvB,WAAO,eAAc,IAAd,CAAmB,CAAnB;AAAP;AACD,GAFD,CADJ,EAIE;;AAEF,MAAI,IAAJ,CAAS,OAAT,EAAkB,UAAU,CAAV,EAAa;AAC7B,SAAK,OAAL,EAAc,UAAU,EAAV,EAAc,OAAd,EAAuB;AACnC,UAAI,EAAJ,EACE,MAAM,EAAN;;;AAGF,gBAAU,aAAa,OAAb,CAAV;;AAEA,QAAE,SAAF,CAAY,OAAZ,EAAqB,MAArB,EAA6B,OAA7B;AACA,QAAE,GAAF;AACD,KATD;AAUD,GAXD;;AAaA,MAAI,IAAJ,CAAS,UAAU,OAAnB,EAA4B,UAAU,CAAV,EAAa;AACvC,QAAI,UAAU,aAAa,KAAK,IAAL,CAAU,OAAV,CAAb,CAAd;;AAEA,MAAE,SAAF,CAAY,OAAZ,EAAqB,MAArB,EAA6B,oBAA7B;AACA,MAAE,GAAF;AACD,GALD;AAMD,CA5BD;;AA8BA,SAAS,YAAT,CAAuB,CAAvB,EAA0B;;;AAGxB,SAAO,EAAE,GAAF,CAAM,UAAU,CAAV,EAAa;AACxB,WAAO,EAAE,OAAF,CAAU,MAAV,EAAkB,GAAlB,EAAuB,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,CAAP;AACD,GAFM,EAEJ,IAFI,CAEC,SAFD,EAEY,MAFZ,CAEmB,UAAU,GAAV,EAAe,CAAf,EAAkB;AAC1C,QAAI,MAAM,IAAI,IAAI,MAAJ,GAAa,CAAjB,CAAV,EAA+B,IAAI,IAAJ,CAAS,CAAT;AAC/B,WAAO,GAAP;AACD,GALM,EAKJ,EALI,EAKA,IALA,CAKK,SALL,EAKgB,GALhB,CAKoB,UAAU,CAAV,EAAa;;AAEtC,WAAQ,QAAQ,QAAR,KAAqB,OAAtB,GAAiC,CAAjC,GACE,EAAE,OAAF,CAAU,mBAAV,EAA+B,GAA/B,EAAoC,OAApC,CAA4C,UAA5C,EAAwD,GAAxD,CADT;AAED,GATM,CAAP;AAUD","file":"bash-comparison-compiled.js","sourcesContent":["// basic test\n// show that it does the same thing by default as the shell.\nvar tap = require(\"tap\")\n, child_process = require(\"child_process\")\n, bashResults = require(\"./bash-results.json\")\n, globs = Object.keys(bashResults)\n, glob = require(\"../\")\n, path = require(\"path\")\n\n// run from the root of the project\n// this is usually where you're at anyway, but be sure.\nprocess.chdir(path.resolve(__dirname, \"..\"))\n\nfunction alphasort (a, b) {\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nglobs.forEach(function (pattern) {\n  var expect = bashResults[pattern]\n  // anything regarding the symlink thing will fail on windows, so just skip it\n  if (process.platform === \"win32\" &&\n      expect.some(function (m) {\n        return /\\/symlink\\//.test(m)\n      }))\n    return\n\n  tap.test(pattern, function (t) {\n    glob(pattern, function (er, matches) {\n      if (er)\n        throw er\n\n      // sort and unmark, just to match the shell results\n      matches = cleanResults(matches)\n\n      t.deepEqual(matches, expect, pattern)\n      t.end()\n    })\n  })\n\n  tap.test(pattern + \" sync\", function (t) {\n    var matches = cleanResults(glob.sync(pattern))\n\n    t.deepEqual(matches, expect, \"should match shell\")\n    t.end()\n  })\n})\n\nfunction cleanResults (m) {\n  // normalize discrepancies in ordering, duplication,\n  // and ending slashes.\n  return m.map(function (m) {\n    return m.replace(/\\/+/g, \"/\").replace(/\\/$/, \"\")\n  }).sort(alphasort).reduce(function (set, f) {\n    if (f !== set[set.length - 1]) set.push(f)\n    return set\n  }, []).sort(alphasort).map(function (f) {\n    // de-windows\n    return (process.platform !== 'win32') ? f\n           : f.replace(/^[a-zA-Z]:[\\/\\\\]+/, '/').replace(/[\\\\\\/]+/g, '/')\n  })\n}\n"]}