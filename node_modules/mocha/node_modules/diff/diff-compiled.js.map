{"version":3,"sources":["diff.js"],"names":[],"mappings":"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","file":"diff-compiled.js","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\n(function(global, undefined) {\n  var objectPrototypeToString = Object.prototype.toString;\n\n  /*istanbul ignore next*/\n  function map(arr, mapper, that) {\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, mapper, that);\n    }\n\n    var other = new Array(arr.length);\n\n    for (var i = 0, n = arr.length; i < n; i++) {\n      other[i] = mapper.call(that, arr[i], i, arr);\n    }\n    return other;\n  }\n  function clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n  }\n  function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  }\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n\n    return n;\n  }\n\n  // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed.\n  function canonicalize(obj, stack, replacementStack) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else if (typeof obj === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n      var sortedKeys = [],\n          key;\n      for (key in obj) {\n        sortedKeys.push(key);\n      }\n      sortedKeys.sort();\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        key = sortedKeys[i];\n        canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n    return canonicalizedObj;\n  }\n\n  function buildValues(components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = map(value, function(value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n\n          component.value = value.join('');\n        } else {\n          component.value = newString.slice(newPos, newPos + component.count).join('');\n        }\n        newPos += component.count;\n\n        // Common case\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = oldString.slice(oldPos, oldPos + component.count).join('');\n        oldPos += component.count;\n\n        // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    }\n\n    return components;\n  }\n\n  function Diff(ignoreWhitespace) {\n    this.ignoreWhitespace = ignoreWhitespace;\n  }\n  Diff.prototype = {\n    diff: function(oldString, newString, callback) {\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function() { callback(undefined, value); }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      }\n\n      // Handle the identity case (this is due to unrolling editLength == 0\n      if (newString === oldString) {\n        return done([{ value: newString }]);\n      }\n      if (!newString) {\n        return done([{ value: oldString, removed: true }]);\n      }\n      if (!oldString) {\n        return done([{ value: newString, added: true }]);\n      }\n\n      newString = this.tokenize(newString);\n      oldString = this.tokenize(oldString);\n\n      var newLen = newString.length, oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{ newPos: -1, components: [] }];\n\n      // Seed editLength = 0, i.e. the content starts with the same values\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{value: newString.join('')}]);\n      }\n\n      // Main worker method. checks all permutations of a given edit length for acceptance.\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath;\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          }\n\n          // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n          if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath;   // No need to clone, we've pulled it from the list\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n          // If we have hit the end of both strings, then we are done\n          if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n            return done(buildValues(basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      }\n\n      // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n      if (callback) {\n        (function exec() {\n          setTimeout(function() {\n            // This should not happen, but we want to be safe.\n            /*istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        }());\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    pushComponent: function(components, added, removed) {\n      var last = components[components.length - 1];\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n      } else {\n        components.push({count: 1, added: added, removed: removed });\n      }\n    },\n    extractCommon: function(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n\n          commonCount = 0;\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({count: commonCount});\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n\n    equals: function(left, right) {\n      var reWhitespace = /\\S/;\n      return left === right || (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n    },\n    tokenize: function(value) {\n      return value.split('');\n    }\n  };\n\n  var CharDiff = new Diff();\n\n  var WordDiff = new Diff(true);\n  var WordWithSpaceDiff = new Diff();\n  WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\s+|\\b)/));\n  };\n\n  var CssDiff = new Diff(true);\n  CssDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n  };\n\n  var LineDiff = new Diff();\n\n  var TrimmedLineDiff = new Diff();\n  TrimmedLineDiff.ignoreTrim = true;\n\n  LineDiff.tokenize = TrimmedLineDiff.tokenize = function(value) {\n    var retLines = [],\n        lines = value.split(/^/m);\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i],\n          lastLine = lines[i - 1],\n          lastLineLastChar = lastLine && lastLine[lastLine.length - 1];\n\n      // Merge lines that may contain windows new lines\n      if (line === '\\n' && lastLineLastChar === '\\r') {\n          retLines[retLines.length - 1] = retLines[retLines.length - 1].slice(0, -1) + '\\r\\n';\n      } else {\n        if (this.ignoreTrim) {\n          line = line.trim();\n          // add a newline unless this is the last line.\n          if (i < lines.length - 1) {\n            line += '\\n';\n          }\n        }\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  var PatchDiff = new Diff();\n  PatchDiff.tokenize = function(value) {\n    var ret = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n    // Ignore the final empty token that occurs if the string ends with a new line\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    }\n\n    // Merge the content and line separators into single tokens\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2) {\n        ret[ret.length - 1] += line;\n      } else {\n        ret.push(line);\n      }\n    }\n    return ret;\n  };\n\n  var SentenceDiff = new Diff();\n  SentenceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\S.+?[.!?])(?=\\s+|$)/));\n  };\n\n  var JsonDiff = new Diff();\n  // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n  JsonDiff.useLongestToken = true;\n  JsonDiff.tokenize = LineDiff.tokenize;\n  JsonDiff.equals = function(left, right) {\n    return LineDiff.equals(left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  var JsDiff = {\n    Diff: Diff,\n\n    diffChars: function(oldStr, newStr, callback) { return CharDiff.diff(oldStr, newStr, callback); },\n    diffWords: function(oldStr, newStr, callback) { return WordDiff.diff(oldStr, newStr, callback); },\n    diffWordsWithSpace: function(oldStr, newStr, callback) { return WordWithSpaceDiff.diff(oldStr, newStr, callback); },\n    diffLines: function(oldStr, newStr, callback) { return LineDiff.diff(oldStr, newStr, callback); },\n    diffTrimmedLines: function(oldStr, newStr, callback) { return TrimmedLineDiff.diff(oldStr, newStr, callback); },\n\n    diffSentences: function(oldStr, newStr, callback) { return SentenceDiff.diff(oldStr, newStr, callback); },\n\n    diffCss: function(oldStr, newStr, callback) { return CssDiff.diff(oldStr, newStr, callback); },\n    diffJson: function(oldObj, newObj, callback) {\n      return JsonDiff.diff(\n        typeof oldObj === 'string' ? oldObj : JSON.stringify(canonicalize(oldObj), undefined, '  '),\n        typeof newObj === 'string' ? newObj : JSON.stringify(canonicalize(newObj), undefined, '  '),\n        callback\n      );\n    },\n\n    createTwoFilesPatch: function(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader) {\n      var ret = [];\n\n      if (oldFileName == newFileName) {\n        ret.push('Index: ' + oldFileName);\n      }\n      ret.push('===================================================================');\n      ret.push('--- ' + oldFileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));\n      ret.push('+++ ' + newFileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));\n\n      var diff = PatchDiff.diff(oldStr, newStr);\n      diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\n\n      // Formats a given set of lines for printing as context lines in a patch\n      function contextLines(lines) {\n        return map(lines, function(entry) { return ' ' + entry; });\n      }\n\n      // Outputs the no newline at end of file warning if needed\n      function eofNL(curRange, i, current) {\n        var last = diff[diff.length - 2],\n            isLast = i === diff.length - 2,\n            isLastOfType = i === diff.length - 3 && current.added !== last.added;\n\n        // Figure out if this is the last line for the given file and missing NL\n        if (!(/\\n$/.test(current.value)) && (isLast || isLastOfType)) {\n          curRange.push('\\\\ No newline at end of file');\n        }\n      }\n\n      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n          oldLine = 1, newLine = 1;\n      for (var i = 0; i < diff.length; i++) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          // If we have previous context, start with that\n          if (!oldRangeStart) {\n            var prev = diff[i - 1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n\n            if (prev) {\n              curRange = contextLines(prev.lines.slice(-4));\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          }\n\n          // Output our changes\n          curRange.push.apply(curRange, map(lines, function(entry) {\n            return (current.added ? '+' : '-') + entry;\n          }));\n          eofNL(curRange, i, current);\n\n          // Track the updated file position\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          // Identical context lines. Track line changes\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= 8 && i < diff.length - 2) {\n              // Overlapping\n              curRange.push.apply(curRange, contextLines(lines));\n            } else {\n              // end the range and output\n              var contextSize = Math.min(lines.length, 4);\n              ret.push(\n                  '@@ -' + oldRangeStart + ',' + (oldLine - oldRangeStart + contextSize)\n                  + ' +' + newRangeStart + ',' + (newLine - newRangeStart + contextSize)\n                  + ' @@');\n              ret.push.apply(ret, curRange);\n              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n              if (lines.length <= 4) {\n                eofNL(ret, i, current);\n              }\n\n              oldRangeStart = 0;\n              newRangeStart = 0;\n              curRange = [];\n            }\n          }\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      }\n\n      return ret.join('\\n') + '\\n';\n    },\n\n    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n      return JsDiff.createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader);\n    },\n\n    applyPatch: function(oldStr, uniDiff) {\n      var diffstr = uniDiff.split('\\n'),\n          hunks = [],\n          i = 0,\n          remEOFNL = false,\n          addEOFNL = false;\n\n      // Skip to the first change hunk\n      while (i < diffstr.length && !(/^@@/.test(diffstr[i]))) {\n        i++;\n      }\n\n      // Parse the unified diff\n      for (; i < diffstr.length; i++) {\n        if (diffstr[i][0] === '@') {\n          var chnukHeader = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);\n          hunks.unshift({\n            start: chnukHeader[3],\n            oldlength: +chnukHeader[2],\n            removed: [],\n            newlength: chnukHeader[4],\n            added: []\n          });\n        } else if (diffstr[i][0] === '+') {\n          hunks[0].added.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '-') {\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === ' ') {\n          hunks[0].added.push(diffstr[i].substr(1));\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '\\\\') {\n          if (diffstr[i - 1][0] === '+') {\n            remEOFNL = true;\n          } else if (diffstr[i - 1][0] === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n\n      // Apply the diff to the input\n      var lines = oldStr.split('\\n');\n      for (i = hunks.length - 1; i >= 0; i--) {\n        var hunk = hunks[i];\n        // Sanity check the input string. Bail if we don't match.\n        for (var j = 0; j < hunk.oldlength; j++) {\n          if (lines[hunk.start - 1 + j] !== hunk.removed[j]) {\n            return false;\n          }\n        }\n        Array.prototype.splice.apply(lines, [hunk.start - 1, hunk.oldlength].concat(hunk.added));\n      }\n\n      // Handle EOFNL insertion/removal\n      if (remEOFNL) {\n        while (!lines[lines.length - 1]) {\n          lines.pop();\n        }\n      } else if (addEOFNL) {\n        lines.push('');\n      }\n      return lines.join('\\n');\n    },\n\n    convertChangesToXML: function(changes) {\n      var ret = [];\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        if (change.added) {\n          ret.push('<ins>');\n        } else if (change.removed) {\n          ret.push('<del>');\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push('</ins>');\n        } else if (change.removed) {\n          ret.push('</del>');\n        }\n      }\n      return ret.join('');\n    },\n\n    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n    convertChangesToDMP: function(changes) {\n      var ret = [],\n          change,\n          operation;\n      for (var i = 0; i < changes.length; i++) {\n        change = changes[i];\n        if (change.added) {\n          operation = 1;\n        } else if (change.removed) {\n          operation = -1;\n        } else {\n          operation = 0;\n        }\n\n        ret.push([operation, change.value]);\n      }\n      return ret;\n    },\n\n    canonicalize: canonicalize\n  };\n\n  /*istanbul ignore next */\n  /*global module */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = JsDiff;\n  } else if (typeof define === 'function' && define.amd) {\n    /*global define */\n    define([], function() { return JsDiff; });\n  } else if (typeof global.JsDiff === 'undefined') {\n    global.JsDiff = JsDiff;\n  }\n}(this));\n"]}