{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar dirname = path.dirname;\nvar basename = path.basename;\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command;\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = ~flags.indexOf('<');\n  this.optional = ~flags.indexOf('[');\n  this.bool = !~flags.indexOf('-no-');\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description || '';\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function(){\n  return this.long\n    .replace('--', '')\n    .replace('no-', '');\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg){\n  return arg == this.short\n    || arg == this.long;\n};\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this._execs = [];\n  this._args = [];\n  this._name = name;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nCommand.prototype.__proto__ = EventEmitter.prototype;\n\n/**\n * Add command `name`.\n *\n * The `.action()` callback is invoked when the\n * command `name` is specified via __ARGV__,\n * and the remaining arguments are applied to the\n * function for access.\n *\n * When the `name` is \"*\" an un-matched command\n * will be passed as the first arg, followed by\n * the rest of __ARGV__ remaining.\n *\n * Examples:\n *\n *      program\n *        .version('0.0.1')\n *        .option('-C, --chdir <path>', 'change the working directory')\n *        .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n *        .option('-T, --no-tests', 'ignore test hook')\n *\n *      program\n *        .command('setup')\n *        .description('run remote setup commands')\n *        .action(function(){\n *          console.log('setup');\n *        });\n *\n *      program\n *        .command('exec <cmd>')\n *        .description('run the given remote command')\n *        .action(function(cmd){\n *          console.log('exec \"%s\"', cmd);\n *        });\n *\n *      program\n *        .command('*')\n *        .description('deploy the given env')\n *        .action(function(env){\n *          console.log('deploying \"%s\"', env);\n *        });\n *\n *      program.parse(process.argv);\n  *\n * @param {String} name\n * @param {String} [desc]\n * @return {Command} the new command\n * @api public\n */\n\nCommand.prototype.command = function(name, desc) {\n  var args = name.split(/ +/);\n  var cmd = new Command(args.shift());\n  if (desc) cmd.description(desc);\n  if (desc) this.executables = true;\n  if (desc) this._execs[cmd._name] = true;\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n  if (desc) return this;\n  return cmd;\n};\n\n/**\n * Add an implicit `help [cmd]` subcommand\n * which invokes `--help` for the given command.\n *\n * @api private\n */\n\nCommand.prototype.addImplicitHelpCommand = function() {\n  this.command('help [cmd]', 'display help for [cmd]');\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args){\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg){\n    switch (arg[0]) {\n      case '<':\n        self._args.push({ required: true, name: arg.slice(1, -1) });\n        break;\n      case '[':\n        self._args.push({ required: false, name: arg.slice(1, -1) });\n        break;\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function(){\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn){\n  var self = this;\n  var listener = function(args, unknown){\n    // Parse any so-far unknown options\n    args = args || [];\n    unknown = unknown || [];\n\n    var parsed = self.parseOptions(unknown);\n\n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n\n    // If there are still any unknown options, then we simply\n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {\n      self.unknownOption(parsed.unknown[0]);\n    }\n\n    // Leftover arguments need to be pushed back. Fixes issue #56\n    if (parsed.args.length) args = parsed.args.concat(args);\n\n    self._args.forEach(function(arg, i){\n      if (arg.required && null == args[i]) {\n        self.missingArgument(arg.name);\n      }\n    });\n\n    // Always append ourselves to the end of the arguments,\n    // to make sure we match the number of arguments the user\n    // expects\n    if (self._args.length) {\n      args[self._args.length] = self;\n    } else {\n      args.push(self);\n    }\n\n    fn.apply(this, args);\n  };\n  this.parent.on(this._name, listener);\n  if (this._alias) this.parent.on(this._alias, listener);\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`.\n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to false\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     --pepper\n *     program.pepper\n *     // => Boolean\n *\n *     // simple boolean defaulting to true\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => false\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|Mixed} fn or default\n * @param {Mixed} defaultValue\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue){\n  var self = this\n    , option = new Option(flags, description)\n    , oname = option.name()\n    , name = camelcase(oname);\n\n  // default as 3rd arg\n  if ('function' != typeof fn) defaultValue = fn, fn = null;\n\n  // preassign default value only for --no-*, [optional], or <required>\n  if (false == option.bool || option.optional || option.required) {\n    // when --no-* we make sure default is true\n    if (false == option.bool) defaultValue = true;\n    // preassign only if we have a default\n    if (undefined !== defaultValue) self[name] = defaultValue;\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on(oname, function(val){\n    // coercion\n    if (null !== val && fn) val = fn(val, undefined === self[name] ? defaultValue : self[name]);\n\n    // unassigned or bool\n    if ('boolean' == typeof self[name] || 'undefined' == typeof self[name]) {\n      // if no value, bool true, and we have a default, then use it!\n      if (null == val) {\n        self[name] = option.bool\n          ? defaultValue || true\n          : false;\n      } else {\n        self[name] = val;\n      }\n    } else if (null !== val) {\n      // reassign\n      self[name] = val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv){\n  // implicit help\n  if (this.executables) this.addImplicitHelpCommand();\n\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  this._name = this._name || basename(argv[1], '.js');\n\n  // process argv\n  var parsed = this.parseOptions(this.normalize(argv.slice(2)));\n  var args = this.args = parsed.args;\n\n  var result = this.parseArgs(this.args, parsed.unknown);\n\n  // executable sub-commands\n  var name = result.args[0];\n  if (this._execs[name]) return this.executeSubCommand(argv, args, parsed.unknown);\n\n  return result;\n};\n\n/**\n * Execute a sub-command executable.\n *\n * @param {Array} argv\n * @param {Array} args\n * @param {Array} unknown\n * @api private\n */\n\nCommand.prototype.executeSubCommand = function(argv, args, unknown) {\n  args = args.concat(unknown);\n\n  if (!args.length) this.help();\n  if ('help' == args[0] && 1 == args.length) this.help();\n\n  // <cmd> --help\n  if ('help' == args[0]) {\n    args[0] = args[1];\n    args[1] = '--help';\n  }\n\n  // executable\n  var dir = dirname(argv[1]);\n  var bin = basename(argv[1], '.js') + '-' + args[0];\n\n  // check for ./<bin> first\n  var local = path.join(dir, bin);\n\n  // run it\n  args = args.slice(1);\n  args.unshift(local);\n  var proc = spawn('node', args, { stdio: 'inherit', customFds: [0, 1, 2] });\n  proc.on('error', function(err){\n    if (err.code == \"ENOENT\") {\n      console.error('\\n  %s(1) does not exist, try --help\\n', bin);\n    } else if (err.code == \"EACCES\") {\n      console.error('\\n  %s(1) not executable. try chmod or run with root\\n', bin);\n    }\n  });\n\n  this.runningCommand = proc;\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n * This also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args){\n  var ret = []\n    , arg\n    , lastOpt\n    , index;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    i > 0 && (lastOpt = this.optionFor(args[i-1]));\n\n    if (lastOpt && lastOpt.required) {\n     \tret.push(arg);\n    } else if (arg.length > 1 && '-' == arg[0] && '-' != arg[1]) {\n      arg.slice(1).split('').forEach(function(c){\n        ret.push('-' + c);\n      });\n    } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {\n      ret.push(arg.slice(0, index), arg.slice(index + 1));\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown){\n  var cmds = this.commands\n    , len = cmds.length\n    , name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners(name).length) {\n      this.emit(args.shift(), args, unknown);\n    } else {\n      this.emit('*', args);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n\n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0) {\n      this.unknownOption(unknown[0]);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg){\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv){\n  var args = []\n    , len = argv.length\n    , literal\n    , option\n    , arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if ('--' == arg) {\n      literal = true;\n      continue;\n    }\n\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (null == arg) return this.optionMissingArgument(option);\n        this.emit(option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i+1];\n        if (null == arg || ('-' == arg[0] && '-' != arg)) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit(option.name(), arg);\n      // bool\n      } else {\n        this.emit(option.name());\n      }\n      continue;\n    }\n\n    // looks like an option\n    if (arg.length > 1 && '-' == arg[0]) {\n      unknownOptions.push(arg);\n\n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if (argv[i+1] && '-' != argv[i+1][0]) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n\n    // arg\n    args.push(arg);\n  }\n\n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name){\n  console.error();\n  console.error(\"  error: missing required argument `%s'\", name);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag){\n  console.error();\n  if (flag) {\n    console.error(\"  error: option `%s' argument missing, got `%s'\", option.flags, flag);\n  } else {\n    console.error(\"  error: option `%s' argument missing\", option.flags);\n  }\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag){\n  console.error();\n  console.error(\"  error: unknown option `%s'\", flag);\n  console.error();\n  process.exit(1);\n};\n\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * @param {String} str\n * @param {String} flags\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags){\n  if (0 == arguments.length) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  this.option(flags, 'output the version number');\n  this.on('version', function(){\n    console.log(str);\n    process.exit(0);\n  });\n  return this;\n};\n\n/**\n * Set the description `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str){\n  if (0 == arguments.length) return this._description;\n  this._description = str;\n  return this;\n};\n\n/**\n * Set an alias for the command\n *\n * @param {String} alias\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.alias = function(alias){\n  if (0 == arguments.length) return this._alias;\n  this._alias = alias;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str){\n  var args = this._args.map(function(arg){\n    return arg.required\n      ? '<' + arg.name + '>'\n      : '[' + arg.name + ']';\n  });\n\n  var usage = '[options'\n    + (this.commands.length ? '] [command' : '')\n    + ']'\n    + (this._args.length ? ' ' + args : '');\n\n  if (0 == arguments.length) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function(){\n  return this.options.reduce(function(max, option){\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function(){\n  var width = this.largestOptionLength();\n\n  // Prepend the help information\n  return [pad('-h, --help', width) + '  ' + 'output usage information']\n    .concat(this.options.map(function(option){\n      return pad(option.flags, width)\n        + '  ' + option.description;\n      }))\n    .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function(){\n  if (!this.commands.length) return '';\n  return [\n      ''\n    , '  Commands:'\n    , ''\n    , this.commands.map(function(cmd){\n      var args = cmd._args.map(function(arg){\n        return arg.required\n          ? '<' + arg.name + '>'\n          : '[' + arg.name + ']';\n      }).join(' ');\n\n      return cmd._name\n        + (cmd._alias\n          ? '|' + cmd._alias\n          : '')\n        + (cmd.options.length\n          ? ' [options]'\n          : '') + ' ' + args\n        + (cmd.description()\n          ? '\\n   ' + cmd.description()\n          : '')\n        + '\\n';\n    }).join('\\n').replace(/^/gm, '    ')\n    , ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function(){\n  return [\n      ''\n    , '  Usage: ' + this._name\n        + (this._alias\n          ? '|' + this._alias\n          : '')\n        + ' ' + this.usage()\n    , '' + this.commandHelp()\n    , '  Options:'\n    , ''\n    , '' + this.optionHelp().replace(/^/gm, '    ')\n    , ''\n    , ''\n  ].join('\\n');\n};\n\n/**\n * Output help information for this command\n *\n * @api public\n */\n\nCommand.prototype.outputHelp = function(){\n  process.stdout.write(this.helpInformation());\n  this.emit('--help');\n};\n\n/**\n * Output help information and exit.\n *\n * @api public\n */\n\nCommand.prototype.help = function(){\n  this.outputHelp();\n  process.exit();\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word){\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] == '--help' || options[i] == '-h') {\n      cmd.outputHelp();\n      process.exit(0);\n    }\n  }\n}\n"]}