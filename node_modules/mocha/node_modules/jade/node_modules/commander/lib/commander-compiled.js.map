{"version":3,"sources":["commander.js"],"names":[],"mappings":"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","file":"commander-compiled.js","sourcesContent":["\n/*!\n * commander\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , path = require('path')\n  , tty = require('tty')\n  , basename = path.basename;\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command;\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = ~flags.indexOf('<');\n  this.optional = ~flags.indexOf('[');\n  this.bool = !~flags.indexOf('-no-');\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description;\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function(){\n  return this.long\n    .replace('--', '')\n    .replace('no-', '');\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg){\n  return arg == this.short\n    || arg == this.long;\n};\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this.args = [];\n  this.name = name;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nCommand.prototype.__proto__ = EventEmitter.prototype;\n\n/**\n * Add command `name`.\n *\n * The `.action()` callback is invoked when the\n * command `name` is specified via __ARGV__,\n * and the remaining arguments are applied to the\n * function for access.\n *\n * When the `name` is \"*\" an un-matched command\n * will be passed as the first arg, followed by\n * the rest of __ARGV__ remaining.\n *\n * Examples:\n *\n *      program\n *        .version('0.0.1')\n *        .option('-C, --chdir <path>', 'change the working directory')\n *        .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n *        .option('-T, --no-tests', 'ignore test hook')\n *     \n *      program\n *        .command('setup')\n *        .description('run remote setup commands')\n *        .action(function(){\n *          console.log('setup');\n *        });\n *     \n *      program\n *        .command('exec <cmd>')\n *        .description('run the given remote command')\n *        .action(function(cmd){\n *          console.log('exec \"%s\"', cmd);\n *        });\n *     \n *      program\n *        .command('*')\n *        .description('deploy the given env')\n *        .action(function(env){\n *          console.log('deploying \"%s\"', env);\n *        });\n *     \n *      program.parse(process.argv);\n  *\n * @param {String} name\n * @return {Command} the new command\n * @api public\n */\n\nCommand.prototype.command = function(name){\n  var args = name.split(/ +/);\n  var cmd = new Command(args.shift());\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n  return cmd;\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args){\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg){\n    switch (arg[0]) {\n      case '<':\n        self.args.push({ required: true, name: arg.slice(1, -1) });\n        break;\n      case '[':\n        self.args.push({ required: false, name: arg.slice(1, -1) });\n        break;\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function(){\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn){\n  var self = this;\n  this.parent.on(this.name, function(args, unknown){    \n    // Parse any so-far unknown options\n    unknown = unknown || [];\n    var parsed = self.parseOptions(unknown);\n    \n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n    \n    // If there are still any unknown options, then we simply \n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {      \n      self.unknownOption(parsed.unknown[0]);\n    }\n    \n    self.args.forEach(function(arg, i){\n      if (arg.required && null == args[i]) {\n        self.missingArgument(arg.name);\n      }\n    });\n    \n    // Always append ourselves to the end of the arguments,\n    // to make sure we match the number of arguments the user\n    // expects\n    if (self.args.length) {\n      args[self.args.length] = self;\n    } else {\n      args.push(self);\n    }\n    \n    fn.apply(this, args);\n  });\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`. \n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to false\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     --pepper\n *     program.pepper\n *     // => Boolean\n *\n *     // simple boolean defaulting to false\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => true\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|Mixed} fn or default\n * @param {Mixed} defaultValue\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue){\n  var self = this\n    , option = new Option(flags, description)\n    , oname = option.name()\n    , name = camelcase(oname);\n\n  // default as 3rd arg\n  if ('function' != typeof fn) defaultValue = fn, fn = null;\n\n  // preassign default value only for --no-*, [optional], or <required>\n  if (false == option.bool || option.optional || option.required) {\n    // when --no-* we make sure default is true\n    if (false == option.bool) defaultValue = true;\n    // preassign only if we have a default\n    if (undefined !== defaultValue) self[name] = defaultValue;\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on(oname, function(val){\n    // coercion\n    if (null != val && fn) val = fn(val);\n\n    // unassigned or bool\n    if ('boolean' == typeof self[name] || 'undefined' == typeof self[name]) {\n      // if no value, bool true, and we have a default, then use it!\n      if (null == val) {\n        self[name] = option.bool\n          ? defaultValue || true\n          : false;\n      } else {\n        self[name] = val;\n      }\n    } else if (null !== val) {\n      // reassign\n      self[name] = val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv){\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  if (!this.name) this.name = basename(argv[1]);\n\n  // process argv\n  var parsed = this.parseOptions(this.normalize(argv.slice(2)));\n  this.args = parsed.args;\n  return this.parseArgs(this.args, parsed.unknown);\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args){\n  var ret = []\n    , arg;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    if (arg.length > 1 && '-' == arg[0] && '-' != arg[1]) {\n      arg.slice(1).split('').forEach(function(c){\n        ret.push('-' + c);\n      });\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown){\n  var cmds = this.commands\n    , len = cmds.length\n    , name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners(name).length) {\n      this.emit(args.shift(), args, unknown);\n    } else {\n      this.emit('*', args);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n    \n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0) {      \n      this.unknownOption(unknown[0]);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg){\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv){\n  var args = []\n    , len = argv.length\n    , literal\n    , option\n    , arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if ('--' == arg) {\n      literal = true;\n      continue;\n    }\n\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (null == arg) return this.optionMissingArgument(option);\n        if ('-' == arg[0]) return this.optionMissingArgument(option, arg);\n        this.emit(option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i+1];\n        if (null == arg || '-' == arg[0]) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit(option.name(), arg);\n      // bool\n      } else {\n        this.emit(option.name());\n      }\n      continue;\n    }\n    \n    // looks like an option\n    if (arg.length > 1 && '-' == arg[0]) {\n      unknownOptions.push(arg);\n      \n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if (argv[i+1] && '-' != argv[i+1][0]) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n    \n    // arg\n    args.push(arg);\n  }\n  \n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name){\n  console.error();\n  console.error(\"  error: missing required argument `%s'\", name);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag){\n  console.error();\n  if (flag) {\n    console.error(\"  error: option `%s' argument missing, got `%s'\", option.flags, flag);\n  } else {\n    console.error(\"  error: option `%s' argument missing\", option.flags);\n  }\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag){\n  console.error();\n  console.error(\"  error: unknown option `%s'\", flag);\n  console.error();\n  process.exit(1);\n};\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * @param {String} str\n * @param {String} flags\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags){\n  if (0 == arguments.length) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  this.option(flags, 'output the version number');\n  this.on('version', function(){\n    console.log(str);\n    process.exit(0);\n  });\n  return this;\n};\n\n/**\n * Set the description `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str){\n  if (0 == arguments.length) return this._description;\n  this._description = str;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str){\n  var args = this.args.map(function(arg){\n    return arg.required\n      ? '<' + arg.name + '>'\n      : '[' + arg.name + ']';\n  });\n\n  var usage = '[options'\n    + (this.commands.length ? '] [command' : '')\n    + ']'\n    + (this.args.length ? ' ' + args : '');\n  if (0 == arguments.length) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function(){\n  return this.options.reduce(function(max, option){\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function(){\n  var width = this.largestOptionLength();\n  \n  // Prepend the help information\n  return [pad('-h, --help', width) + '  ' + 'output usage information']\n    .concat(this.options.map(function(option){\n      return pad(option.flags, width)\n        + '  ' + option.description;\n      }))\n    .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function(){\n  if (!this.commands.length) return '';\n  return [\n      ''\n    , '  Commands:'\n    , ''\n    , this.commands.map(function(cmd){\n      var args = cmd.args.map(function(arg){\n        return arg.required\n          ? '<' + arg.name + '>'\n          : '[' + arg.name + ']';\n      }).join(' ');\n\n      return cmd.name \n        + (cmd.options.length \n          ? ' [options]'\n          : '') + ' ' + args\n        + (cmd.description()\n          ? '\\n' + cmd.description()\n          : '');\n    }).join('\\n\\n').replace(/^/gm, '    ')\n    , ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function(){\n  return [\n      ''\n    , '  Usage: ' + this.name + ' ' + this.usage()\n    , '' + this.commandHelp()\n    , '  Options:'\n    , ''\n    , '' + this.optionHelp().replace(/^/gm, '    ')\n    , ''\n    , ''\n  ].join('\\n');\n};\n\n/**\n * Prompt for a `Number`.\n *\n * @param {String} str\n * @param {Function} fn\n * @api private\n */\n\nCommand.prototype.promptForNumber = function(str, fn){\n  var self = this;\n  this.promptSingleLine(str, function parseNumber(val){\n    val = Number(val);\n    if (isNaN(val)) return self.promptSingleLine(str + '(must be a number) ', parseNumber);\n    fn(val);\n  });\n};\n\n/**\n * Prompt for a `Date`.\n *\n * @param {String} str\n * @param {Function} fn\n * @api private\n */\n\nCommand.prototype.promptForDate = function(str, fn){\n  var self = this;\n  this.promptSingleLine(str, function parseDate(val){\n    val = new Date(val);\n    if (isNaN(val.getTime())) return self.promptSingleLine(str + '(must be a date) ', parseDate);\n    fn(val);\n  });\n};\n\n/**\n * Single-line prompt.\n *\n * @param {String} str\n * @param {Function} fn\n * @api private\n */\n\nCommand.prototype.promptSingleLine = function(str, fn){\n  if ('function' == typeof arguments[2]) {\n    return this['promptFor' + (fn.name || fn)](str, arguments[2]);\n  }\n\n  process.stdout.write(str);\n  process.stdin.setEncoding('utf8');\n  process.stdin.once('data', function(val){\n    fn(val.trim());\n  }).resume();\n};\n\n/**\n * Multi-line prompt.\n *\n * @param {String} str\n * @param {Function} fn\n * @api private\n */\n\nCommand.prototype.promptMultiLine = function(str, fn){\n  var buf = [];\n  console.log(str);\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', function(val){\n    if ('\\n' == val || '\\r\\n' == val) {\n      process.stdin.removeAllListeners('data');\n      fn(buf.join('\\n'));\n    } else {\n      buf.push(val.trimRight());\n    }\n  }).resume();\n};\n\n/**\n * Prompt `str` and callback `fn(val)`\n *\n * Commander supports single-line and multi-line prompts.\n * To issue a single-line prompt simply add white-space\n * to the end of `str`, something like \"name: \", whereas\n * for a multi-line prompt omit this \"description:\".\n *\n *\n * Examples:\n *\n *     program.prompt('Username: ', function(name){\n *       console.log('hi %s', name);\n *     });\n *     \n *     program.prompt('Description:', function(desc){\n *       console.log('description was \"%s\"', desc.trim());\n *     });\n *\n * @param {String|Object} str\n * @param {Function} fn\n * @api public\n */\n\nCommand.prototype.prompt = function(str, fn){\n  var self = this;\n\n  if ('string' == typeof str) {\n    if (/ $/.test(str)) return this.promptSingleLine.apply(this, arguments);\n    this.promptMultiLine(str, fn);\n  } else {\n    var keys = Object.keys(str)\n      , obj = {};\n\n    function next() {\n      var key = keys.shift()\n        , label = str[key];\n\n      if (!key) return fn(obj);\n      self.prompt(label, function(val){\n        obj[key] = val;\n        next();\n      });\n    }\n\n    next();\n  }\n};\n\n/**\n * Prompt for password with `str`, `mask` char and callback `fn(val)`.\n *\n * The mask string defaults to '', aka no output is\n * written while typing, you may want to use \"*\" etc.\n *\n * Examples:\n *\n *     program.password('Password: ', function(pass){\n *       console.log('got \"%s\"', pass);\n *       process.stdin.destroy();\n *     });\n *\n *     program.password('Password: ', '*', function(pass){\n *       console.log('got \"%s\"', pass);\n *       process.stdin.destroy();\n *     });\n *\n * @param {String} str\n * @param {String} mask\n * @param {Function} fn\n * @api public\n */\n\nCommand.prototype.password = function(str, mask, fn){\n  var self = this\n    , buf = '';\n\n  // default mask\n  if ('function' == typeof mask) {\n    fn = mask;\n    mask = '';\n  }\n\n  process.stdin.resume();\n  tty.setRawMode(true);\n  process.stdout.write(str);\n\n  // keypress\n  process.stdin.on('keypress', function(c, key){\n    if (key && 'enter' == key.name) {\n      console.log();\n      process.stdin.removeAllListeners('keypress');\n      tty.setRawMode(false);\n      if (!buf.trim().length) return self.password(str, mask, fn);\n      fn(buf);\n      return;\n    }\n\n    if (key && key.ctrl && 'c' == key.name) {\n      console.log('%s', buf);\n      process.exit();\n    }\n\n    process.stdout.write(mask);\n    buf += c;\n  }).resume();\n};\n\n/**\n * Confirmation prompt with `str` and callback `fn(bool)`\n *\n * Examples:\n *\n *      program.confirm('continue? ', function(ok){\n *        console.log(' got %j', ok);\n *        process.stdin.destroy();\n *      });\n *\n * @param {String} str\n * @param {Function} fn\n * @api public\n */\n\n\nCommand.prototype.confirm = function(str, fn, verbose){\n  var self = this;\n  this.prompt(str, function(ok){\n    if (!ok.trim()) {\n      if (!verbose) str += '(yes or no) ';\n      return self.confirm(str, fn, true);\n    }\n    fn(parseBool(ok));\n  });\n};\n\n/**\n * Choice prompt with `list` of items and callback `fn(index, item)`\n *\n * Examples:\n *\n *      var list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n *      \n *      console.log('Choose the coolest pet:');\n *      program.choose(list, function(i){\n *        console.log('you chose %d \"%s\"', i, list[i]);\n *        process.stdin.destroy();\n *      });\n *\n * @param {Array} list\n * @param {Number|Function} index or fn\n * @param {Function} fn\n * @api public\n */\n\nCommand.prototype.choose = function(list, index, fn){\n  var self = this\n    , hasDefault = 'number' == typeof index;\n\n  if (!hasDefault) {\n    fn = index;\n    index = null;\n  }\n\n  list.forEach(function(item, i){\n    if (hasDefault && i == index) {\n      console.log('* %d) %s', i + 1, item);\n    } else {\n      console.log('  %d) %s', i + 1, item);\n    }\n  });\n\n  function again() {\n    self.prompt('  : ', function(val){\n      val = parseInt(val, 10) - 1;\n      if (hasDefault && isNaN(val)) val = index;\n\n      if (null == list[val]) {\n        again();\n      } else {\n        fn(val, list[val]);\n      }\n    });\n  }\n\n  again();\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word){\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Parse a boolean `str`.\n *\n * @param {String} str\n * @return {Boolean}\n * @api private\n */\n\nfunction parseBool(str) {\n  return /^y|yes|ok|true$/i.test(str);\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] == '--help' || options[i] == '-h') {\n      process.stdout.write(cmd.helpInformation());\n      cmd.emit('--help');\n      process.exit(0);\n    }\n  }\n}\n"]}