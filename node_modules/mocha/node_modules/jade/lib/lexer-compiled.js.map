{"version":3,"sources":["lexer.js"],"names":[],"mappings":"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","file":"lexer-compiled.js","sourcesContent":["\n/*!\n * Jade - Lexer\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Initialize `Lexer` with the given `str`.\n *\n * Options:\n *\n *   - `colons` allow colons for attr delimiters\n *\n * @param {String} str\n * @param {Object} options\n * @api private\n */\n\nvar Lexer = module.exports = function Lexer(str, options) {\n  options = options || {};\n  this.input = str.replace(/\\r\\n|\\r/g, '\\n');\n  this.colons = options.colons;\n  this.deferredTokens = [];\n  this.lastIndents = 0;\n  this.lineno = 1;\n  this.stash = [];\n  this.indentStack = [];\n  this.indentRe = null;\n  this.pipeless = false;\n};\n\n/**\n * Lexer prototype.\n */\n\nLexer.prototype = {\n  \n  /**\n   * Construct a token with the given `type` and `val`.\n   *\n   * @param {String} type\n   * @param {String} val\n   * @return {Object}\n   * @api private\n   */\n  \n  tok: function(type, val){\n    return {\n        type: type\n      , line: this.lineno\n      , val: val\n    }\n  },\n  \n  /**\n   * Consume the given `len` of input.\n   *\n   * @param {Number} len\n   * @api private\n   */\n  \n  consume: function(len){\n    this.input = this.input.substr(len);\n  },\n  \n  /**\n   * Scan for `type` with the given `regexp`.\n   *\n   * @param {String} type\n   * @param {RegExp} regexp\n   * @return {Object}\n   * @api private\n   */\n  \n  scan: function(regexp, type){\n    var captures;\n    if (captures = regexp.exec(this.input)) {\n      this.consume(captures[0].length);\n      return this.tok(type, captures[1]);\n    }\n  },\n  \n  /**\n   * Defer the given `tok`.\n   *\n   * @param {Object} tok\n   * @api private\n   */\n  \n  defer: function(tok){\n    this.deferredTokens.push(tok);\n  },\n  \n  /**\n   * Lookahead `n` tokens.\n   *\n   * @param {Number} n\n   * @return {Object}\n   * @api private\n   */\n  \n  lookahead: function(n){\n    var fetch = n - this.stash.length;\n    while (fetch-- > 0) this.stash.push(this.next());\n    return this.stash[--n];\n  },\n  \n  /**\n   * Return the indexOf `start` / `end` delimiters.\n   *\n   * @param {String} start\n   * @param {String} end\n   * @return {Number}\n   * @api private\n   */\n  \n  indexOfDelimiters: function(start, end){\n    var str = this.input\n      , nstart = 0\n      , nend = 0\n      , pos = 0;\n    for (var i = 0, len = str.length; i < len; ++i) {\n      if (start == str.charAt(i)) {\n        ++nstart;\n      } else if (end == str.charAt(i)) {\n        if (++nend == nstart) {\n          pos = i;\n          break;\n        }\n      }\n    }\n    return pos;\n  },\n  \n  /**\n   * Stashed token.\n   */\n  \n  stashed: function() {\n    return this.stash.length\n      && this.stash.shift();\n  },\n  \n  /**\n   * Deferred token.\n   */\n  \n  deferred: function() {\n    return this.deferredTokens.length \n      && this.deferredTokens.shift();\n  },\n  \n  /**\n   * end-of-source.\n   */\n  \n  eos: function() {\n    if (this.input.length) return;\n    if (this.indentStack.length) {\n      this.indentStack.shift();\n      return this.tok('outdent');\n    } else {\n      return this.tok('eos');\n    }\n  },\n\n  /**\n   * Blank line.\n   */\n  \n  blank: function() {\n    var captures;\n    if (captures = /^\\n *\\n/.exec(this.input)) {\n      this.consume(captures[0].length - 1);\n      if (this.pipeless) return this.tok('text', '');\n      return this.next();\n    }\n  },\n\n  /**\n   * Comment.\n   */\n  \n  comment: function() {\n    var captures;\n    if (captures = /^ *\\/\\/(-)?([^\\n]*)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var tok = this.tok('comment', captures[2]);\n      tok.buffer = '-' != captures[1];\n      return tok;\n    }\n  },\n\n  /**\n   * Interpolated tag.\n   */\n\n  interpolation: function() {\n    var captures;\n    if (captures = /^#\\{(.*?)\\}/.exec(this.input)) {\n      this.consume(captures[0].length);\n      return this.tok('interpolation', captures[1]);\n    }\n  },\n\n  /**\n   * Tag.\n   */\n  \n  tag: function() {\n    var captures;\n    if (captures = /^(\\w[-:\\w]*)(\\/?)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var tok, name = captures[1];\n      if (':' == name[name.length - 1]) {\n        name = name.slice(0, -1);\n        tok = this.tok('tag', name);\n        this.defer(this.tok(':'));\n        while (' ' == this.input[0]) this.input = this.input.substr(1);\n      } else {\n        tok = this.tok('tag', name);\n      }\n      tok.selfClosing = !! captures[2];\n      return tok;\n    }\n  },\n  \n  /**\n   * Filter.\n   */\n  \n  filter: function() {\n    return this.scan(/^:(\\w+)/, 'filter');\n  },\n  \n  /**\n   * Doctype.\n   */\n  \n  doctype: function() {\n    return this.scan(/^(?:!!!|doctype) *([^\\n]+)?/, 'doctype');\n  },\n\n  /**\n   * Id.\n   */\n  \n  id: function() {\n    return this.scan(/^#([\\w-]+)/, 'id');\n  },\n  \n  /**\n   * Class.\n   */\n  \n  className: function() {\n    return this.scan(/^\\.([\\w-]+)/, 'class');\n  },\n  \n  /**\n   * Text.\n   */\n  \n  text: function() {\n    return this.scan(/^(?:\\| ?| ?)?([^\\n]+)/, 'text');\n  },\n\n  /**\n   * Extends.\n   */\n  \n  \"extends\": function() {\n    return this.scan(/^extends? +([^\\n]+)/, 'extends');\n  },\n\n  /**\n   * Block prepend.\n   */\n  \n  prepend: function() {\n    var captures;\n    if (captures = /^prepend +([^\\n]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var mode = 'prepend'\n        , name = captures[1]\n        , tok = this.tok('block', name);\n      tok.mode = mode;\n      return tok;\n    }\n  },\n  \n  /**\n   * Block append.\n   */\n  \n  append: function() {\n    var captures;\n    if (captures = /^append +([^\\n]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var mode = 'append'\n        , name = captures[1]\n        , tok = this.tok('block', name);\n      tok.mode = mode;\n      return tok;\n    }\n  },\n\n  /**\n   * Block.\n   */\n  \n  block: function() {\n    var captures;\n    if (captures = /^block\\b *(?:(prepend|append) +)?([^\\n]*)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var mode = captures[1] || 'replace'\n        , name = captures[2]\n        , tok = this.tok('block', name);\n\n      tok.mode = mode;\n      return tok;\n    }\n  },\n\n  /**\n   * Yield.\n   */\n  \n  yield: function() {\n    return this.scan(/^yield */, 'yield');\n  },\n\n  /**\n   * Include.\n   */\n  \n  include: function() {\n    return this.scan(/^include +([^\\n]+)/, 'include');\n  },\n\n  /**\n   * Case.\n   */\n  \n  \"case\": function() {\n    return this.scan(/^case +([^\\n]+)/, 'case');\n  },\n\n  /**\n   * When.\n   */\n  \n  when: function() {\n    return this.scan(/^when +([^:\\n]+)/, 'when');\n  },\n\n  /**\n   * Default.\n   */\n  \n  \"default\": function() {\n    return this.scan(/^default */, 'default');\n  },\n\n  /**\n   * Assignment.\n   */\n  \n  assignment: function() {\n    var captures;\n    if (captures = /^(\\w+) += *([^;\\n]+)( *;? *)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var name = captures[1]\n        , val = captures[2];\n      return this.tok('code', 'var ' + name + ' = (' + val + ');');\n    }\n  },\n\n  /**\n   * Call mixin.\n   */\n  \n  call: function(){\n    var captures;\n    if (captures = /^\\+([-\\w]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var tok = this.tok('call', captures[1]);\n      \n      // Check for args (not attributes)\n      if (captures = /^ *\\((.*?)\\)/.exec(this.input)) {\n        if (!/^ *[-\\w]+ *=/.test(captures[1])) {\n          this.consume(captures[0].length);\n          tok.args = captures[1];\n        }\n      }\n      \n      return tok;\n    }\n  },\n\n  /**\n   * Mixin.\n   */\n\n  mixin: function(){\n    var captures;\n    if (captures = /^mixin +([-\\w]+)(?: *\\((.*)\\))?/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var tok = this.tok('mixin', captures[1]);\n      tok.args = captures[2];\n      return tok;\n    }\n  },\n\n  /**\n   * Conditional.\n   */\n  \n  conditional: function() {\n    var captures;\n    if (captures = /^(if|unless|else if|else)\\b([^\\n]*)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var type = captures[1]\n        , js = captures[2];\n\n      switch (type) {\n        case 'if': js = 'if (' + js + ')'; break;\n        case 'unless': js = 'if (!(' + js + '))'; break;\n        case 'else if': js = 'else if (' + js + ')'; break;\n        case 'else': js = 'else'; break;\n      }\n\n      return this.tok('code', js);\n    }\n  },\n\n  /**\n   * While.\n   */\n  \n  \"while\": function() {\n    var captures;\n    if (captures = /^while +([^\\n]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      return this.tok('code', 'while (' + captures[1] + ')');\n    }\n  },\n\n  /**\n   * Each.\n   */\n  \n  each: function() {\n    var captures;\n    if (captures = /^(?:- *)?(?:each|for) +(\\w+)(?: *, *(\\w+))? * in *([^\\n]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var tok = this.tok('each', captures[1]);\n      tok.key = captures[2] || '$index';\n      tok.code = captures[3];\n      return tok;\n    }\n  },\n  \n  /**\n   * Code.\n   */\n  \n  code: function() {\n    var captures;\n    if (captures = /^(!?=|-)([^\\n]+)/.exec(this.input)) {\n      this.consume(captures[0].length);\n      var flags = captures[1];\n      captures[1] = captures[2];\n      var tok = this.tok('code', captures[1]);\n      tok.escape = flags[0] === '=';\n      tok.buffer = flags[0] === '=' || flags[1] === '=';\n      return tok;\n    }\n  },\n  \n  /**\n   * Attributes.\n   */\n  \n  attrs: function() {\n    if ('(' == this.input.charAt(0)) {\n      var index = this.indexOfDelimiters('(', ')')\n        , str = this.input.substr(1, index-1)\n        , tok = this.tok('attrs')\n        , len = str.length\n        , colons = this.colons\n        , states = ['key']\n        , escapedAttr\n        , key = ''\n        , val = ''\n        , quote\n        , c\n        , p;\n\n      function state(){\n        return states[states.length - 1];\n      }\n\n      function interpolate(attr) {\n        return attr.replace(/#\\{([^}]+)\\}/g, function(_, expr){\n          return quote + \" + (\" + expr + \") + \" + quote;\n        });\n      }\n\n      this.consume(index + 1);\n      tok.attrs = {};\n      tok.escaped = {};\n\n      function parse(c) {\n        var real = c;\n        // TODO: remove when people fix \":\"\n        if (colons && ':' == c) c = '=';\n        switch (c) {\n          case ',':\n          case '\\n':\n            switch (state()) {\n              case 'expr':\n              case 'array':\n              case 'string':\n              case 'object':\n                val += c;\n                break;\n              default:\n                states.push('key');\n                val = val.trim();\n                key = key.trim();\n                if ('' == key) return;\n                key = key.replace(/^['\"]|['\"]$/g, '').replace('!', '');\n                tok.escaped[key] = escapedAttr;\n                tok.attrs[key] = '' == val\n                  ? true\n                  : interpolate(val);\n                key = val = '';\n            }\n            break;\n          case '=':\n            switch (state()) {\n              case 'key char':\n                key += real;\n                break;\n              case 'val':\n              case 'expr':\n              case 'array':\n              case 'string':\n              case 'object':\n                val += real;\n                break;\n              default:\n                escapedAttr = '!' != p;\n                states.push('val');\n            }\n            break;\n          case '(':\n            if ('val' == state()\n              || 'expr' == state()) states.push('expr');\n            val += c;\n            break;\n          case ')':\n            if ('expr' == state()\n              || 'val' == state()) states.pop();\n            val += c;\n            break;\n          case '{':\n            if ('val' == state()) states.push('object');\n            val += c;\n            break;\n          case '}':\n            if ('object' == state()) states.pop();\n            val += c;\n            break;\n          case '[':\n            if ('val' == state()) states.push('array');\n            val += c;\n            break;\n          case ']':\n            if ('array' == state()) states.pop();\n            val += c;\n            break;\n          case '\"':\n          case \"'\":\n            switch (state()) {\n              case 'key':\n                states.push('key char');\n                break;\n              case 'key char':\n                states.pop();\n                break;\n              case 'string':\n                if (c == quote) states.pop();\n                val += c;\n                break;\n              default:\n                states.push('string');\n                val += c;\n                quote = c;\n            }\n            break;\n          case '':\n            break;\n          default:\n            switch (state()) {\n              case 'key':\n              case 'key char':\n                key += c;\n                break;\n              default:\n                val += c;\n            }\n        }\n        p = c;\n      }\n\n      for (var i = 0; i < len; ++i) {\n        parse(str.charAt(i));\n      }\n\n      parse(',');\n\n      if ('/' == this.input.charAt(0)) {\n        this.consume(1);\n        tok.selfClosing = true;\n      }\n\n      return tok;\n    }\n  },\n  \n  /**\n   * Indent | Outdent | Newline.\n   */\n  \n  indent: function() {\n    var captures, re;\n\n    // established regexp\n    if (this.indentRe) {\n      captures = this.indentRe.exec(this.input);\n    // determine regexp\n    } else {\n      // tabs\n      re = /^\\n(\\t*) */;\n      captures = re.exec(this.input);\n\n      // spaces\n      if (captures && !captures[1].length) {\n        re = /^\\n( *)/;\n        captures = re.exec(this.input);\n      }\n\n      // established\n      if (captures && captures[1].length) this.indentRe = re;\n    }\n\n    if (captures) {\n      var tok\n        , indents = captures[1].length;\n\n      ++this.lineno;\n      this.consume(indents + 1);\n\n      if (' ' == this.input[0] || '\\t' == this.input[0]) {\n        throw new Error('Invalid indentation, you can use tabs or spaces but not both');\n      }\n\n      // blank line\n      if ('\\n' == this.input[0]) return this.tok('newline');\n\n      // outdent\n      if (this.indentStack.length && indents < this.indentStack[0]) {\n        while (this.indentStack.length && this.indentStack[0] > indents) {\n          this.stash.push(this.tok('outdent'));\n          this.indentStack.shift();\n        }\n        tok = this.stash.pop();\n      // indent\n      } else if (indents && indents != this.indentStack[0]) {\n        this.indentStack.unshift(indents);\n        tok = this.tok('indent', indents);\n      // newline\n      } else {\n        tok = this.tok('newline');\n      }\n\n      return tok;\n    }\n  },\n\n  /**\n   * Pipe-less text consumed only when \n   * pipeless is true;\n   */\n\n  pipelessText: function() {\n    if (this.pipeless) {\n      if ('\\n' == this.input[0]) return;\n      var i = this.input.indexOf('\\n');\n      if (-1 == i) i = this.input.length;\n      var str = this.input.substr(0, i);\n      this.consume(str.length);\n      return this.tok('text', str);\n    }\n  },\n\n  /**\n   * ':'\n   */\n\n  colon: function() {\n    return this.scan(/^: */, ':');\n  },\n\n  /**\n   * Return the next token object, or those\n   * previously stashed by lookahead.\n   *\n   * @return {Object}\n   * @api private\n   */\n  \n  advance: function(){\n    return this.stashed()\n      || this.next();\n  },\n  \n  /**\n   * Return the next token object.\n   *\n   * @return {Object}\n   * @api private\n   */\n  \n  next: function() {\n    return this.deferred()\n      || this.blank()\n      || this.eos()\n      || this.pipelessText()\n      || this.yield()\n      || this.doctype()\n      || this.interpolation()\n      || this[\"case\"]()\n      || this.when()\n      || this[\"default\"]()\n      || this[\"extends\"]()\n      || this.append()\n      || this.prepend()\n      || this.block()\n      || this.include()\n      || this.mixin()\n      || this.call()\n      || this.conditional()\n      || this.each()\n      || this[\"while\"]()\n      || this.assignment()\n      || this.tag()\n      || this.filter()\n      || this.code()\n      || this.id()\n      || this.className()\n      || this.attrs()\n      || this.indent()\n      || this.comment()\n      || this.colon()\n      || this.text();\n  }\n};\n"]}