{"version":3,"sources":["../../../../node_modules/openorange/lib/client/ui/listwindowmanager.es6"],"names":[],"mappings":"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","file":"listwindowmanager.js","sourcesContent":["\"use strict\";\n\n(function () {\n    var _ = require(\"underscore\");\n    var oo = require(\"openorange\");\n    var cm = oo.classmanager;\n\n    var ListWindowContainer = Object.create(null);\n    ListWindowContainer.listwindows = [];\n    ListWindowContainer.init = function (wnd) {\n        this.listwindow = wnd;\n        this.grid_columns = null;\n        this.windowjson = JSON.parse(JSON.stringify(this.listwindow.__class__.__description__.columns));   //deep clone of the object because I need to add some metadata to it\n        return this\n    }\n\n    ListWindowContainer.setFocus = function setFocus(window) {\n        for (var i = 0; i < ListWindowContainer.listwindows.length; i++) {\n            var w = ListWindowContainer.listwindows[i];\n            if (w.listwindow === window) {\n                console.log(\"window found: \" + w.tab_id)\n                $('ul.tabs').tabs('select_tab', w.tab_id);\n            }\n        }\n    }\n\n    ListWindowContainer.render = function render() {\n        var self = this;\n        //console.log(containerElement)\n        var html = '<div class=\"container\"></div>';\n        let toolBar = self.createToolBar();\n        var w = $(html)\n        w.append(toolBar)\n        w.append('<div class=\"grid-header\" style=\"width:100%\"> <label>lalala</label> <span style=\"float:right;display:inline-block;\">Search: <input type=\"text\" id=\"txtSearch\" value=\"buscar\"> </span> </div>');\n        w.append('<div class=\"listwindow_grid\" style=\"width:600px;height:200px;\"></div>')\n\n\n        //w.append('<p>HOLA MUNDO</p>');\n        //w.append(self.createToolBar());\n        //w.append('<table class=\"recordlist\"><thead></thead><tbody></tbody></table>')\n        //self.fillTable(w)\n        this.tab_id = \"tab_listwindow_\" + (ListWindowContainer.listwindows.length + 1);\n        console.log(\"setting tab_id: \" + this.tab_id)\n        ListWindowContainer.listwindows.push({\n            listwindow: this.listwindow,\n            element: w,\n            tab_id: this.tab_id,\n            container: self\n        });\n        //w.append(self.createComponent(this.windowjson));\n        //w.append(self.createPasteWindow());\n        //console.log(this.windowjson)\n        this.__element__ = w;\n        this.displayWindow(w)\n\n    };\n\n    ListWindowContainer.displayWindow = function displayWindow(windowElement) {\n\n        var self = this\n        var tab = $('<li class=\"tab col s3\"><a href=\"#' + this.tab_id + '\">' + this.listwindow.getTitle() + '</a></li>');\n\n\n        $('ul.tabs.workspace').append(tab);\n\n        windowElement.attr('id', this.tab_id);\n\n        $('#workspace').append(windowElement);\n\n        $('ul.tabs').tabs();\n\n        //var recordClass = cm.getClass(self.listwindow.__description__.recordClass);\n        var recordClass = self.listwindow.getRecordClass();\n        var columns = self.listwindow.__class__.__description__.columns;\n\n        var grid;\n        var loader = new Slick.Data.RemoteModel(recordClass);\n        var options = {\n            enableCellNavigation: true,\n            enableColumnReorder: false,\n            //showHeaderRow: true,\n\n        };\n\n        self.generateColumns();\n        grid = new Slick.Grid(windowElement.find(\".listwindow_grid\"), loader.data, self.grid_columns, options);\n        grid.onClick.subscribe(function (e, args) {\n            var item = args.item;\n            //console.log(args)\n            self.recordSelectedInListWindow(args.grid.getData()[args.row])\n        });\n        grid.onViewportChanged.subscribe(function (e, args) {\n            var vp = grid.getViewport();\n            //console.log(vp.top, vp.bottom);\n            loader.ensureData(vp.top, vp.bottom);\n        });\n        loader.onDataLoaded.subscribe(function (e, args) {\n            for (var i = args.from; i <= args.to; i++) {\n                grid.invalidateRow(i);\n            }\n            grid.updateRowCount();\n            grid.render();\n            //loadingIndicator.fadeOut();\n        });\n\n        $(\"#txtSearch\").keyup(function (e) {\n            if (e.which == 13) {\n                loader.setSearch($(this).val());\n                var vp = grid.getViewport();\n                loader.ensureData(vp.top, vp.bottom);\n            }\n        });\n        grid.onSort.subscribe(function (e, args) {\n            loader.setSort(args.sortCol.field, args.sortAsc ? 1 : -1);\n            var vp = grid.getViewport();\n            loader.ensureData(vp.top, vp.bottom);\n        });\n        grid.onViewportChanged.notify();\n    };\n\n    ListWindowContainer.createToolBar = function createToolBar() {\n        var self = this;\n        var html = '<div class=\"row\">';\n        html += '<a class=\"btn waves-effect waves-light\"><i class=\"mdi\">+</i></a>';\n        html += '</div>';\n        var res = $(html);\n        //res.find(\"a\").click(function (event) {self.save(event)});\n        res.find(\"a\").click(self.action_new.bind(self));\n        return res;\n    };\n\n    ListWindowContainer.action_new = async function action_new() {\n        var self = this;\n        var record = self.listwindow.getRecordClass().new()\n        var window = self.listwindow.getWindowClass().new();\n        await record.defaults();\n        window.setRecord(record);\n        window.open();\n        window.setFocus();\n    }\n\n    ListWindowContainer.generateColumns = function generateColumns() {\n        var self = this;\n        this.grid_columns = [];\n        var columns = self.listwindow.__class__.__description__.columns;\n        for (var i = 0; i < columns.length; i++) {\n            var col = columns[i];\n            this.grid_columns.push({id: col.field, name: col.field, field: col.field, sortable: true})\n        }\n    }\n\n\n    ListWindowContainer.recordSelectedInListWindow = async function recordSelectedInListWindow(record) {\n        var self = this;\n        console.log(\"aca\")\n        let res = await record.load()\n        if (res) {\n            var window = cm.getClass(self.listwindow.__class__.getDescription().windowClass).new();\n            window.setRecord(record);\n            window.open();\n            window.setFocus();\n        }\n    }\n\n    $.extend(true, window.oo, {listwindowmanager: ListWindowContainer})\n    //window.ListWindowManager = ListWindowContainer; //para hacer global la variable WindowManager\n\n})();"]}