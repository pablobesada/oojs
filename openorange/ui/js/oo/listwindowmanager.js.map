{"version":3,"sources":["listwindowmanager.es6"],"names":[],"mappings":"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","file":"listwindowmanager.js","sourcesContent":["\"use strict\";\n\n(function () {\n    var _ = require(\"underscore\");\n    var oo = require(\"openorange\");\n    var cm = oo.classmanager;\n\n    class ListWindowContainer {\n\n\n        constructor(wnd) {\n            this.listwindow = wnd;\n            this.grid_columns = null;\n            this.windowjson = JSON.parse(JSON.stringify(this.listwindow.__class__.__description__.columns));   //deep clone of the object because I need to add some metadata to it\n            this.listwindow.addListener(this);\n            return this\n        }\n\n        setFocus() {\n            $('ul.tabs').tabs('select_tab', this.tab_id);\n            return;\n            for (var i = 0; i < ListWindowContainer.listwindows.length; i++) {\n                var w = ListWindowContainer.listwindows[i];\n                if (w.listwindow === window) {\n                    console.log(\"window found: \" + w.tab_id)\n                    $('ul.tabs').tabs('select_tab', w.tab_id);\n                }\n            }\n        }\n\n        render() {\n            var self = this;\n            //console.log(containerElement)\n            var html = '<div class=\"container\"></div>';\n            let toolBar = self.createToolBar();\n            var w = $(html)\n            w.append(toolBar)\n            w.append('<div class=\"grid-header\" style=\"width:100%\"> <label>lalala</label> <span style=\"float:right;display:inline-block;\">Search: <input type=\"text\" id=\"txtSearch\" value=\"buscar\"> </span> </div>');\n            w.append('<div class=\"listwindow_grid\" style=\"width:600px;height:200px;\"></div>')\n            this.tab_id = \"tab_listwindow_\" + (ListWindowContainer.listwindows.length + 1);\n            console.log(\"setting tab_id: \" + this.tab_id)\n            ListWindowContainer.listwindows.push({\n                listwindow: this.listwindow,\n                element: w,\n                tab_id: this.tab_id,\n                container: self\n            });\n            this.__element__ = w;\n            this.displayWindow(w)\n\n        };\n\n        displayWindow(windowElement) {\n\n            var self = this\n            var tab = $('<li class=\"tab col s3\"><a href=\"#' + this.tab_id + '\">' + this.listwindow.getTitle() + '</a></li>');\n\n\n            $('ul.tabs.workspace').append(tab);\n\n            windowElement.attr('id', this.tab_id);\n\n            $('#workspace').append(windowElement);\n\n            $('ul.tabs').tabs();\n\n            var recordClass = self.listwindow.getRecordClass();\n            var columns = self.listwindow.__class__.__description__.columns;\n\n            var grid;\n            var loader = new Slick.Data.RemoteModel(recordClass);\n            var options = {\n                enableCellNavigation: true,\n                enableColumnReorder: false,\n                //showHeaderRow: true,\n\n            };\n\n            self.generateColumns();\n            grid = new Slick.Grid(windowElement.find(\".listwindow_grid\"), loader.data, self.grid_columns, options);\n            grid.onClick.subscribe(function (e, args) {\n                var item = args.item;\n                self.recordSelectedInListWindow(args.grid.getData()[args.row])\n            });\n            grid.onViewportChanged.subscribe(function (e, args) {\n                var vp = grid.getViewport();\n                loader.ensureData(vp.top, vp.bottom);\n            });\n            loader.onDataLoaded.subscribe(function (e, args) {\n                for (var i = args.from; i <= args.to; i++) {\n                    grid.invalidateRow(i);\n                }\n                grid.updateRowCount();\n                grid.render();\n                //loadingIndicator.fadeOut();\n            });\n\n            $(\"#txtSearch\").keyup(function (e) {\n                if (e.which == 13) {\n                    loader.setSearch($(this).val());\n                    var vp = grid.getViewport();\n                    loader.ensureData(vp.top, vp.bottom);\n                }\n            });\n            grid.onSort.subscribe(function (e, args) {\n                loader.setSort(args.sortCol.field, args.sortAsc ? 1 : -1);\n                var vp = grid.getViewport();\n                loader.ensureData(vp.top, vp.bottom);\n            });\n            grid.onViewportChanged.notify();\n        };\n\n        createToolBar() {\n            var self = this;\n            var html = '<div class=\"row\">';\n            html += '<a class=\"btn waves-effect waves-light\"><i class=\"mdi\">+</i></a>';\n            html += '</div>';\n            var res = $(html);\n            //res.find(\"a\").click(function (event) {self.save(event)});\n            res.find(\"a\").click(self.action_new.bind(self));\n            return res;\n        };\n\n        async action_new() {\n            var self = this;\n            var record = self.listwindow.getRecordClass().new()\n            var window = self.listwindow.getWindowClass().new();\n            await record.defaults();\n            window.setRecord(record);\n            window.open();\n            window.setFocus();\n        }\n\n\n        generateColumns() {\n            var self = this;\n            this.grid_columns = [];\n            var columns = self.listwindow.__class__.__description__.columns;\n            for (var i = 0; i < columns.length; i++) {\n                var col = columns[i];\n                this.grid_columns.push({id: col.field, name: col.field, field: col.field, sortable: true})\n            }\n        }\n\n\n        async recordSelectedInListWindow(record) {\n            var self = this;\n            console.log(\"aca\")\n            let res = await record.load()\n            if (res) {\n                var window = cm.getClass(self.listwindow.__class__.getDescription().windowClass).new();\n                window.setRecord(record);\n                window.open();\n                window.setFocus();\n            }\n        }\n\n        update(event) {\n            var self = this;\n            switch (event.type) {\n                case \"listwindow\":\n                    switch (event.action) {\n                        case 'setFocus':\n                            self.setFocus()\n                            break;\n                    }\n                    break\n            }\n        };\n    }\n\n    $(document).ready(function () {\n        console.log(\"en docready listwindowmanager\")\n        cm.getClass(\"Embedded_ListWindow\").addClassListener({\n            update: function (event) {\n                if (event.type =='listwindow' && event.action =='open') {\n                    let wm = new ListWindowContainer(event.data)\n                    wm.render()\n                }\n            }\n        });\n    })\n\n    ListWindowContainer.listwindows = [];\n\n    window.oo.ui.listwindowmanager = ListWindowContainer;\n    //$.extend(true, window.oo.ui, {listwindowmanager: ListWindowContainer})\n    //window.ListWindowManager = ListWindowContainer; //para hacer global la variable WindowManager\n\n})();"],"sourceRoot":"/source/"}