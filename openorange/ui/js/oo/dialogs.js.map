{"version":3,"sources":["dialogs.es6"],"names":[],"mappings":"AAAA;;;;;;;;AACA,CAAC,UAAU,CAAV,EAAa;AAAA,QAEJ,OAFI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,qFAIgB,GAJhB;AAAA,wBAKE,OALF,EAME,EANF,EAOE,IAPF,EAkBE,aAlBF;AAAA;AAAA;AAAA;AAAA;AAKE,2CALF,GAKY,QAAQ,OAAR,EALZ;AAME,sCANF,GAMO,YAAY,QAAQ,WAAR,EANnB;AAOE,wCAPF,uCAQiB,EARjB,kKAWmB,GAXnB,iLAc4D,EAd5D,yKAe4D,EAf5D;AAkBE,iDAlBF,GAkBkB,EAAE,IAAF,CAlBlB;;AAmBF,sCAAE,SAAS,IAAX,EAAiB,MAAjB,CAAwB,aAAxB;AACA,4CAAQ,QAAR,CAAiB,EAAjB,IAAuB,OAAvB;AACA,kDAAc,SAAd,CAAwB,EAAC,aAAY,KAAb,EAAxB;AArBE,qEAsBK,QAAQ,OAtBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAyBmB,GAzBnB;AAAA,wBA0BE,OA1BF,EA2BE,EA3BF,EA4BE,IA5BF,EAwCE,aAxCF;AAAA;AAAA;AAAA;AAAA;AA0BE,2CA1BF,GA0BY,QAAQ,OAAR,EA1BZ;AA2BE,sCA3BF,GA2BO,YAAY,QAAQ,WAAR,EA3BnB;AA4BE,wCA5BF,uCA6BiB,EA7BjB,kKAgCmB,GAhCnB,kFAiCuD,EAjCvD,iBAiCmE,EAjCnE,+JAmC+C,EAnC/C;AAwCE,iDAxCF,GAwCkB,EAAE,IAAF,CAxClB;;AAyCF,sCAAE,SAAS,IAAX,EAAiB,MAAjB,CAAwB,aAAxB;AACA,4CAAQ,QAAR,CAAiB,EAAjB,IAAuB,OAAvB;AACA,kDAAc,SAAd,CAAwB,EAAC,aAAY,KAAb;AACpB,+CAAO,iBAAW;AAAC,0DAAc,IAAd,CAAmB,MAAM,EAAN,GAAW,QAA9B,EAAwC,KAAxC;AAAgD;AAD/C,qCAAxB;;AA3CE,sEA+CK,QAAQ,OA/Cb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,sFAkDa,GAlDb;AAAA;AAAA;AAAA;AAAA;AAmDF,0CAAM,GAAN;;AAnDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAsDmB,GAtDnB;AAAA;AAAA;AAAA;AAAA;AAuDF,gDAAY,KAAZ,CAAkB,GAAlB,EAAuB,IAAvB;;AAvDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFA0De,EA1Df,EA0DmB,MA1DnB;AAAA;AAAA;AAAA;AAAA;AA2DF,sCAAE,MAAM,EAAR,EAAY,UAAZ;AACA,sCAAE,MAAM,EAAR,EAAY,MAAZ;AACA,4CAAQ,QAAR,CAAiB,EAAjB,EAAqB,OAArB,CAA6B,MAA7B;;;AA7DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkEV,YAAQ,QAAR,GAAmB,EAAnB;AACA,YAAQ,WAAR,GAAsB,CAAtB;;AAEA,WAAO,EAAP,CAAU,EAAV,CAAa,OAAb,GAAuB,OAAvB;;AAEH,CAvED,EAuEG,MAvEH","file":"dialogs.js","sourcesContent":["\"use strict\";\n(function ($) {\n\n    class Dialogs {\n\n        static async askYesNo(txt) {\n            let promise = Promise.pending()\n            let id = 'DIALOG_' + Dialogs.element_ids++;\n            let html = `\n                    <div id=\"${id}\" class=\"modal bottom-sheet\">\n                        <div class=\"modal-content\">\n                            <h4></h4>\n                            <p>${txt}</p>\n                        </div>\n                        <div class=\"modal-footer green\">\n                            <a href=\"#\" onclick=\"oo.ui.dialogs.resolve('${id}', true)\" class=\" modal-action modal-close waves-effect waves-green btn-flat\">Yes</a>\n                            <a href=\"#\" onclick=\"oo.ui.dialogs.resolve('${id}', false)\" class=\" modal-action modal-close waves-effect waves-green btn-flat\">No</a>\n                        </div>\n                    </div>`\n            let dialogElement = $(html)\n            $(document.body).append(dialogElement);\n            Dialogs.promises[id] = promise;\n            dialogElement.openModal({dismissible:false});\n            return promise.promise;\n        }\n\n        static async inputString(txt) {\n            let promise = Promise.pending()\n            let id = 'DIALOG_' + Dialogs.element_ids++;\n            let html = `\n                    <div id=\"${id}\" class=\"modal bottom-sheet\">\n                        <div class=\"modal-content\">\n                            <h4></h4>\n                            <p>${txt}</p>\n                            <form onsubmit=\"oo.ui.dialogs.resolve('${id}', $('#${id}_INPUT').val());return false;\">\n                                <div class=\"form-field\">\n                                    <input type=\"text\" id=\"${id}_INPUT\">\n                                </div>\n                            </form>\n                        </div>\n                    </div>`\n            let dialogElement = $(html)\n            $(document.body).append(dialogElement);\n            Dialogs.promises[id] = promise;\n            dialogElement.openModal({dismissible:false,\n                ready: function (){dialogElement.find('#' + id + \"_INPUT\").focus()}\n            });\n\n            return promise.promise;\n        }\n\n        static async alert(txt) {\n            alert(txt);\n        }\n\n        static async postMessage(txt) {\n            Materialize.toast(txt, 4000)\n        }\n\n        static async resolve(id, result) {\n            $('#' + id).closeModal();\n            $('#' + id).remove();\n            Dialogs.promises[id].resolve(result);\n            //delete Dialogs.promises[id]\n        }\n    }\n\n    Dialogs.promises = {}\n    Dialogs.element_ids = 1;\n\n    window.oo.ui.dialogs = Dialogs\n    //window.WindowManager = WindowContainer; //para hacer global la variable WindowManager\n})(jQuery);"]}