{"version":3,"sources":["orm.js"],"names":[],"mappings":"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","file":"orm-compiled.js","sourcesContent":["\"use strict\";\nvar db = require(\"./db\")\nvar async = require(\"async\")\nvar Promise = require(\"bluebird\");\n\nvar orm = {}\n\nfunction raw_insert_row_function(connection, record) {\n    return function (callback) {\n        var insert = orm.generate_insert_sql(record);\n        console.log(insert.sql)\n        connection.query(insert.sql, insert.values, function (err, info) {\n            if (!err) {\n                record.internalId = info.insertId;\n                record.syncVersion = 1;\n                record.setNewFlag(false);\n                record.setModifiedFlag(false);\n            }\n            callback(err);\n            return;\n        })\n    };\n}\n\nfunction raw_delete_row_function(connection, record) {\n    return function (callback) {\n        var del = orm.generate_delete_sql(record);\n        console.log(del.sql)\n        console.log(del.values)\n        connection.query(del.sql, del.values, function (err, info) {\n            if (!err) {\n                console.log(info)\n                if (info.affectedRows != 1) {\n                    callback({code: \"ROW_NOT_DELETED\", message: \"Row couldn't be deleted\"})\n                    return;\n                }\n            }\n            callback(err);\n            return;\n        })\n    };\n}\n\nfunction raw_update_row_function(connection, record) {\n    return function (callback) {\n        var update = orm.generate_update_sql(record);\n        console.log(update.sql)\n        connection.query(update.sql, update.values, function (err, info) {\n            if (!err) {\n                if (info.changedRows != 1) {\n                    callback({code: \"ROW_NOT_UPDATED\", message: \"Row couldn't be updated\"})\n                    return;\n                } else {\n                    record.setNewFlag(false);\n                    record.setModifiedFlag(false);\n                }\n            }\n            callback(err);\n            return;\n        })\n    };\n}\n\nfunction deleteDetailFunction(connection, record, detailname) {\n    var detail = record.details(detailname);\n    return function (callback) {\n        var del = orm.generate_delete_detail_sql(record, detailname);\n        console.log(del.sql)\n        console.log(del.values)\n        connection.query(del.sql, del.values, function (err, info) {\n            callback(err);\n            return;\n        })\n    }\n}\n\nfunction saveDetailFunction(connection, record, detailname) {\n    var detail = record.details(detailname);\n    return function (callback) {\n        var funcs = [];\n        for (var i = 0; i < detail.length; i++) {\n            var row = detail[i];\n            row.masterId = record.internalId;\n            row.rowNr = i;\n            if (row.isModified()) {\n                if (row.isNew()) {\n                    funcs.push(raw_insert_row_function(connection, row))\n                } else {\n                    funcs.push(raw_update_row_function(connection, row))\n                }\n            }\n        }\n        for (var i=0; i<detail.__removed_rows__.length; i++) {\n            var row = detail.__removed_rows__[i];\n            if (!row.isNew()) {\n                funcs.push(raw_delete_row_function(connection, row))\n            }\n        }\n        console.log(detailname, detail);\n        async.series(funcs, function result(err, result) {\n            callback(err);\n        })\n    }\n}\n\norm.generate_insert_sql = function generate_insert_sql(record) {\n    var fieldnames = record.fieldNames();\n    var questions = [];\n    var values = [];\n    var fnames = []\n\n    for (var i = 0; i < fieldnames.length; i++) {\n        var fn = fieldnames[i];\n        if (fn == 'internalId') continue;\n        fnames.push(\"`\" + fn + \"`\");\n        questions.push(\"?\");\n        if (fn == 'syncVersion') {\n            values.push(1);\n        } else {\n            values.push(record[fn]);\n        }\n    }\n    var sql = \"INSERT INTO \" + record.__description__.name + \" (\" + fnames.join(\",\") + \") VALUES (\" + questions.join(\",\") + \")\";\n    return {sql: sql, values: values};\n}\n\norm.generate_update_sql = function generate_update_sql(record) {\n    var fieldnames = record.fieldNames();\n    var values = [];\n    var setfields = [];\n    var where = [];\n    for (var i = 0; i < fieldnames.length; i++) {\n        var fn = fieldnames[i];\n        setfields.push(\"`\" + fn + \"`=?\");\n        if (fn == 'syncVersion') {\n            values.push(record[fn] + 1);\n        } else {\n            values.push(record[fn]);\n        }\n    }\n    where.push(\"`internalId`=?\");\n    values.push(record.internalId);\n    if (record.hasField(\"syncVersion\")) {\n        where.push(\"`syncVersion`=?\");\n        values.push(record.syncVersion);\n    }\n    var sql = \"UPDATE \" + record.__description__.name + \" SET \" + setfields.join(\",\") + \" WHERE \" + where.join(\" AND \");\n    return {sql: sql, values: values};\n}\n\norm.generate_delete_sql = function generate_update_sql(record) {\n    var values = [];\n    var where = [];\n    where.push(\"`internalId`=?\");\n    values.push(record.internalId);\n    if (record.hasField(\"syncVersion\")) {\n        where.push(\"`syncVersion`=?\");\n        values.push(record.syncVersion);\n    }\n    var sql = \"DELETE FROM \" + record.__description__.name + \" WHERE \" + where.join(\" AND \");\n    return {sql: sql, values: values};\n}\n\norm.generate_delete_detail_sql = function generate_update_sql(record, detailname) {\n    var values = [];\n    var where = [];\n    where.push(\"`masterId`=?\");\n    values.push(record.internalId);\n    var sql = \"DELETE FROM \" + record.details(detailname).__description__.class + \" WHERE \" + where.join(\" AND \");\n    return {sql: sql, values: values};\n}\n\nfunction fill_record_with_query_result(record, row, fields) {\n    for (var i = 0; i < fields.length; i++) {\n        var fn = fields[i].name;\n        record[fn] = row[fn];\n    }\n}\n\nfunction select_detail_function(conn, record, dn) {\n    return function (cb) {\n        var select = orm.generate_select_detail_sql(record, dn);\n        console.log(select.sql)\n        var detail = record.details(dn);\n        conn.query(select.sql, select.values, function (err, rows, fields) {\n            if (err) {\n                cb(err);\n                return;\n            }\n            rows.forEach(function (row) {\n                var rw = detail.newRow();\n                fill_record_with_query_result(rw, row, fields);\n                detail.push(rw);\n                rw.setNewFlag(false);\n                rw.setModifiedFlag(false);\n            })\n            cb(null);\n            return;\n        })\n    }\n}\n\norm.load = function load(record, callback) {\n    db.pool.getConnection(function (err, conn) {\n        if (err) {\n            callback(err, null);\n            return;\n        }\n        var select = orm.generate_select_sql(record);\n        console.log(select.sql);\n        async.series([\n                function (cb) {\n                    conn.query(select.sql, select.values, function (err, rows, fields) {\n                        if (err) {\n                            cb(err);\n                            return;\n                        }\n                        if (rows == 0) {\n                            cb({error: \"record not found\"})\n                            return;\n                        }\n                        fill_record_with_query_result(record, rows[0], fields)\n                        record.setNewFlag(false);\n                        record.setModifiedFlag(false);\n                        cb(null);\n                        return;\n                    })\n                },\n                function (cb) {\n                    var funcs = [];\n                    record.detailNames().forEach(function (dn) {\n                        funcs.push(select_detail_function(conn, record, dn))\n                    })\n                    async.parallel(funcs,\n                        function result(err, results) {\n                            cb(err);\n                        }\n                    )\n                }],\n            function result(err, results) {\n                if (conn) conn.release();\n                callback(err);\n            }\n        );\n    });\n}\n\norm.generate_select_sql = function generate_select_sql(record) {\n    var fieldnames = record.fieldNames();\n    var questions = [];\n    var values = [];\n    var snames = []\n    var where = []\n\n    for (var i = 0; i < fieldnames.length; i++) {\n        var fn = fieldnames[i];\n        snames.push(\"`\" + fn + \"`\");\n        var value = record[fn];\n        if (value != null) {\n            where.push(\"`\" + fn + \"` = ?\");\n            values.push(record[fn]);\n        }\n    }\n    var sql = \"SELECT \" + snames.join(\",\") + \" FROM \" + record.__description__.name + \" WHERE \" + where.join(\" AND \") + \" LIMIT 1\";\n    return {sql: sql, values: values};\n}\n\norm.generate_select_detail_sql = function generate_select_detail_sql(record, detailname) {\n    var detail = record.details(detailname);\n    var fieldnames = detail.fieldNames();\n    var questions = [];\n    var values = [record.internalId];\n    var snames = []\n    var where = \"`masterId`=?\";\n    var order = \"rowNr ASC\";\n\n    for (var i = 0; i < fieldnames.length; i++) {\n        var fn = fieldnames[i];\n        snames.push(\"`\" + fn + \"`\");\n    }\n    var sql = \"SELECT \" + snames.join(\",\") + \" FROM \" + detail.__description__.class + \" WHERE \" + where + \" ORDER BY \" + order;\n    return {sql: sql, values: values};\n}\n\nfunction finish_parallel_function(conn, record, callback) {\n    return function result(err, result) {\n        if (err) {\n            conn.rollback(function (err2) {\n                conn.release();\n                if (err2) {\n                    callback(err2);\n                    return;\n                } //no estoy seguro de esto\n                callback(err);\n                return;\n            });\n        } else {\n            conn.commit(function (err2) {\n                conn.release();\n                if (err2) {\n                    callback(err2); //no estoy seguro de esto\n                    return;\n                }\n                record.__clearRemovedRows__();\n                callback(null);\n                return;\n            });\n        }\n    }\n}\n\nfunction save_details_and_finish_function(conn, record, callback) {\n    return function result(err, result) {\n        if (err) {\n            conn.rollback(function (err2) {\n                conn.release();\n                if (err2) {\n                    callback(err2);\n                    return;\n                } //no estoy seguro de esto\n                callback(err);\n                return;\n            });\n            return;\n        }\n        var funcs = [];\n        for (var i = 0; i < record.detailNames().length; i++) {\n            var f = saveDetailFunction(conn, record, record.detailNames()[i]);\n            funcs.push(f);\n        }\n        async.parallel(funcs, finish_parallel_function(conn, record, callback));\n    }\n}\n\nfunction save_new(conn, record, callback) {\n    var insert = orm.generate_insert_sql(record);\n    console.log(insert.sql)\n    async.series([\n            function (cb) {\n                conn.beginTransaction(cb);\n                return;\n            },\n            function (cb) {\n                conn.query(insert.sql, insert.values, function (err, info) {\n                    if (!err) {\n                        record.internalId = info.insertId;\n                        record.syncVersion = 1;\n                        record.setNewFlag(false);\n                        record.setModifiedFlag(false);\n                    }\n                    cb(err);\n                    return;\n                })\n            }\n        ], save_details_and_finish_function(conn, record, callback)\n    );\n}\n\nfunction save_existing(conn, record, callback) {\n    async.series([\n            function (cb) {\n                conn.beginTransaction(cb);\n                return;\n            },\n            function (cb) {\n                var update = orm.generate_update_sql(record);\n                console.log(update.sql)\n                console.log(update.values)\n                conn.query(update.sql, update.values, function (err, info) {\n                    if (!err) {\n                        if (info.changedRows != 1) {\n                            cb({\n                                code: \"WRONG_SYNCVERSION\",\n                                message: \"Record might have been modified by other user\"\n                            })\n                            return;\n                        } else {\n                            record.syncVersion += 1;\n                            record.setNewFlag(false);\n                            record.setModifiedFlag(false);\n                        }\n                    }\n                    cb(err);\n                    return;\n                })\n            }\n        ], save_details_and_finish_function(conn, record, callback)\n    );\n}\n\nfunction delete_details_and_finish_function(conn, record, callback) {\n    return function result(err, result) {\n        if (err) {\n            conn.rollback(function (err2) {\n                conn.release();\n                if (err2) {\n                    callback(err2);\n                    return;\n                } //no estoy seguro de esto\n                callback(err);\n                return;\n            });\n            return;\n        }\n        var funcs = [];\n        for (var i = 0; i < record.detailNames().length; i++) {\n            var f = deleteDetailFunction(conn, record, record.detailNames()[i]);\n            funcs.push(f);\n        }\n        async.parallel(funcs, finish_parallel_function(conn, record, callback));\n    }\n}\n\norm.save = function save(record, callback) {\n    if (!record.isNew() && !record.isModified()) {\n        callback(null);\n        return;\n    }\n    db.pool.getConnection(function (err, conn) {\n        if (err) {\n            if (conn) conn.release();\n            callback(err, null);\n            return;\n        }\n        if (record.isNew()) {\n            save_new(conn, record, callback);\n        } else if (record.isModified()) {\n            save_existing(conn, record, callback);\n        }\n    });\n}\n\norm.delete = function (record, callback) {\n    if (record.isNew()) {\n        callback({\n            code: \"NOT_DELETED\",\n            message: \"Record is new. Cannot be deleted\"\n        });\n        return;\n    }\n    db.pool.getConnection(function (err, conn) {\n        if (err) {\n            if (conn) conn.release();\n            callback(err, null);\n            return;\n        }\n        async.series([\n            function (cb) {\n                conn.beginTransaction(cb);\n                return;\n            },\n            function (cb) {\n                var del = orm.generate_delete_sql(record);\n                console.log(del.sql)\n                console.log(del.values)\n                conn.query(del.sql, del.values, function (err, info) {\n                    if (!err) {\n                        if (info.affectedRows != 1) {\n                            cb({\n                                code: \"NOT_DELETED\",\n                                message: \"Record might have been modified by other user\"\n                            })\n                            return;\n                        }\n                    }\n                    cb(err);\n                    return;\n                })\n            }\n        ], delete_details_and_finish_function(conn, record, callback))\n    });\n\n}\nmodule.exports = orm"]}