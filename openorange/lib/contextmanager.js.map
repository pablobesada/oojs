{"version":3,"sources":["contextmanager.es6"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,2BAA2B,QAAQ,4BAAR,CAA/B;AACA,IAAI,iBAAiB,yBAAyB,eAAzB,CAAyC,gBAAzC,CAArB;;IAEM,c;;;;;;;4CAEyB;;AAEvB,mBAAO,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC5B,+BAAe,WAAf,CAA2B,GAA3B;AACA,+BAAe,WAAf,CAA2B,GAA3B;;AAEA,+BAAe,GAAf,CAAmB,YAAW;;;AAG1B,mCAAe,GAAf,CAAmB,SAAnB,EAA8B,IAAI,OAAlC;;AAEA;AACH,iBAND;AAQH,aAZD;AAaH;;;qCAEmB;AAChB,mBAAO,eAAe,GAAf,CAAmB,SAAnB,KAAiC,EAAC,IAAI,KAAL,EAAxC;AACH;;;;;oBAGO,O,EAGA,W,EACK,C,EACD,K,EAMJ,I;;;;;;AAXA,uC,GAAU,KAAK,UAAL,E;;AACd,wCAAQ,GAAR,CAAY,UAAU,QAAQ,EAA9B;AACA,oCAAI,CAAC,KAAK,aAAL,CAAmB,QAAQ,EAA3B,CAAL,EAAqC,KAAK,aAAL,CAAmB,QAAQ,EAA3B,IAAiC,EAAjC;AACjC,2C,GAAc,KAAK,aAAL,CAAmB,QAAQ,EAA3B,C;sEACJ,W;;;;;;;;AAAL,iC;AACD,qC,GAAO,YAAY,CAAZ,C;;oCACN,MAAK,I;;;;;iEAEC,K;;;;;;;;uCAGE,QAAQ,MAAR,EAAgB,aAAhB,E;;;AAAb,oC;;AACJ,qCAAK,aAAL,CAAmB,QAAQ,EAA3B,EAA+B,IAA/B,CAAoC,IAApC;iEACO,I;;;;;;;;;;;;;;;;;;;;;AAGf,eAAe,aAAf,GAA+B,EAA/B;;AAEA,OAAO,OAAP,GAAiB,cAAjB","file":"contextmanager.js","sourcesContent":["let continuationLocalStorage = require('continuation-local-storage')\nlet contextSession = continuationLocalStorage.createNamespace('contextSession');\n\nclass ContextManager {\n\n    static expressMiddleware() {\n\n        return function(req, res, next) {\n            contextSession.bindEmitter(req);\n            contextSession.bindEmitter(res);\n            //console.log(\"en middleware\")\n            contextSession.run(function() {\n                //console.log(\"en middleware 2\", req.session, req.session.user)\n                //console.log(\"req.sessionID: \", req.sessionID, \"   session.id: \" + req.session.id)\n                contextSession.set('session', req.session);\n\n                next();\n            });\n\n        };\n    }\n    \n    static getSession() {\n        return contextSession.get('session') || {id: '123'};\n    }\n\n    static async getDBConnection() {\n        let session = this.getSession();\n        console.log(\"SID: \" + session.id)\n        if (!this.dbconnections[session.id]) this.dbconnections[session.id] = []\n        let connections = this.dbconnections[session.id];\n        for (let i in connections) {\n            let conn = connections[i];\n            if (!conn.busy) {\n                //console.log(\"returing existing: \", conn)\n                return conn;\n            }\n        }\n        let conn = await require(\"./db\").getConnection();\n        this.dbconnections[session.id].push(conn)\n        return conn;\n    }\n}\nContextManager.dbconnections = {}\n\nmodule.exports = ContextManager"]}