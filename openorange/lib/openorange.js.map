{"version":3,"sources":["../../node_modules/openorange/lib/openorange.es6"],"names":[],"mappings":"AAAA;;;wDAIA,iBAAqB,QAArB,EAA+B,OAA/B;AAAA,YAGQ,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA,8BACQ,CAAC,QAAD,IAAa,YAAY,EADjC;AAAA;AAAA;AAAA;;AAAA,yDAC4C,KAD5C;;AAAA;AAEI,4BAAI,CAAC,OAAL,EAAc,UAAU,EAAV;AAFlB;AAAA,+BAGqB,GAAG,QAAH,CAAY,MAAZ,EAAoB,OAApB,CAA4B,EAAC,MAAM,QAAP,EAAiB,UAAU,OAA3B,EAA5B,CAHrB;;AAAA;AAGQ,4BAHR;;AAAA,6BAIQ,IAJR;AAAA;AAAA;AAAA;;AAAA,yDAIqB,IAJrB;;AAAA;AAAA,yDAKW,KALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,K;;;;;;;AAHf,QAAQ,gBAAR;AACA,IAAI,KAAK,QAAQ,gBAAR,CAAT;;AAUA,IAAI,KAAK,EAAT;AACA,GAAG,QAAH,GAAc,IAAd;AACA,GAAG,QAAH,GAAc,CAAC,GAAG,QAAlB;AACA,GAAG,YAAH,GAAkB,EAAlB;AACA,GAAG,GAAH,GAAS,QAAQ,OAAR,CAAT;AACA,GAAG,KAAH,GAAW,QAAQ,eAAR,CAAX;AACA,GAAG,QAAH,GAAc,QAAQ,iBAAR,CAAd;;AAEA,GAAG,cAAH,GAAoB,QAAQ,kBAAR,CAApB;;AAEA,GAAG,eAAH,GAAqB,GAAG,cAAH,CAAkB,eAAlB,CAAkC,IAAlC,CAAuC,GAAG,cAA1C,CAArB;AACA,GAAG,gBAAH,GAAsB,GAAG,cAAH,CAAkB,gBAAlB,CAAmC,IAAnC,CAAwC,GAAG,cAA3C,CAAtB;AACA,GAAG,MAAH,GAAY,GAAG,cAAH,CAAkB,MAAlB,CAAyB,IAAzB,CAA8B,GAAG,cAAjC,CAAZ;AACA,GAAG,QAAH,GAAc,GAAG,cAAH,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,GAAG,cAAnC,CAAd;;AAEA,GAAG,WAAH,GAAiB,GAAG,cAAH,CAAkB,WAAlB,CAA8B,IAA9B,CAAmC,GAAG,cAAtC,CAAjB;AACA,GAAG,KAAH,GAAW,KAAX;AACA,GAAG,SAAH,GAAe,SAAS,SAAT,GAAqB;AAAC,WAAO,QAAQ,UAAR,CAAP;AAA2B,CAAhE;AACA,OAAO,OAAP,GAAiB,EAAjB","file":"openorange.js","sourcesContent":["\"use strict\"\nrequire(\"babel-polyfill\");\nlet cm = require(\"./classmanager\")\n\nasync function login(usercode, md5pass) {\n    if (!usercode || usercode == '') return false;\n    if (!md5pass) md5pass = '';\n    let user = await cm.getClass(\"User\").findOne({Code: usercode, Password: md5pass})\n    if (user) return true;\n    return false;\n}\n\nvar oo = {}\noo.isServer = true;\noo.isClient = !oo.isServer;\noo.classmanager = cm\noo.orm = require(\"./orm\")\noo.query = require(\"./serverquery\")\noo.explorer = require(\"./both/explorer\")\n//context related accessors\noo.contextmanager = require(\"./contextmanager\")\n//context db accessors\noo.getDBConnection = oo.contextmanager.getDBConnection.bind(oo.contextmanager);\noo.beginTransaction = oo.contextmanager.beginTransaction.bind(oo.contextmanager);\noo.commit = oo.contextmanager.commit.bind(oo.contextmanager);\noo.rollback = oo.contextmanager.rollback.bind(oo.contextmanager);\n//context user accessors\noo.currentUser = oo.contextmanager.currentUser.bind(oo.contextmanager);\noo.login = login;\noo.getRouter = function getRouter() {return require(\"./router\")};\nmodule.exports = oo;"]}