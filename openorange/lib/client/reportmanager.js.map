{"version":3,"sources":["reportmanager.es6"],"names":[],"mappings":"AAAA;;AACA,CAAC,YAAY;AACT,QAAI,IAAI,QAAQ,YAAR,CAAR;AACA,QAAI,KAAK,QAAQ,YAAR,EAAsB,YAA/B;AACA,QAAI,KAAK,GAAG,YAAZ;;AAEA,QAAI,kBAAkB,OAAO,MAAP,CAAc,IAAd,CAAtB;AACA,oBAAgB,OAAhB,GAA0B,EAA1B;AACA,oBAAgB,IAAhB,GAAuB,UAAU,MAAV,EAAkB;AACrC,aAAK,MAAL,GAAc,MAAd;;AAEA,eAAO,IAAP;AACH,KAJD;;AAMA,oBAAgB,QAAhB,GAA2B,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACjD,gBAAQ,GAAR,CAAY,SAAZ,EAAuB,gBAAgB,OAAhB,CAAwB,MAA/C;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,gBAAgB,OAAhB,CAAwB,MAA5C,EAAoD,GAApD,EAAyD;AACrD,gBAAI,IAAI,gBAAgB,OAAhB,CAAwB,CAAxB,CAAR;AACA,oBAAQ,GAAR,CAAY,CAAZ,EAAe,EAAE,MAAjB,EAAyB,MAAzB;AACA,gBAAI,EAAE,MAAF,KAAa,MAAjB,EAAyB;AACrB,wBAAQ,GAAR,CAAY,mBAAmB,EAAE,MAAjC;AACA,kBAAE,SAAF,EAAa,IAAb,CAAkB,YAAlB,EAAgC,EAAE,MAAlC;AACH;AACJ;AACJ,KAVD;;AAYA,oBAAgB,iBAAhB,GAAoC,SAAS,MAAT,GAAkB;AAClD,YAAI,OAAO,IAAX;;AAEA,YAAI,OAAO,+BAAX;;AAEA,YAAI,IAAI,EAAE,IAAF,CAAR;;;;;;AAMA,aAAK,MAAL,GAAc,uBAAuB,gBAAgB,OAAhB,CAAwB,MAAxB,GAAiC,CAAxD,CAAd;AACA,gBAAQ,GAAR,CAAY,eAAZ,EAA6B,KAAK,MAAlC;AACA,wBAAgB,OAAhB,CAAwB,IAAxB,CAA6B,EAAC,QAAQ,KAAK,MAAd,EAAsB,SAAS,CAA/B,EAAkC,QAAQ,KAAK,MAA/C,EAAuD,WAAW,IAAlE,EAA7B;;;;AAIA,aAAK,WAAL,GAAmB,CAAnB;AACA,YAAI,MAAM,EAAE,sCAAsC,KAAK,MAA3C,GAAoD,IAApD,GAA2D,KAAK,MAAL,CAAY,QAAZ,EAA3D,GAAoF,WAAtF,CAAV;AACA,UAAE,mBAAF,EAAuB,MAAvB,CAA8B,GAA9B;;AAEA,UAAE,IAAF,CAAO,IAAP,EAAa,KAAK,MAAlB;;AAEA,UAAE,YAAF,EAAgB,MAAhB,CAAuB,CAAvB;;AAEA,UAAE,SAAF,EAAa,IAAb;AACH,KA1BD;;AA4BA,oBAAgB,MAAhB,GAAyB,SAAS,MAAT,GAAkB;AACvC,YAAI,OAAO,IAAX;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,MAAL,CAAY,OAAZ,EAAtB;AACH,KAHD;;AAKA,oBAAgB,UAAhB,GAA6B,SAAS,UAAT,CAAoB,EAApB,EAAwB;AACjD,eAAO,QAAQ,YAAR,EAAsB,YAAtB,CAAmC,QAAnC,CAA4C,iBAA5C,EAA+D,UAA/D,CAA0E,EAA1E,CAAP;AACH,KAFD;;AAIA,MAAE,MAAF,CAAS,IAAT,EAAe,OAAO,EAAtB,EAA0B,EAAC,eAAe,eAAhB,EAA1B;;AAEH,CAhED","file":"reportmanager.js","sourcesContent":["\"use strict\";\n(function () {\n    var _ = require(\"underscore\");\n    var oo = require(\"openorange\").classmanager;\n    var cm = oo.classmanager;\n\n    var ReportContainer = Object.create(null);\n    ReportContainer.reports = [];\n    ReportContainer.init = function (report) {\n        this.report = report;\n        //this.windowjson = JSON.parse(JSON.stringify(this.report.getDescription().window));   //deep clone of the object because I need to add some metadata to it\n        return this\n    }\n\n    ReportContainer.setFocus = function setFocus(report) {\n        console.log(\"LENGTH:\", ReportContainer.reports.length)\n        for (var i = 0; i < ReportContainer.reports.length; i++) {\n            var w = ReportContainer.reports[i];\n            console.log(i, w.report, report)\n            if (w.report === report) {\n                console.log(\"report found: \" + w.tab_id)\n                $('ul.tabs').tabs('select_tab', w.tab_id);\n            }\n        }\n    }\n\n    ReportContainer.appendToWorkspace = function render() {\n        var self = this;\n        //console.log(containerElement)\n        var html = '<div class=\"container\"></div>';\n\n        var w = $(html)\n\n        //w.append('<p>HOLA MUNDO</p>');\n        //w.append(self.createToolBar());\n        //w.append('<table class=\"recordlist\"><thead></thead><tbody></tbody></table>')\n        //self.fillTable(w)\n        this.tab_id = \"tab_reportwindow_\" + (ReportContainer.reports.length + 1);\n        console.log(\"ADING REPORT:\", this.tab_id)\n        ReportContainer.reports.push({report: this.report, element: w, tab_id: this.tab_id, container: self});\n        //w.append(self.createComponent(this.windowjson));\n        //w.append(self.createPasteWindow());\n        //console.log(this.windowjson)\n        this.__element__ = w;\n        var tab = $('<li class=\"tab col s3\"><a href=\"#' + this.tab_id + '\">' + this.report.getTitle() + '</a></li>');\n        $('ul.tabs.workspace').append(tab);\n\n        w.attr('id', this.tab_id);\n\n        $('#workspace').append(w);\n\n        $('ul.tabs').tabs();\n    };\n\n    ReportContainer.render = function render() {\n        var self = this\n        self.__element__.html(this.report.getHTML())\n    };\n\n    ReportContainer.findReport = function findReport(id) {\n        return require('openorange').classmanager.getClass('Embedded_Report').findReport(id);\n    }\n\n    $.extend(true, window.oo, {reportmanager: ReportContainer})\n    //window.ReportManager = ReportContainer; //para hacer global la variable ReportContainer\n})();\n\n\n"]}